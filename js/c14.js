'use strict';
(function ()
    /* Called:undefined | Scope Closed:true*/
    {
        function _scaleImageSize(size)
            /*Scope Closed:false | writes:true*/
            {
                this.QQOO = 2147483648;
                this[b[129]] = 1103515245;
                this[b[194]] = 12345;
                this[b[168]] = size ? size : Math(Math() * (this.QQOO - 1));
            }
        function clearphoto(a)
            /*Scope Closed:false | writes:true*/
            {
                var ret = new Image();
                ret[b[162]] = a[b[54]]('image/png');
                ret[b[187]] = a[b[187]];
                ret[b[236]] = a[b[236]];
                ret.O00OO0o = 1;
                return ret;
            }
        function moveSchoolPic()
            /*Scope Closed:false | writes:true*/
            {
                if (va[b[187]] != L[b[118]]) {
                    va[b[187]] = L[b[118]];
                    aa = va[b[187]];
                    S = va[b[187]] / 2;
                }
                if (va[b[236]] != L[b[151]]) {
                    va[b[236]] = L[b[151]];
                    ma = va[b[236]];
                    ka = va[b[236]] / 2;
                }
                Ge = {
                    x: S,
                    y: ka
                };
                var bodyContentWidth = va[b[187]];
                var xlw = va[b[236]];
                qc = -1 === Fb ? Ic / Jc : Fb;
                va[b[187]] = bodyContentWidth * qc;
                va[b[236]] = xlw * qc;
                va[b[120]][b[187]] = va[b[187]] + 'px';
                va[b[120]][b[236]] = va[b[236]] + 'px';
                l[b[228]](qc, qc);
                if (p) {
                    p.oOO.oQOooO0 = bodyContentWidth;
                    p.oOO.oQoOOOQ = xlw;
                }
                if (Wb.QoOOO) {
                    Wb[b[75]]();
                } else {
                    if (D.QoOOO) {
                        D[b[75]]();
                    } else {
                        if (z.QoOOO) {
                            z[b[75]]();
                        } else {
                            if (jb.QoOOO) {
                                jb[b[75]]();
                            }
                        }
                    }
                }
            }
        function _listHistoryForWebApp(options, callback)
            /*Scope Closed:false | writes:false*/
            {
                var code = 0;
                for (; code < Kc[b[176]]; code = code + callback) {
                    var window = Kc[code];
                    if (window[0] === options) {
                        var f = window[1];
                        var helloComponent = window[2];
                        var itersortfunc = window[3];
                        window = oOQo[window[0]];
                        if (void 0 !== window) {
                            var name = 0;
                            for (; 2 > name; name++) {
                                var ret = window[f][name];
                                var animationRate = 193 * itersortfunc / r.OQOQO;
                                var m = 193 * helloComponent / r.QQoQ0;
                                var i = ret[b[187]] / 3.5;
                                var n = ret[b[236]] / 3.5;
                                OO[e.Qo0QoOQ][name][b[230]](ret, animationRate - i / 2, m - n / 2, i, n);
                                animationRate = 600 * itersortfunc / r.OQOQO;
                                m = 600 * helloComponent / r.QQoQ0;
                                i = ret[b[187]] / 1.5;
                                n = ret[b[236]] / 1.5;
                                OO[e.oQOQOO0][name][b[230]](ret, animationRate - i / 2, m - n / 2, i, n);
                            }
                        }
                    }
                }
            }
        function equal(context, value, item, target)
            /*Scope Closed:false | writes:true*/
            {
                if (value) {
                    context[b[219]] = value;
                    context[b[175]]();
                }
                if (item) {
                    context[b[148]] = target;
                    context[b[165]] = item;
                    context[b[216]]();
                }
            }
        function chroma(obj, key, v, name, num, val)
            /*Scope Closed:false | writes:false*/
            {
                if (name < 2 * val) {
                    val = name / 2;
                }
                if (num < 2 * val) {
                    val = num / 2;
                }
                if (0 > val) {
                    val = 0;
                }
                obj[b[19]]();
                obj[b[224]](key + 0, v);
                obj[b[91]](key + name, v, key + name, v + num, val);
                obj[b[91]](key + name, v + num, key, v + num, val);
                obj[b[91]](key, v + num, key, v, val);
                obj[b[91]](key, v, key + name, v, val);
                obj[b[238]]();
            }
        function callback(obj, elem, fn, key)
            /*Scope Closed:false | writes:false*/
            {
                obj[b[19]]();
                obj[b[53]](elem, fn, key, 0, 2 * Math[b[46]]);
            }
        function reportException(map, e, label, exception, data)
            /*Scope Closed:false | writes:true*/
            {
                map[b[19]]();
                map[b[253]] = 'round';
                map[b[53]](e, label, exception, 0, 2 * Math[b[46]] * data);
            }
        function get(c, m, a, p)
            /*Scope Closed:false | writes:false*/
            {
                var number = 2 * Math[b[46]] / m;
                c[b[19]]();
                var reader = [{
                        x: a,
                        y: 0
                    }];
                var o = [];
                var i = 1;
                for (; i < m; i++) {
                    reader[b[73]]({
                        x: Math(i * number) * a,
                        y: Math(i * number) * a
                    });
                    var func = reader[b[176]];
                    o[b[73]](QoO0.oQoQo0o(reader[func - 2], reader[func - 1]));
                }
                o[b[73]](QoO0.oQoQo0o(reader[[{
                        x: a,
                        y: 0
                    }][b[176]] - 1], {
                    x: a,
                    y: 0
                }));
                a = o[[][b[176]] - 1];
                c[b[224]](a[b[276]], a[b[134]]);
                i = 0;
                for (; i < m; i++) {
                    c[b[91]](reader[i][b[276]], reader[i][b[134]], o[i][b[276]], o[i][b[134]], p);
                }
                c[b[238]]();
            }
        function onGetEnabled(event, data)
            /*Scope Closed:false | writes:true*/
            {
                var c = document('canvas');
                var map = c[b[9]]('2d');
                var d = Math(data[b[187]] * data[b[187]] + data[b[236]] * data[b[236]]);
                d2 = d / 2;
                c[b[187]] = d;
                c[b[236]] = d;
                map[b[150]](d2, d2);
                map[b[65]](event);
                map[b[230]](data, -data[b[187]] / 2, -data[b[236]] / 2);
                return c;
            }
        function cmp(a, p)
            /*Scope Closed:false | writes:true*/
            {
                var cmp = document('canvas');
                var c = cmp[b[9]]('2d');
                var expected = 120 * a;
                var got = 110 * a;
                var r = 20 * a;
                var w = 112 * a;
                var tx = 82 * a;
                var scaled_w = w / 2;
                var x_index_p = tx / 2;
                var a3 = 4 * a;
                cmp[b[187]] = expected;
                cmp[b[236]] = got;
                c[b[277]] = 1;
                c[b[150]](expected / 2, got / 2);
                chroma(c, -(w / 2), -(tx / 2), w, tx, r);
                equal(c, p, p, a3);
                return cmp;
            }
        function drawBurret(radius, result, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 264 * radius;
                hash[b[236]] = 246 * radius;
                ctx[b[150]](0, 10 * radius);
                ctx[b[277]] = result ? 0.5 : 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](75 * radius, 54 * radius);
                ctx[b[62]](79 * radius, 21 * radius, 131 * radius, 13 * radius, 153 * radius, 36 * radius);
                ctx[b[62]](204 * radius, 27 * radius, 221 * radius, 52 * radius, 216 * radius, 83 * radius);
                ctx[b[62]](241 * radius, 103 * radius, 232 * radius, 138 * radius, 214 * radius, 147 * radius);
                ctx[b[62]](223 * radius, 184 * radius, 201 * radius, 200 * radius, 175 * radius, 199 * radius);
                ctx[b[62]](156 * radius, 218 * radius, 135 * radius, 222 * radius, 114 * radius, 203 * radius);
                ctx[b[62]](62 * radius, 213 * radius, 66 * radius, 189 * radius, 59 * radius, 170 * radius);
                ctx[b[62]](27 * radius, 164 * radius, 31 * radius, 134 * radius, 38 * radius, 123 * radius);
                ctx[b[62]](11 * radius, 80 * radius, 51 * radius, 52 * radius, 75 * radius, 54 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[150]](0, -10 * radius);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](75 * radius, 54 * radius);
                ctx[b[62]](79 * radius, 21 * radius, 131 * radius, 13 * radius, 153 * radius, 36 * radius);
                ctx[b[62]](204 * radius, 27 * radius, 221 * radius, 52 * radius, 216 * radius, 83 * radius);
                ctx[b[62]](241 * radius, 103 * radius, 232 * radius, 138 * radius, 214 * radius, 147 * radius);
                ctx[b[62]](223 * radius, 184 * radius, 201 * radius, 200 * radius, 175 * radius, 199 * radius);
                ctx[b[62]](156 * radius, 218 * radius, 135 * radius, 222 * radius, 114 * radius, 203 * radius);
                ctx[b[62]](62 * radius, 213 * radius, 66 * radius, 189 * radius, 59 * radius, 170 * radius);
                ctx[b[62]](27 * radius, 164 * radius, 31 * radius, 134 * radius, 38 * radius, 123 * radius);
                ctx[b[62]](11 * radius, 80 * radius, 51 * radius, 52 * radius, 75 * radius, 54 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[1], testCase[2], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](121 * radius, 102 * radius);
                ctx[b[62]](111 * radius, 80 * radius, 110 * radius, 66 * radius, 108 * radius, 51 * radius);
                ctx[b[62]](119 * radius, 65 * radius, 129 * radius, 85 * radius, 135 * radius, 99 * radius);
                ctx[b[62]](142 * radius, 67 * radius, 146 * radius, 60 * radius, 152 * radius, 50 * radius);
                ctx[b[62]](154 * radius, 71 * radius, 152 * radius, 85 * radius, 149 * radius, 104 * radius);
                ctx[b[62]](166 * radius, 88 * radius, 175 * radius, 83 * radius, 188 * radius, 78 * radius);
                ctx[b[62]](179 * radius, 91 * radius, 170 * radius, 103 * radius, 160 * radius, 112 * radius);
                ctx[b[62]](186 * radius, 107 * radius, 191 * radius, 107 * radius, 204 * radius, 108 * radius);
                ctx[b[62]](195 * radius, 114 * radius, 179 * radius, 120 * radius, 163 * radius, 123 * radius);
                ctx[b[62]](183 * radius, 130 * radius, 186 * radius, 135 * radius, 192 * radius, 140 * radius);
                ctx[b[62]](179 * radius, 141 * radius, 164 * radius, 139 * radius, 153 * radius, 135 * radius);
                ctx[b[62]](158 * radius, 145 * radius, 163 * radius, 159 * radius, 165 * radius, 177 * radius);
                ctx[b[62]](154 * radius, 166 * radius, 145 * radius, 153 * radius, 138 * radius, 139 * radius);
                ctx[b[62]](133 * radius, 155 * radius, 125 * radius, 170 * radius, 117 * radius, 182 * radius);
                ctx[b[62]](116 * radius, 160 * radius, 119 * radius, 151 * radius, 124 * radius, 138 * radius);
                ctx[b[62]](107 * radius, 150 * radius, 95 * radius, 156 * radius, 82 * radius, 159 * radius);
                ctx[b[62]](94 * radius, 140 * radius, 101 * radius, 136 * radius, 113 * radius, 128 * radius);
                ctx[b[62]](78 * radius, 123 * radius, 75 * radius, 121 * radius, 67 * radius, 118 * radius);
                ctx[b[62]](85 * radius, 112 * radius, 94 * radius, 112 * radius, 111 * radius, 113 * radius);
                ctx[b[62]](89 * radius, 97 * radius, 85 * radius, 93 * radius, 78 * radius, 82 * radius);
                ctx[b[62]](92 * radius, 85 * radius, 101 * radius, 90 * radius, 121 * radius, 102 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](128 * radius, 103 * radius);
                ctx[b[62]](111 * radius, 112 * radius, 117 * radius, 136 * radius, 140 * radius, 130 * radius);
                ctx[b[62]](151 * radius, 126 * radius, 156 * radius, 115 * radius, 155 * radius, 107 * radius);
                ctx[b[62]](155 * radius, 96 * radius, 154 * radius, 94 * radius, 148 * radius, 94 * radius);
                ctx[b[62]](141 * radius, 94 * radius, 146 * radius, 104 * radius, 136 * radius, 104 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3], testCase[4], 4 * radius);
                return hash;
            }
        function addTab(item, cmp, options)
            /*Scope Closed:false | writes:true*/
            {
                cmp = document('canvas');
                var a = cmp[b[9]]('2d');
                cmp[b[187]] = 70 * item;
                cmp[b[236]] = 70 * item;
                a[b[277]] = 0.5;
                callback(a, 26 * item, 26 * item, 9 * item);
                equal(a, options[0]);
                callback(a, 56 * item, 36 * item, 9 * item);
                equal(a, options[1]);
                callback(a, 40 * item, 50 * item, 9 * item);
                equal(a, options[2]);
                a[b[277]] = 1;
                callback(a, 26 * item, 26 * item, 5 * item);
                equal(a, options[0]);
                callback(a, 56 * item, 36 * item, 5 * item);
                equal(a, options[1]);
                callback(a, 40 * item, 50 * item, 5 * item);
                equal(a, options[2]);
                return cmp;
            }
        function wrap(n, data, options)
            /*Scope Closed:false | writes:true*/
            {
                data = document('canvas');
                var a = data[b[9]]('2d');
                data[b[187]] = 22 * n;
                data[b[236]] = 22 * n;
                a[b[277]] = 0.4;
                callback(a, 11 * n, 11 * n, 10 * n);
                equal(a, options[0]);
                a[b[277]] = 0.7;
                callback(a, 11 * n, 11 * n, 7 * n);
                equal(a, options[0]);
                a[b[277]] = 1;
                callback(a, 11 * n, 11 * n, 4 * n);
                equal(a, options[0]);
                return data;
            }
        function registerDOMElement(a, el, test)
            /*Scope Closed:false | writes:true*/
            {
                el = document('canvas');
                var c = el[b[9]]('2d');
                el[b[187]] = 248 * a;
                el[b[236]] = 247 * a;
                c[b[33]]();
                c[b[150]](69.5 * a, 145 * a);
                chroma(c, -8.5 * a, -63 * a, 17 * a, 127 * a, 1 * a);
                c[b[210]]();
                equal(c, test[0]);
                c[b[33]]();
                c[b[150]](183 * a, 145 * a);
                chroma(c, -8 * a, -63 * a, 16 * a, 126 * a, 1 * a);
                c[b[210]]();
                equal(c, test[0]);
                c[b[33]]();
                c[b[150]](123.5 * a, 62.5 * a);
                c[b[65]](6.28);
                chroma(c, -84.5 * a, -25.5 * a, 169 * a, 51 * a, 5 * a);
                c[b[210]]();
                equal(c, test[2], test[1], 6 * a);
                c[b[33]]();
                c[b[150]](123.5 * a, 118 * a);
                c[b[65]](6.24);
                chroma(c, -85.5 * a, -24 * a, 169 * a, 48 * a, 5 * a);
                c[b[210]]();
                equal(c, test[3], test[1], 6 * a);
                c[b[33]]();
                c[b[150]](122 * a, 177.5 * a);
                c[b[65]](6.32);
                chroma(c, -84 * a, -23.5 * a, 169 * a, 47 * a, 5 * a);
                c[b[210]]();
                equal(c, test[2], test[1], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](37 * a, 157 * a);
                c[b[62]](49 * a, 160 * a, 49 * a, 160 * a, 61 * a, 163 * a);
                c[b[62]](49.5 * a, 165.5 * a, 49.5 * a, 165.5 * a, 38 * a, 168 * a);
                c[b[238]]();
                equal(c, test[1]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](205 * a, 175 * a);
                c[b[62]](192.5 * a, 180 * a, 192.5 * a, 180 * a, 180 * a, 185 * a);
                c[b[62]](193 * a, 188 * a, 193 * a, 188 * a, 206 * a, 191 * a);
                c[b[238]]();
                equal(c, test[1]);
                return el;
            }
        function alpha(a, ctx, args)
            /*Scope Closed:false | writes:true*/
            {
                ctx = document('canvas');
                var c = ctx[b[9]]('2d');
                ctx[b[187]] = 248 * a;
                ctx[b[236]] = 247 * a;
                c[b[33]]();
                c[b[150]](182 * a, 120 * a);
                chroma(c, -8 * a, -67 * a, 16 * a, 134 * a, 1 * a);
                c[b[210]]();
                equal(c, args[0]);
                c[b[33]]();
                c[b[150]](68.5 * a, 127.5 * a);
                chroma(c, -8.5 * a, -70.5 * a, 17 * a, 141 * a, 1 * a);
                c[b[210]]();
                equal(c, args[0]);
                c[b[33]]();
                c[b[150]](123.5 * a, 68 * a);
                chroma(c, -82.5 * a, -24 * a, 165 * a, 48 * a, 4 * a);
                c[b[210]]();
                equal(c, args[2], args[1], 6 * a);
                c[b[33]]();
                c[b[150]](123 * a, 179.5 * a);
                chroma(c, -83 * a, -24.5 * a, 166 * a, 49 * a, 4 * a);
                c[b[210]]();
                equal(c, args[2], args[1], 6 * a);
                c[b[33]]();
                c[b[150]](123.5 * a, 123.5 * a);
                c[b[65]](6.24);
                chroma(c, -82.5 * a, -24.5 * a, 165 * a, 49 * a, 4 * a);
                c[b[210]]();
                equal(c, args[3], args[1], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](204 * a, 112 * a);
                c[b[62]](149 * a, 121.5 * a, 96 * a, 130 * a, 94 * a, 131 * a);
                c[b[62]](149.5 * a, 127.5 * a, 149.5 * a, 127.5 * a, 205 * a, 124 * a);
                c[b[238]]();
                equal(c, args[1]);
                return ctx;
            }
        function average(a, result, item)
            /*Scope Closed:false | writes:true*/
            {
                result = document('canvas');
                var c = result[b[9]]('2d');
                result[b[187]] = 248 * a;
                result[b[236]] = 247 * a;
                c[b[33]]();
                c[b[150]](183 * a, 107 * a);
                chroma(c, -8 * a, -70.5 * a, 16 * a, 141 * a, 1 * a);
                c[b[210]]();
                equal(c, item[0]);
                c[b[33]]();
                c[b[150]](69.5 * a, 110 * a);
                chroma(c, -8.5 * a, -71 * a, 17 * a, 143 * a, 1 * a);
                c[b[210]]();
                equal(c, item[0]);
                c[b[33]]();
                c[b[150]](123.5 * a, 181 * a);
                chroma(c, -84.5 * a, -26 * a, 169 * a, 52 * a, 5 * a);
                c[b[210]]();
                equal(c, item[2], item[1], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](41 * a, 95 * a);
                c[b[62]](105 * a, 96 * a, 113 * a, 99 * a, 134 * a, 102 * a);
                c[b[62]](147 * a, 106 * a, 173 * a, 100 * a, 207 * a, 105 * a);
                c[b[62]](210 * a, 105 * a, 207 * a, 140 * a, 207 * a, 154 * a);
                c[b[62]](123.5 * a, 151.5 * a, 123.5 * a, 151.5 * a, 40 * a, 149 * a);
                c[b[62]](37 * a, 145 * a, 39 * a, 95 * a, 41 * a, 96 * a);
                c[b[238]]();
                equal(c, item[2], item[1], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](68 * a, 75 * a);
                c[b[62]](54 * a, 72.5 * a, 54 * a, 72.5 * a, 40 * a, 70 * a);
                c[b[62]](38 * a, 46 * a, 40 * a, 46 * a, 53 * a, 46 * a);
                c[b[62]](201 * a, 41 * a, 201 * a, 41 * a, 201 * a, 42 * a);
                c[b[62]](211 * a, 40 * a, 208 * a, 53 * a, 208 * a, 72 * a);
                c[b[62]](209 * a, 91 * a, 210 * a, 96 * a, 194 * a, 94 * a);
                c[b[62]](119 * a, 97 * a, 119 * a, 97 * a, 44 * a, 100 * a);
                c[b[62]](39 * a, 99 * a, 40 * a, 96 * a, 40 * a, 80 * a);
                c[b[62]](54 * a, 77.5 * a, 54 * a, 77.5 * a, 68 * a, 75 * a);
                c[b[238]]();
                equal(c, item[3], item[1], 6 * a);
                return result;
            }
        function render(a, o, item)
            /*Scope Closed:false | writes:true*/
            {
                o = document('canvas');
                var c = o[b[9]]('2d');
                o[b[187]] = 191 * a;
                o[b[236]] = 153 * a;
                c[b[277]] = 0.5;
                c[b[150]](0, 10 * a);
                c[b[33]]();
                c[b[150]](97.49996948242188 * a, 95.12844848632812 * a);
                chroma(c, -62.5 * a, -41.5 * a, 125 * a, 83 * a, 20 * a);
                c[b[210]]();
                equal(c, item[0], item[0], 4 * a);
                c[b[277]] = 1;
                c[b[150]](0, -10 * a);
                c[b[33]]();
                c[b[150]](97.49996948242188 * a, 95.12844848632812 * a);
                chroma(c, -62.5 * a, -41.5 * a, 125 * a, 83 * a, 20 * a);
                c[b[210]]();
                equal(c, item[1], item[2], 4 * a);
                c[b[7]] = 'destination-out';
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](26.999969482421875 * a, 50.850677490234375 * a);
                c[b[62]](46.499969482421875 * a, 64.85067749023438 * a, 46.499969482421875 * a, 64.85067749023438 * a, 65.99996948242188 * a, 78.85067749023438 * a);
                c[b[62]](80.99996948242188 * a, 87.85067749023438 * a, 105.99996948242188 * a, 82.85067749023438 * a, 114.99996948242188 * a, 80.85067749023438 * a);
                c[b[62]](130.99996948242188 * a, 69.85067749023438 * a, 152.99996948242188 * a, 70.85067749023438 * a, 166.99996948242188 * a, 67.85067749023438 * a);
                c[b[62]](156.99996948242188 * a, 52.850677490234375 * a, 156.99996948242188 * a, 52.850677490234375 * a, 146.99996948242188 * a, 37.850677490234375 * a);
                c[b[62]](101.49996948242188 * a, 37.350677490234375 * a, 101.49996948242188 * a, 37.350677490234375 * a, 55.999969482421875 * a, 36.850677490234375 * a);
                c[b[238]]();
                equal(c, item[2], item[3], 4 * a);
                c[b[7]] = 'source-over';
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](40.999969482421875 * a, 59.850677490234375 * a);
                c[b[62]](41.999969482421875 * a, 50.850677490234375 * a, 47.999969482421875 * a, 47.850677490234375 * a, 56.999969482421875 * a, 49.850677490234375 * a);
                c[b[62]](65.99996948242188 * a, 41.850677490234375 * a, 76.99996948242188 * a, 42.850677490234375 * a, 90.99996948242188 * a, 47.850677490234375 * a);
                c[b[62]](94.99996948242188 * a, 42.850677490234375 * a, 104.99996948242188 * a, 42.850677490234375 * a, 114.99996948242188 * a, 47.850677490234375 * a);
                c[b[62]](131.99996948242188 * a, 42.850677490234375 * a, 142.99996948242188 * a, 48.850677490234375 * a, 145.99996948242188 * a, 56.850677490234375 * a);
                c[b[62]](160.99996948242188 * a, 63.850677490234375 * a, 154.99996948242188 * a, 69.85067749023438 * a, 155.99996948242188 * a, 70.85067749023438 * a);
                c[b[62]](141.99996948242188 * a, 71.85067749023438 * a, 141.99996948242188 * a, 71.85067749023438 * a, 127.99996948242188 * a, 72.85067749023438 * a);
                c[b[62]](110.99996948242188 * a, 83.85067749023438 * a, 107.99996948242188 * a, 82.85067749023438 * a, 90.99996948242188 * a, 85.85067749023438 * a);
                c[b[62]](70.99996948242188 * a, 83.85067749023438 * a, 64.99996948242188 * a, 79.85067749023438 * a, 53.999969482421875 * a, 70.85067749023438 * a);
                c[b[238]]();
                equal(c, item[3], item[4], 4 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](33.999969482421875 * a, 65.85067749023438 * a);
                c[b[62]](36.999969482421875 * a, 59.850677490234375 * a, 34.999969482421875 * a, 60.850677490234375 * a, 39.999969482421875 * a, 59.850677490234375 * a);
                c[b[62]](47.999969482421875 * a, 61.850677490234375 * a, 62.999969482421875 * a, 76.85067749023438 * a, 74.99996948242188 * a, 79.85067749023438 * a);
                c[b[62]](93.99996948242188 * a, 85.85067749023438 * a, 111.99996948242188 * a, 83.85067749023438 * a, 124.99996948242188 * a, 70.85067749023438 * a);
                c[b[62]](129.99996948242188 * a, 67.85067749023438 * a, 145.99996948242188 * a, 65.85067749023438 * a, 159.99996948242188 * a, 67.85067749023438 * a);
                c[b[62]](159.99996948242188 * a, 71.85067749023438 * a, 159.99996948242188 * a, 71.85067749023438 * a, 159.99996948242188 * a, 75.85067749023438 * a);
                c[b[62]](146.99996948242188 * a, 72.85067749023438 * a, 144.99996948242188 * a, 75.85067749023438 * a, 143.99996948242188 * a, 82.85067749023438 * a);
                c[b[62]](144.99996948242188 * a, 86.85067749023438 * a, 140.99996948242188 * a, 90.85067749023438 * a, 137.99996948242188 * a, 86.85067749023438 * a);
                c[b[62]](139.99996948242188 * a, 72.85067749023438 * a, 135.99996948242188 * a, 72.85067749023438 * a, 133.99996948242188 * a, 82.85067749023438 * a);
                c[b[62]](127.99996948242188 * a, 88.85067749023438 * a, 124.99996948242188 * a, 70.85067749023438 * a, 116.99996948242188 * a, 86.85067749023438 * a);
                c[b[62]](110.99996948242188 * a, 91.85067749023438 * a, 96.99996948242188 * a, 81.85067749023438 * a, 89.99996948242188 * a, 90.85067749023438 * a);
                c[b[62]](85.99996948242188 * a, 92.85067749023438 * a, 81.99996948242188 * a, 95.85067749023438 * a, 76.99996948242188 * a, 86.85067749023438 * a);
                c[b[62]](67.99996948242188 * a, 93.85067749023438 * a, 67.99996948242188 * a, 91.85067749023438 * a, 60.999969482421875 * a, 79.85067749023438 * a);
                c[b[62]](53.999969482421875 * a, 71.85067749023438 * a, 52.999969482421875 * a, 72.85067749023438 * a, 46.999969482421875 * a, 77.85067749023438 * a);
                c[b[62]](41.999969482421875 * a, 78.85067749023438 * a, 42.999969482421875 * a, 69.85067749023438 * a, 33.999969482421875 * a, 65.85067749023438 * a);
                c[b[238]]();
                equal(c, item[5], item[6], 4 * a);
                callback(c, 68 * a, 111.29513549804688 * a, 15 * a);
                equal(c, item[7], item[8], 4 * a);
                callback(c, 123 * a, 111.29510498046875 * a, 15 * a);
                equal(c, item[7], item[8], 4 * a);
                callback(c, 63 * a, 106 * a, 5 * a);
                equal(c, item[9]);
                callback(c, 118 * a, 106 * a, 5 * a);
                equal(c, item[9]);
                return o;
            }
        function negate(a, c, test)
            /*Scope Closed:false | writes:true*/
            {
                c = document('canvas');
                var top = c[b[9]]('2d');
                c[b[187]] = 191 * a;
                c[b[236]] = 153 * a;
                top[b[277]] = 0.5;
                top[b[150]](0, 10 * a);
                top[b[33]]();
                top[b[150]](96.49996948242188 * a, 66.79510498046875 * a);
                top[b[65]](0);
                chroma(top, -79.5 * a, -48.5 * a, 159 * a, 97 * a, 22 * a);
                top[b[210]]();
                equal(top, test[0], test[0], 4 * a);
                top[b[277]] = 1;
                top[b[150]](0, -10 * a);
                top[b[33]]();
                top[b[150]](96.49996948242188 * a, 66.79510498046875 * a);
                top[b[65]](0);
                chroma(top, -79.5 * a, -48.5 * a, 159 * a, 97 * a, 22 * a);
                top[b[210]]();
                equal(top, test[1], test[2], 4 * a);
                top[b[150]](2 * a, 0);
                top[b[19]]();
                top[b[253]] = 'round';
                top[b[4]] = 'round';
                top[b[224]](119 * a, 28 * a);
                top[b[62]](119 * a, 22 * a, 119 * a, 20 * a, 122 * a, 16 * a);
                top[b[62]](149 * a, 39 * a, 149 * a, 39 * a, 176 * a, 63 * a);
                top[b[62]](176 * a, 75 * a, 176 * a, 75 * a, 175 * a, 88 * a);
                top[b[62]](174 * a, 90 * a, 174 * a, 90 * a, 172 * a, 93 * a);
                top[b[62]](171 * a, 101 * a, 169 * a, 109 * a, 164 * a, 113 * a);
                top[b[62]](163 * a, 104 * a, 163 * a, 104 * a, 162 * a, 95 * a);
                top[b[62]](155 * a, 105 * a, 155 * a, 105 * a, 147 * a, 116 * a);
                top[b[62]](87 * a, 114 * a, 87 * a, 114 * a, 26 * a, 112 * a);
                top[b[62]](27 * a, 106 * a, 27 * a, 106 * a, 27 * a, 101 * a);
                top[b[62]](24 * a, 104 * a, 24 * a, 104 * a, 20 * a, 108 * a);
                top[b[62]](17 * a, 103 * a, 20 * a, 86 * a, 23 * a, 72 * a);
                top[b[62]](15 * a, 74 * a, 14 * a, 78 * a, 12 * a, 83 * a);
                top[b[62]](12 * a, 65 * a, 12 * a, 54 * a, 16 * a, 42 * a);
                top[b[62]](14 * a, 39 * a, 14 * a, 39 * a, 12 * a, 36 * a);
                top[b[62]](16 * a, 33 * a, 16 * a, 33 * a, 19 * a, 30 * a);
                top[b[62]](18 * a, 27 * a, 18 * a, 27 * a, 17 * a, 25 * a);
                top[b[62]](24 * a, 24 * a, 31 * a, 21 * a, 29 * a, 19 * a);
                top[b[62]](37 * a, 25 * a, 37 * a, 25 * a, 45 * a, 31 * a);
                top[b[62]](40 * a, 23 * a, 40 * a, 21 * a, 42 * a, 16 * a);
                top[b[62]](74 * a, 16 * a, 74 * a, 16 * a, 106 * a, 16 * a);
                top[b[62]](113 * a, 21 * a, 113 * a, 21 * a, 119 * a, 26 * a);
                top[b[238]]();
                equal(top, test[3], test[4], 4 * a);
                return c;
            }
        function getUrlFromDimensionRequestString(a, item)
            /*Scope Closed:false | writes:true*/
            {
                var url = document('canvas');
                var c = url[b[9]]('2d');
                url[b[187]] = 191 * a;
                url[b[236]] = 153 * a;
                c[b[33]]();
                c[b[150]](96.49996948242188 * a, 66.79510498046875 * a);
                chroma(c, -79.5 * a, -48.5 * a, 159 * a, 97 * a, 22 * a);
                c[b[210]]();
                equal(c, item[0], item[0], 4 * a);
                c[b[150]](2 * a, 0);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](119 * a, 28 * a);
                c[b[62]](119 * a, 22 * a, 119 * a, 20 * a, 122 * a, 16 * a);
                c[b[62]](149 * a, 39 * a, 149 * a, 39 * a, 176 * a, 63 * a);
                c[b[62]](176 * a, 75 * a, 176 * a, 75 * a, 175 * a, 88 * a);
                c[b[62]](174 * a, 90 * a, 174 * a, 90 * a, 172 * a, 93 * a);
                c[b[62]](171 * a, 101 * a, 169 * a, 109 * a, 164 * a, 113 * a);
                c[b[62]](163 * a, 104 * a, 163 * a, 104 * a, 162 * a, 95 * a);
                c[b[62]](155 * a, 105 * a, 155 * a, 105 * a, 147 * a, 116 * a);
                c[b[62]](87 * a, 114 * a, 87 * a, 114 * a, 26 * a, 112 * a);
                c[b[62]](27 * a, 106 * a, 27 * a, 106 * a, 27 * a, 101 * a);
                c[b[62]](24 * a, 104 * a, 24 * a, 104 * a, 20 * a, 108 * a);
                c[b[62]](17 * a, 103 * a, 20 * a, 86 * a, 23 * a, 72 * a);
                c[b[62]](15 * a, 74 * a, 14 * a, 78 * a, 12 * a, 83 * a);
                c[b[62]](12 * a, 65 * a, 12 * a, 54 * a, 16 * a, 42 * a);
                c[b[62]](14 * a, 39 * a, 14 * a, 39 * a, 12 * a, 36 * a);
                c[b[62]](16 * a, 33 * a, 16 * a, 33 * a, 19 * a, 30 * a);
                c[b[62]](18 * a, 27 * a, 18 * a, 27 * a, 17 * a, 25 * a);
                c[b[62]](24 * a, 24 * a, 31 * a, 21 * a, 29 * a, 19 * a);
                c[b[62]](37 * a, 25 * a, 37 * a, 25 * a, 45 * a, 31 * a);
                c[b[62]](40 * a, 23 * a, 40 * a, 21 * a, 42 * a, 16 * a);
                c[b[62]](74 * a, 16 * a, 74 * a, 16 * a, 106 * a, 16 * a);
                c[b[62]](113 * a, 21 * a, 113 * a, 21 * a, 119 * a, 26 * a);
                c[b[238]]();
                equal(c, item[0], item[0], 4 * a);
                c[b[33]]();
                c[b[150]](97.49996948242188 * a, 95.12844848632812 * a);
                chroma(c, -62.5 * a, -41.5 * a, 125 * a, 83 * a, 20 * a);
                c[b[210]]();
                equal(c, item[0], item[0], 4 * a);
                return url;
            }
        function bv_trim(k, s, chars)
            /*Scope Closed:false | writes:true*/
            {
                s = document('canvas');
                var c = s[b[9]]('2d');
                var value = 40 * k;
                var i = 40 * k;
                s[b[187]] = value;
                s[b[236]] = i;
                value = k * value / 2;
                i = k * i / 2;
                var f = 15 * k;
                c[b[33]]();
                c[b[150]](value, i);
                c[b[277]] = 1;
                callback(c, 0, 0, f);
                equal(c, chars[0]);
                f = 5 * k;
                c[b[150]](2 * k, 1 * k);
                c[b[277]] = 1;
                callback(c, 0, 0, f);
                equal(c, chars[1]);
                c[b[210]]();
                return s;
            }
        function provide(n, cmp, testCase, name)
            /*Scope Closed:false | writes:true*/
            {
                cmp = document('canvas');
                var a = cmp[b[9]]('2d');
                cmp[b[187]] = 185 * n;
                cmp[b[236]] = 240 * n;
                a[b[277]] = 0.5;
                a[b[150]](0, 10 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](44 * n, 137 * n);
                a[b[62]](60 * n, 87 * n, 68 * n, 66 * n, 92 * n, 67 * n);
                a[b[62]](115 * n, 64 * n, 129 * n, 97 * n, 137 * n, 136 * n);
                a[b[238]]();
                equal(a, testCase[0]);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](53 * n, 181 * n);
                a[b[62]](30 * n, 164 * n, 19 * n, 150 * n, 11 * n, 136 * n);
                a[b[62]](28 * n, 121 * n, 38 * n, 132 * n, 48 * n, 150 * n);
                a[b[238]]();
                equal(a, testCase[0]);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](63 * n, 208 * n);
                a[b[62]](75 * n, 224 * n, 86 * n, 228 * n, 93 * n, 228 * n);
                a[b[62]](104 * n, 229 * n, 116 * n, 219 * n, 122 * n, 205 * n);
                a[b[238]]();
                equal(a, testCase[0]);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](130 * n, 170 * n);
                a[b[62]](146 * n, 125 * n, 156 * n, 126 * n, 173 * n, 137 * n);
                a[b[62]](167 * n, 151 * n, 143 * n, 174 * n, 131 * n, 183 * n);
                a[b[238]]();
                equal(a, testCase[0]);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](39 * n, 140 * n);
                a[b[62]](75 * n, 126 * n, 113 * n, 127 * n, 143 * n, 137 * n);
                a[b[62]](141 * n, 186 * n, 130 * n, 202 * n, 113 * n, 214 * n);
                a[b[62]](85 * n, 228 * n, 56 * n, 219 * n, 48 * n, 173 * n);
                a[b[62]](40 * n, 148 * n, 43 * n, 145 * n, 39 * n, 140 * n);
                a[b[238]]();
                equal(a, testCase[0]);
                a[b[277]] = 1;
                a[b[150]](0, -10 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](44 * n, 137 * n);
                a[b[62]](60 * n, 87 * n, 68 * n, 66 * n, 92 * n, 67 * n);
                a[b[62]](115 * n, 64 * n, 129 * n, 97 * n, 137 * n, 136 * n);
                a[b[238]]();
                equal(a, testCase[1], testCase[2], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](53 * n, 181 * n);
                a[b[62]](30 * n, 164 * n, 19 * n, 150 * n, 11 * n, 136 * n);
                a[b[62]](28 * n, 121 * n, 38 * n, 132 * n, 48 * n, 150 * n);
                a[b[238]]();
                equal(a, testCase[1], testCase[2], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](63 * n, 208 * n);
                a[b[62]](75 * n, 224 * n, 86 * n, 228 * n, 93 * n, 228 * n);
                a[b[62]](104 * n, 229 * n, 116 * n, 219 * n, 122 * n, 205 * n);
                a[b[238]]();
                equal(a, testCase[1], testCase[2], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](130 * n, 170 * n);
                a[b[62]](146 * n, 125 * n, 156 * n, 126 * n, 173 * n, 137 * n);
                a[b[62]](167 * n, 151 * n, 143 * n, 174 * n, 131 * n, 183 * n);
                a[b[238]]();
                equal(a, testCase[1], testCase[2], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](39 * n, 140 * n);
                a[b[62]](75 * n, 126 * n, 113 * n, 127 * n, 143 * n, 137 * n);
                a[b[62]](141 * n, 186 * n, 130 * n, 202 * n, 113 * n, 214 * n);
                a[b[62]](85 * n, 228 * n, 56 * n, 219 * n, 48 * n, 173 * n);
                a[b[62]](40 * n, 148 * n, 43 * n, 145 * n, 39 * n, 140 * n);
                a[b[238]]();
                equal(a, testCase[1], testCase[2], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](59 * n, 99 * n);
                a[b[62]](71 * n, 68 * n, 81 * n, 68 * n, 94 * n, 67 * n);
                a[b[62]](105 * n, 66 * n, 119 * n, 75 * n, 123 * n, 96 * n);
                a[b[62]](104 * n, 91 * n, 101 * n, 94 * n, 94 * n, 97 * n);
                a[b[62]](76 * n, 92 * n, 73 * n, 93 * n, 60 * n, 99 * n);
                a[b[238]]();
                equal(a, testCase[3], testCase[2], 4 * n);
                if (0 === name) {
                    a[b[19]]();
                    a[b[253]] = 'round';
                    a[b[4]] = 'round';
                    a[b[224]](47 * n, 149 * n);
                    a[b[62]](43 * n, 140 * n, 48 * n, 130 * n, 59 * n, 127 * n);
                    a[b[62]](77 * n, 126 * n, 90 * n, 131 * n, 131 * n, 127 * n);
                    a[b[62]](143 * n, 130 * n, 144 * n, 143 * n, 132 * n, 154 * n);
                    a[b[62]](90 * n, 152 * n, 90 * n, 152 * n, 48 * n, 150 * n);
                    a[b[238]]();
                    equal(a, testCase[1]);
                    a[b[19]]();
                    a[b[253]] = 'round';
                    a[b[4]] = 'round';
                    a[b[224]](40 * n, 139 * n);
                    a[b[62]](48 * n, 113 * n, 76 * n, 119 * n, 91 * n, 126 * n);
                    a[b[62]](117 * n, 113 * n, 135 * n, 117 * n, 144 * n, 134 * n);
                    a[b[62]](144 * n, 138 * n, 144 * n, 138 * n, 144 * n, 142 * n);
                    a[b[62]](128 * n, 124 * n, 108 * n, 124 * n, 91 * n, 136 * n);
                    a[b[62]](59 * n, 124 * n, 50 * n, 137 * n, 42 * n, 148 * n);
                } else {
                    a[b[19]]();
                    a[b[253]] = 'round';
                    a[b[4]] = 'round';
                    a[b[224]](41 * n, 139 * n);
                    a[b[62]](53 * n, 117 * n, 69 * n, 118 * n, 92 * n, 127 * n);
                    a[b[62]](124 * n, 111 * n, 136 * n, 121 * n, 143 * n, 136 * n);
                    a[b[62]](142 * n, 144 * n, 142 * n, 144 * n, 141 * n, 152 * n);
                    a[b[62]](128 * n, 131 * n, 113 * n, 138 * n, 92 * n, 145 * n);
                    a[b[62]](57 * n, 133 * n, 57 * n, 147 * n, 44 * n, 154 * n);
                }
                a[b[238]]();
                equal(a, testCase[3], testCase[2], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](90 * n, 95 * n);
                a[b[62]](99 * n, 82 * n, 98 * n, 58 * n, 99 * n, 40 * n);
                a[b[62]](90 * n, 38 * n, 89 * n, 34 * n, 92 * n, 17 * n);
                a[b[62]](92 * n, 5 * n, 83 * n, 16 * n, 78 * n, 29 * n);
                a[b[62]](72 * n, 59 * n, 87 * n, 81 * n, 89 * n, 87 * n);
                a[b[238]]();
                equal(a, testCase[1], testCase[2], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](90 * n, 86 * n);
                a[b[62]](95 * n, 74 * n, 95 * n, 62 * n, 95 * n, 43 * n);
                a[b[62]](84 * n, 37 * n, 86 * n, 34 * n, 89 * n, 16 * n);
                a[b[62]](75 * n, 29 * n, 80 * n, 58 * n, 90 * n, 85 * n);
                a[b[238]]();
                equal(a, testCase[1], testCase[3], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](92 * n, 117 * n);
                a[b[62]](98 * n, 87 * n, 93 * n, 78 * n, 85 * n, 76 * n);
                a[b[62]](85.5 * n, 79.5 * n, 85.5 * n, 79.5 * n, 86 * n, 83 * n);
                a[b[62]](84 * n, 85.5 * n, 84 * n, 85.5 * n, 82 * n, 88 * n);
                a[b[62]](90 * n, 93 * n, 89 * n, 100 * n, 92 * n, 117 * n);
                a[b[238]]();
                equal(a, testCase[1], testCase[3], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](92 * n, 175 * n);
                a[b[62]](95 * n, 135 * n, 98 * n, 125 * n, 109 * n, 121 * n);
                a[b[62]](106 * n, 114 * n, 104 * n, 114 * n, 102 * n, 113 * n);
                a[b[62]](103 * n, 106 * n, 104 * n, 103 * n, 107 * n, 96 * n);
                a[b[62]](74 * n, 108 * n, 86 * n, 157 * n, 92 * n, 174 * n);
                a[b[238]]();
                equal(a, testCase[1], testCase[3], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](48 * n, 169 * n);
                a[b[62]](42 * n, 187 * n, 50 * n, 193 * n, 59 * n, 198 * n);
                a[b[238]]();
                equal(a, void 0, testCase[2], 5 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](136 * n, 171 * n);
                a[b[62]](139 * n, 186 * n, 138 * n, 191 * n, 124 * n, 199 * n);
                a[b[238]]();
                equal(a, void 0, testCase[2], 4 * n);
                callback(a, 63 * n, 180 * n, 15.231546211727817 * n);
                equal(a, testCase[4]);
                callback(a, 121 * n, 181 * n, 15.652475842498529 * n);
                equal(a, testCase[4]);
                callback(a, 58 * n, 175 * n, 5.656854249492381 * n);
                equal(a, testCase[2]);
                callback(a, 116 * n, 175 * n, 5.656854249492381 * n);
                equal(a, testCase[2]);
                return cmp;
            }
        function extCircleTo(radius, t)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 185 * radius;
                hash[b[236]] = 240 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](44 * radius, 137 * radius);
                ctx[b[62]](60 * radius, 87 * radius, 68 * radius, 66 * radius, 92 * radius, 67 * radius);
                ctx[b[62]](115 * radius, 64 * radius, 129 * radius, 97 * radius, 137 * radius, 136 * radius);
                ctx[b[238]]();
                equal(ctx, t[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](53 * radius, 181 * radius);
                ctx[b[62]](30 * radius, 164 * radius, 19 * radius, 150 * radius, 11 * radius, 136 * radius);
                ctx[b[62]](28 * radius, 121 * radius, 38 * radius, 132 * radius, 48 * radius, 150 * radius);
                ctx[b[238]]();
                equal(ctx, t[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](63 * radius, 208 * radius);
                ctx[b[62]](75 * radius, 224 * radius, 86 * radius, 228 * radius, 93 * radius, 228 * radius);
                ctx[b[62]](104 * radius, 229 * radius, 116 * radius, 219 * radius, 122 * radius, 205 * radius);
                ctx[b[238]]();
                equal(ctx, t[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](130 * radius, 170 * radius);
                ctx[b[62]](146 * radius, 125 * radius, 156 * radius, 126 * radius, 173 * radius, 137 * radius);
                ctx[b[62]](167 * radius, 151 * radius, 143 * radius, 174 * radius, 131 * radius, 183 * radius);
                ctx[b[238]]();
                equal(ctx, t[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](39 * radius, 140 * radius);
                ctx[b[62]](75 * radius, 126 * radius, 113 * radius, 127 * radius, 143 * radius, 137 * radius);
                ctx[b[62]](141 * radius, 186 * radius, 130 * radius, 202 * radius, 113 * radius, 214 * radius);
                ctx[b[62]](85 * radius, 228 * radius, 56 * radius, 219 * radius, 48 * radius, 173 * radius);
                ctx[b[62]](40 * radius, 148 * radius, 43 * radius, 145 * radius, 39 * radius, 140 * radius);
                ctx[b[238]]();
                equal(ctx, t[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](90 * radius, 95 * radius);
                ctx[b[62]](99 * radius, 82 * radius, 98 * radius, 58 * radius, 99 * radius, 40 * radius);
                ctx[b[62]](90 * radius, 38 * radius, 89 * radius, 34 * radius, 92 * radius, 17 * radius);
                ctx[b[62]](92 * radius, 5 * radius, 83 * radius, 16 * radius, 78 * radius, 29 * radius);
                ctx[b[62]](72 * radius, 59 * radius, 87 * radius, 81 * radius, 89 * radius, 87 * radius);
                ctx[b[238]]();
                equal(ctx, t[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](90 * radius, 86 * radius);
                ctx[b[62]](95 * radius, 74 * radius, 95 * radius, 62 * radius, 95 * radius, 43 * radius);
                ctx[b[62]](84 * radius, 37 * radius, 86 * radius, 34 * radius, 89 * radius, 16 * radius);
                ctx[b[62]](75 * radius, 29 * radius, 80 * radius, 58 * radius, 90 * radius, 85 * radius);
                ctx[b[238]]();
                equal(ctx, t[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](92 * radius, 117 * radius);
                ctx[b[62]](98 * radius, 87 * radius, 93 * radius, 78 * radius, 85 * radius, 76 * radius);
                ctx[b[62]](85.5 * radius, 79.5 * radius, 85.5 * radius, 79.5 * radius, 86 * radius, 83 * radius);
                ctx[b[62]](84 * radius, 85.5 * radius, 84 * radius, 85.5 * radius, 82 * radius, 88 * radius);
                ctx[b[62]](90 * radius, 93 * radius, 89 * radius, 100 * radius, 92 * radius, 117 * radius);
                ctx[b[238]]();
                equal(ctx, t[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](92 * radius, 175 * radius);
                ctx[b[62]](95 * radius, 135 * radius, 98 * radius, 125 * radius, 109 * radius, 121 * radius);
                ctx[b[62]](106 * radius, 114 * radius, 104 * radius, 114 * radius, 102 * radius, 113 * radius);
                ctx[b[62]](103 * radius, 106 * radius, 104 * radius, 103 * radius, 107 * radius, 96 * radius);
                ctx[b[62]](74 * radius, 108 * radius, 86 * radius, 157 * radius, 92 * radius, 174 * radius);
                ctx[b[238]]();
                equal(ctx, t[0]);
                return hash;
            }
        function calculate_ec(result)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var callbacks = hash[b[9]]('2d');
                hash[b[187]] = 200 * result;
                hash[b[236]] = 200 * result;
                result = exp(0.35, false, [
                    '#0e3022',
                    '#0b8052',
                    '#077b49'
                ]);
                callbacks[b[230]](result, 10, 10);
                result = log(0.9, false, [
                    '#3d2a6e',
                    '#8255b5'
                ]);
                callbacks[b[230]](result, 21, 20);
                result = log(0.9, false, [
                    '#3d2a6e',
                    '#8255b5'
                ]);
                callbacks[b[230]](result, 38, 28);
                result = log(0.9, false, [
                    '#3d2a6e',
                    '#8255b5'
                ]);
                callbacks[b[230]](result, 15, 37);
                result = log(0.9, false, [
                    '#3d2a6e',
                    '#8255b5'
                ]);
                callbacks[b[230]](result, 32, 45);
                return hash;
            }
        function evaluate(scale, position)
            /*Scope Closed:false | writes:true*/
            {
                var els = document('canvas');
                var c = els[b[9]]('2d');
                var px_duration = 100 * scale;
                var span = 100 * scale;
                els[b[187]] = px_duration;
                els[b[236]] = span;
                var a = 5 * scale;
                var height = 28 * scale;
                var N = a / 2;
                var perHeight = height / 2;
                c[b[150]](px_duration / 2, span / 2);
                px_duration = 0;
                for (; 4 > px_duration; px_duration++) {
                    chroma(c, -(a / 2), -(height / 2), a, height, 2 * scale);
                    c[b[65]](Math[b[46]] / 4);
                    equal(c, position);
                }
                c[b[53]](0, 0, 10 * scale, 0, 2 * Math[b[46]]);
                equal(c, position);
                c[b[7]] = 'destination-out';
                callback(c, 0, 0, 4 * scale);
                c[b[175]]();
                return els;
            }
        function redraw(step, data, elem)
            /*Scope Closed:false | writes:true*/
            {
                var map = document('canvas');
                var c = map[b[9]]('2d');
                var a = 32 * step;
                var value = 32 * step;
                var bBody = a / 2;
                var val = value / 2;
                map[b[187]] = a;
                map[b[236]] = value;
                a = 5 * step;
                value = 28 * step;
                var N = a / 2;
                var length = value / 2;
                c[b[150]](0 * step, 0 * step);
                c[b[150]](bBody, val);
                if (1 == elem) {
                    callback(c, 0, 0, 10 * step, 0);
                    equal(c, data[2], data[2], 3 * step);
                    elem = 0;
                    for (; 4 > elem; elem++) {
                        chroma(c, -(a / 2), -(value / 2), a, value, 2 * step);
                        c[b[65]](Math[b[46]] / 4);
                        equal(c, data[2], data[2], 4 * step);
                    }
                }
                callback(c, 0, 0, 10 * step, 0);
                equal(c, data[0], data[1], 1.5 * step);
                elem = 0;
                for (; 4 > elem; elem++) {
                    chroma(c, -(a / 2), -(value / 2), a, value, 2 * step);
                    c[b[65]](Math[b[46]] / 4);
                    equal(c, data[0], data[1], 1.5 * step);
                }
                callback(c, 0, 0, 10 * step, 0);
                equal(c, data[0]);
                callback(c, 0, 0, 4 * step, 0);
                equal(c, data[2], data[1], 1.5 * step);
                c[b[7]] = 'destination-out';
                callback(c, 0, 0, 4 * step, 0);
                equal(c, data[0], data[1], 2 * step);
                c[b[7]] = 'source-over';
                callback(c, 0, 0, 4 * step, 0);
                equal(c, void 0, data[1], 2 * step);
                return map;
            }
        function interpolate(a, value, item)
            /*Scope Closed:false | writes:true*/
            {
                var result = document('canvas');
                var c = result[b[9]]('2d');
                var m = 125 * a;
                var r = 95 * a;
                var g = 10 * a;
                var a2 = 8 * a;
                var w = 112 * a;
                var h = 82 * a;
                var scaled_w = w / 2;
                var yRadius = h / 2;
                var a3 = 4 * a;
                result[b[187]] = m;
                result[b[236]] = r;
                c[b[150]](m / 2 - 4 * a, r / 2 + 4 * a);
                c[b[277]] = value ? 0.5 : 1;
                chroma(c, -(w / 2), -(h / 2), w, h, g);
                equal(c, item[0]);
                c[b[277]] = 1;
                c[b[150]](0, -(8 * a));
                chroma(c, -(w / 2), -(h / 2), w, h, g);
                equal(c, item[1], item[2], a3);
                m = 55 * a;
                r = 45 * a;
                g = 5;
                c[b[150]](-40 * a, -30 * a);
                chroma(c, 0, 0, m, r, g);
                equal(c, item[3]);
                value = evaluate(0.7 * a, item[3]);
                c[b[230]](value, 45 * a, -25 * a);
                value = evaluate(0.7 * a, item[3]);
                c[b[230]](value, 45 * a, 15 * a);
                value = evaluate(1.2 * a, item[3]);
                c[b[230]](value, 28 * a, -30 * a);
                m = 15 * a;
                r = 70 * a;
                g = 5 * a;
                c[b[150]](78 * a, -5 * a);
                chroma(c, 0, 0, m, r, g);
                equal(c, item[4]);
                m = 9 * a;
                r = 50 * a;
                g = 3 * a;
                c[b[150]](-20 * a, 20 * a);
                c[b[65]](Math[b[46]] / 5);
                c[b[277]] = 0.6;
                chroma(c, 0, 0, m, r, g);
                equal(c, item[5]);
                c[b[150]](-20 * a, 29 * a);
                c[b[65]](Math[b[46]] / 5);
                c[b[277]] = 0.6;
                c[b[19]]();
                c[b[4]] = 'round';
                c[b[224]](0, 0);
                c[b[206]](0, 30 * a);
                c[b[206]](30 * a, 30 * a);
                c[b[238]]();
                equal(c, null, item[5], 8 * a);
                return result;
            }
        function a(context, item)
            /*Scope Closed:false | writes:true*/
            {
                var buffer = document('canvas');
                var d = buffer[b[9]]('2d');
                var EVT_TYPE = 6 * context;
                buffer[b[187]] = 85 * context;
                buffer[b[236]] = 115 * context;
                d[b[150]](-130 * context, -60 * context + 6 * context);
                d[b[277]] = 0.5;
                d[b[19]]();
                d[b[62]](190 * context, 87 * context, 201 * context, 59 * context, 208 * context, 64 * context);
                d[b[62]](213 * context, 68 * context, 204 * context, 93 * context, 195 * context, 109 * context);
                d[b[62]](195 * context, 109 * context, 202 * context, 124 * context, 191 * context, 141 * context);
                d[b[62]](182 * context, 151 * context, 164 * context, 155 * context, 148 * context, 144 * context);
                d[b[62]](136 * context, 135 * context, 138 * context, 111 * context, 145 * context, 104 * context);
                d[b[62]](140 * context, 92 * context, 131 * context, 67 * context, 138 * context, 63 * context);
                d[b[62]](145 * context, 61 * context, 153 * context, 82 * context, 155 * context, 96 * context);
                d[b[62]](167 * context, 91 * context, 178 * context, 92 * context, 187 * context, 98 * context);
                d[b[238]]();
                equal(d, item[0]);
                d[b[150]](0, -(6 * context));
                d[b[277]] = 1;
                d[b[19]]();
                d[b[62]](190 * context, 87 * context, 201 * context, 59 * context, 208 * context, 64 * context);
                d[b[62]](213 * context, 68 * context, 204 * context, 93 * context, 195 * context, 109 * context);
                d[b[62]](195 * context, 109 * context, 202 * context, 124 * context, 191 * context, 141 * context);
                d[b[62]](182 * context, 151 * context, 164 * context, 155 * context, 148 * context, 144 * context);
                d[b[62]](136 * context, 135 * context, 138 * context, 111 * context, 145 * context, 104 * context);
                d[b[62]](140 * context, 92 * context, 131 * context, 67 * context, 138 * context, 63 * context);
                d[b[62]](145 * context, 61 * context, 153 * context, 82 * context, 155 * context, 96 * context);
                d[b[62]](167 * context, 91 * context, 178 * context, 92 * context, 187 * context, 98 * context);
                d[b[238]]();
                equal(d, item[1], item[2], 4);
                EVT_TYPE = 155 * context;
                var days = 133 * context;
                var idA = 10 * context;
                var mcc = 3 * context;
                var doubleInt = EVT_TYPE + -3 * context;
                var cells = days + -5 * context;
                d[b[33]]();
                d[b[150]](EVT_TYPE, days);
                d[b[277]] = 1;
                callback(d, 0, 0, idA);
                equal(d, item[3]);
                d[b[210]]();
                d[b[33]]();
                d[b[150]](doubleInt, cells);
                d[b[277]] = 1;
                callback(d, 0, 0, mcc);
                equal(d, item[4]);
                d[b[210]]();
                d[b[33]]();
                d[b[150]](EVT_TYPE + 27 * context, days);
                d[b[277]] = 1;
                callback(d, 0, 0, idA);
                equal(d, item[3]);
                d[b[210]]();
                d[b[33]]();
                d[b[150]](27 * context + (EVT_TYPE + -3 * context), cells);
                d[b[277]] = 1;
                callback(d, 0, 0, mcc);
                equal(d, item[4]);
                return buffer;
            }
        function syncMD5forFile(radius, key)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                var sin = 4 * radius;
                hash[b[187]] = 85 * radius;
                hash[b[236]] = 115 * radius;
                ctx[b[150]](-130 * radius, -60 * radius);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[62]](190 * radius, 87 * radius, 201 * radius, 59 * radius, 208 * radius, 64 * radius);
                ctx[b[62]](213 * radius, 68 * radius, 204 * radius, 93 * radius, 195 * radius, 109 * radius);
                ctx[b[62]](195 * radius, 109 * radius, 202 * radius, 124 * radius, 191 * radius, 141 * radius);
                ctx[b[62]](182 * radius, 151 * radius, 164 * radius, 155 * radius, 148 * radius, 144 * radius);
                ctx[b[62]](136 * radius, 135 * radius, 138 * radius, 111 * radius, 145 * radius, 104 * radius);
                ctx[b[62]](140 * radius, 92 * radius, 131 * radius, 67 * radius, 138 * radius, 63 * radius);
                ctx[b[62]](145 * radius, 61 * radius, 153 * radius, 82 * radius, 155 * radius, 96 * radius);
                ctx[b[62]](167 * radius, 91 * radius, 178 * radius, 92 * radius, 187 * radius, 98 * radius);
                ctx[b[238]]();
                equal(ctx, key, key, sin);
                return hash;
            }
        function startCanvas(radius, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 188 * radius;
                hash[b[236]] = 190 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](33.00567626953125 * radius, 95.44320678710938 * radius);
                ctx[b[62]](42.00567626953125 * radius, 87.44320678710938 * radius, 48.00567626953125 * radius, 51.443206787109375 * radius, 74.00567626953125 * radius, 47.443206787109375 * radius);
                ctx[b[62]](100.00567626953125 * radius, 42.443206787109375 * radius, 118.00567626953125 * radius, 49.443206787109375 * radius, 131.00567626953125 * radius, 55.443206787109375 * radius);
                ctx[b[62]](140.00567626953125 * radius, 70.44320678710938 * radius, 145.00567626953125 * radius, 87.44320678710938 * radius, 152.00567626953125 * radius, 94.44320678710938 * radius);
                ctx[b[62]](149.00567626953125 * radius, 99.44320678710938 * radius, 147.00567626953125 * radius, 98.44320678710938 * radius, 141.00567626953125 * radius, 101.44320678710938 * radius);
                ctx[b[62]](147.00567626953125 * radius, 108.44320678710938 * radius, 147.00567626953125 * radius, 111.44320678710938 * radius, 147.00567626953125 * radius, 112.44320678710938 * radius);
                ctx[b[62]](143.00567626953125 * radius, 112.44320678710938 * radius, 141.00567626953125 * radius, 112.44320678710938 * radius, 137.00567626953125 * radius, 111.44320678710938 * radius);
                ctx[b[62]](138.00567626953125 * radius, 117.44320678710938 * radius, 138.00567626953125 * radius, 120.44320678710938 * radius, 138.00567626953125 * radius, 124.44320678710938 * radius);
                ctx[b[62]](125.00567626953125 * radius, 107.44320678710938 * radius, 121.00567626953125 * radius, 124.44320678710938 * radius, 110.00567626953125 * radius, 141.44320678710938 * radius);
                ctx[b[62]](102.00567626953125 * radius, 158.44320678710938 * radius, 89.00567626953125 * radius, 158.44320678710938 * radius, 80.00567626953125 * radius, 144.44320678710938 * radius);
                ctx[b[62]](61.00567626953125 * radius, 111.44320678710938 * radius, 56.00567626953125 * radius, 117.44320678710938 * radius, 48.00567626953125 * radius, 120.44320678710938 * radius);
                ctx[b[62]](46.00567626953125 * radius, 118.44320678710938 * radius, 47.00567626953125 * radius, 112.44320678710938 * radius, 48.00567626953125 * radius, 107.44320678710938 * radius);
                ctx[b[62]](43.00567626953125 * radius, 111.44320678710938 * radius, 40.00567626953125 * radius, 111.44320678710938 * radius, 37.00567626953125 * radius, 110.44320678710938 * radius);
                ctx[b[62]](39.50567626953125 * radius, 104.94320678710938 * radius, 39.50567626953125 * radius, 104.94320678710938 * radius, 42.00567626953125 * radius, 99.44320678710938 * radius);
                ctx[b[62]](33.00567626953125 * radius, 99.44320678710938 * radius, 33.00567626953125 * radius, 98.44320678710938 * radius, 33.00567626953125 * radius, 96.44320678710938 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](51.00567626953125 * radius, 72.53409576416016 * radius);
                ctx[b[62]](48.00567626953125 * radius, 56.534095764160156 * radius, 48.00567626953125 * radius, 49.534095764160156 * radius, 54.00567626953125 * radius, 35.534095764160156 * radius);
                ctx[b[62]](58.00567626953125 * radius, 26.534095764160156 * radius, 65.00567626953125 * radius, 27.534095764160156 * radius, 73.00567626953125 * radius, 40.534095764160156 * radius);
                ctx[b[62]](81.00567626953125 * radius, 49.534095764160156 * radius, 82.00567626953125 * radius, 50.534095764160156 * radius, 83.00567626953125 * radius, 51.534095764160156 * radius);
                ctx[b[62]](77.00567626953125 * radius, 71.53409576416016 * radius, 64.00567626953125 * radius, 75.53409576416016 * radius, 51.00567626953125 * radius, 72.53409576416016 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](105.00567626953125 * radius, 50.53410339355469 * radius);
                ctx[b[62]](112.00567626953125 * radius, 48.53410339355469 * radius, 125.00567626953125 * radius, 21.534103393554688 * radius, 132.00567626953125 * radius, 33.53410339355469 * radius);
                ctx[b[62]](138.00567626953125 * radius, 42.53410339355469 * radius, 140.00567626953125 * radius, 64.53410339355469 * radius, 136.00567626953125 * radius, 75.53410339355469 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 2 * radius);
                return hash;
            }
        function extractPresetLocal(radius, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 188 * radius;
                hash[b[236]] = 190 * radius;
                ctx[b[277]] = 0.5;
                ctx[b[150]](0, 5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](33.00567626953125 * radius, 95.44320678710938 * radius);
                ctx[b[62]](42.00567626953125 * radius, 87.44320678710938 * radius, 48.00567626953125 * radius, 51.443206787109375 * radius, 74.00567626953125 * radius, 47.443206787109375 * radius);
                ctx[b[62]](100.00567626953125 * radius, 42.443206787109375 * radius, 118.00567626953125 * radius, 49.443206787109375 * radius, 131.00567626953125 * radius, 55.443206787109375 * radius);
                ctx[b[62]](140.00567626953125 * radius, 70.44320678710938 * radius, 145.00567626953125 * radius, 87.44320678710938 * radius, 152.00567626953125 * radius, 94.44320678710938 * radius);
                ctx[b[62]](149.00567626953125 * radius, 99.44320678710938 * radius, 147.00567626953125 * radius, 98.44320678710938 * radius, 141.00567626953125 * radius, 101.44320678710938 * radius);
                ctx[b[62]](147.00567626953125 * radius, 108.44320678710938 * radius, 147.00567626953125 * radius, 111.44320678710938 * radius, 147.00567626953125 * radius, 112.44320678710938 * radius);
                ctx[b[62]](143.00567626953125 * radius, 112.44320678710938 * radius, 141.00567626953125 * radius, 112.44320678710938 * radius, 137.00567626953125 * radius, 111.44320678710938 * radius);
                ctx[b[62]](138.00567626953125 * radius, 117.44320678710938 * radius, 138.00567626953125 * radius, 120.44320678710938 * radius, 138.00567626953125 * radius, 124.44320678710938 * radius);
                ctx[b[62]](125.00567626953125 * radius, 107.44320678710938 * radius, 121.00567626953125 * radius, 124.44320678710938 * radius, 110.00567626953125 * radius, 141.44320678710938 * radius);
                ctx[b[62]](102.00567626953125 * radius, 158.44320678710938 * radius, 89.00567626953125 * radius, 158.44320678710938 * radius, 80.00567626953125 * radius, 144.44320678710938 * radius);
                ctx[b[62]](61.00567626953125 * radius, 111.44320678710938 * radius, 56.00567626953125 * radius, 117.44320678710938 * radius, 48.00567626953125 * radius, 120.44320678710938 * radius);
                ctx[b[62]](46.00567626953125 * radius, 118.44320678710938 * radius, 47.00567626953125 * radius, 112.44320678710938 * radius, 48.00567626953125 * radius, 107.44320678710938 * radius);
                ctx[b[62]](43.00567626953125 * radius, 111.44320678710938 * radius, 40.00567626953125 * radius, 111.44320678710938 * radius, 37.00567626953125 * radius, 110.44320678710938 * radius);
                ctx[b[62]](39.50567626953125 * radius, 104.94320678710938 * radius, 39.50567626953125 * radius, 104.94320678710938 * radius, 42.00567626953125 * radius, 99.44320678710938 * radius);
                ctx[b[62]](33.00567626953125 * radius, 99.44320678710938 * radius, 33.00567626953125 * radius, 98.44320678710938 * radius, 33.00567626953125 * radius, 96.44320678710938 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](60.00567626953125 * radius, 99.35227966308594 * radius);
                ctx[b[62]](70.00567626953125 * radius, 82.35227966308594 * radius, 85.00567626953125 * radius, 86.35227966308594 * radius, 87.00567626953125 * radius, 97.35227966308594 * radius);
                ctx[b[62]](89.00567626953125 * radius, 101.35227966308594 * radius, 88.00567626953125 * radius, 105.35227966308594 * radius, 87.00567626953125 * radius, 110.35227966308594 * radius);
                ctx[b[62]](89.00567626953125 * radius, 111.35227966308594 * radius, 91.00567626953125 * radius, 112.35227966308594 * radius, 93.00567626953125 * radius, 115.35227966308594 * radius);
                ctx[b[62]](96.00567626953125 * radius, 111.35227966308594 * radius, 99.00567626953125 * radius, 111.35227966308594 * radius, 100.00567626953125 * radius, 110.35227966308594 * radius);
                ctx[b[62]](98.00567626953125 * radius, 92.35227966308594 * radius, 103.00567626953125 * radius, 86.35227966308594 * radius, 113.00567626953125 * radius, 89.35227966308594 * radius);
                ctx[b[62]](122.00567626953125 * radius, 92.35227966308594 * radius, 123.00567626953125 * radius, 94.35227966308594 * radius, 126.00567626953125 * radius, 98.35227966308594 * radius);
                ctx[b[62]](124.00567626953125 * radius, 102.35227966308594 * radius, 123.00567626953125 * radius, 103.35227966308594 * radius, 121.00567626953125 * radius, 104.35227966308594 * radius);
                ctx[b[62]](124.00567626953125 * radius, 105.35227966308594 * radius, 126.00567626953125 * radius, 107.35227966308594 * radius, 129.00567626953125 * radius, 111.35227966308594 * radius);
                ctx[b[62]](115.00567626953125 * radius, 122.35227966308594 * radius, 113.00567626953125 * radius, 145.35227966308594 * radius, 100.00567626953125 * radius, 152.35227966308594 * radius);
                ctx[b[62]](91.00567626953125 * radius, 158.35227966308594 * radius, 83.00567626953125 * radius, 149.35227966308594 * radius, 76.00567626953125 * radius, 138.35227966308594 * radius);
                ctx[b[62]](67.00567626953125 * radius, 114.35227966308594 * radius, 63.00567626953125 * radius, 113.35227966308594 * radius, 59.00567626953125 * radius, 111.35227966308594 * radius);
                ctx[b[62]](62.00567626953125 * radius, 107.35227966308594 * radius, 64.00567626953125 * radius, 105.35227966308594 * radius, 66.00567626953125 * radius, 104.35227966308594 * radius);
                ctx[b[62]](63.00567626953125 * radius, 100.35227966308594 * radius, 62.00567626953125 * radius, 100.35227966308594 * radius, 60.00567626953125 * radius, 99.35227966308594 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](51.00567626953125 * radius, 72.53409576416016 * radius);
                ctx[b[62]](48.00567626953125 * radius, 56.534095764160156 * radius, 48.00567626953125 * radius, 49.534095764160156 * radius, 54.00567626953125 * radius, 35.534095764160156 * radius);
                ctx[b[62]](58.00567626953125 * radius, 26.534095764160156 * radius, 65.00567626953125 * radius, 27.534095764160156 * radius, 73.00567626953125 * radius, 40.534095764160156 * radius);
                ctx[b[62]](81.00567626953125 * radius, 49.534095764160156 * radius, 82.00567626953125 * radius, 50.534095764160156 * radius, 83.00567626953125 * radius, 51.534095764160156 * radius);
                ctx[b[62]](77.00567626953125 * radius, 71.53409576416016 * radius, 64.00567626953125 * radius, 75.53409576416016 * radius, 51.00567626953125 * radius, 72.53409576416016 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](105.00567626953125 * radius, 50.53410339355469 * radius);
                ctx[b[62]](112.00567626953125 * radius, 48.53410339355469 * radius, 125.00567626953125 * radius, 21.534103393554688 * radius, 132.00567626953125 * radius, 33.53410339355469 * radius);
                ctx[b[62]](138.00567626953125 * radius, 42.53410339355469 * radius, 140.00567626953125 * radius, 64.53410339355469 * radius, 136.00567626953125 * radius, 75.53410339355469 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 2 * radius);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](33.00567626953125 * radius, 95.44320678710938 * radius);
                ctx[b[62]](42.00567626953125 * radius, 87.44320678710938 * radius, 48.00567626953125 * radius, 51.443206787109375 * radius, 74.00567626953125 * radius, 47.443206787109375 * radius);
                ctx[b[62]](100.00567626953125 * radius, 42.443206787109375 * radius, 118.00567626953125 * radius, 49.443206787109375 * radius, 131.00567626953125 * radius, 55.443206787109375 * radius);
                ctx[b[62]](140.00567626953125 * radius, 70.44320678710938 * radius, 145.00567626953125 * radius, 87.44320678710938 * radius, 152.00567626953125 * radius, 94.44320678710938 * radius);
                ctx[b[62]](149.00567626953125 * radius, 99.44320678710938 * radius, 147.00567626953125 * radius, 98.44320678710938 * radius, 141.00567626953125 * radius, 101.44320678710938 * radius);
                ctx[b[62]](147.00567626953125 * radius, 108.44320678710938 * radius, 147.00567626953125 * radius, 111.44320678710938 * radius, 147.00567626953125 * radius, 112.44320678710938 * radius);
                ctx[b[62]](143.00567626953125 * radius, 112.44320678710938 * radius, 141.00567626953125 * radius, 112.44320678710938 * radius, 137.00567626953125 * radius, 111.44320678710938 * radius);
                ctx[b[62]](138.00567626953125 * radius, 117.44320678710938 * radius, 138.00567626953125 * radius, 120.44320678710938 * radius, 138.00567626953125 * radius, 124.44320678710938 * radius);
                ctx[b[62]](125.00567626953125 * radius, 107.44320678710938 * radius, 121.00567626953125 * radius, 124.44320678710938 * radius, 110.00567626953125 * radius, 141.44320678710938 * radius);
                ctx[b[62]](102.00567626953125 * radius, 158.44320678710938 * radius, 89.00567626953125 * radius, 158.44320678710938 * radius, 80.00567626953125 * radius, 144.44320678710938 * radius);
                ctx[b[62]](61.00567626953125 * radius, 111.44320678710938 * radius, 56.00567626953125 * radius, 117.44320678710938 * radius, 48.00567626953125 * radius, 120.44320678710938 * radius);
                ctx[b[62]](46.00567626953125 * radius, 118.44320678710938 * radius, 47.00567626953125 * radius, 112.44320678710938 * radius, 48.00567626953125 * radius, 107.44320678710938 * radius);
                ctx[b[62]](43.00567626953125 * radius, 111.44320678710938 * radius, 40.00567626953125 * radius, 111.44320678710938 * radius, 37.00567626953125 * radius, 110.44320678710938 * radius);
                ctx[b[62]](39.50567626953125 * radius, 104.94320678710938 * radius, 39.50567626953125 * radius, 104.94320678710938 * radius, 42.00567626953125 * radius, 99.44320678710938 * radius);
                ctx[b[62]](33.00567626953125 * radius, 99.44320678710938 * radius, 33.00567626953125 * radius, 98.44320678710938 * radius, 33.00567626953125 * radius, 96.44320678710938 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 3 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](60.00567626953125 * radius, 99.35227966308594 * radius);
                ctx[b[62]](70.00567626953125 * radius, 82.35227966308594 * radius, 85.00567626953125 * radius, 86.35227966308594 * radius, 87.00567626953125 * radius, 97.35227966308594 * radius);
                ctx[b[62]](89.00567626953125 * radius, 101.35227966308594 * radius, 88.00567626953125 * radius, 105.35227966308594 * radius, 87.00567626953125 * radius, 110.35227966308594 * radius);
                ctx[b[62]](89.00567626953125 * radius, 111.35227966308594 * radius, 91.00567626953125 * radius, 112.35227966308594 * radius, 93.00567626953125 * radius, 115.35227966308594 * radius);
                ctx[b[62]](96.00567626953125 * radius, 111.35227966308594 * radius, 99.00567626953125 * radius, 111.35227966308594 * radius, 100.00567626953125 * radius, 110.35227966308594 * radius);
                ctx[b[62]](98.00567626953125 * radius, 92.35227966308594 * radius, 103.00567626953125 * radius, 86.35227966308594 * radius, 113.00567626953125 * radius, 89.35227966308594 * radius);
                ctx[b[62]](122.00567626953125 * radius, 92.35227966308594 * radius, 123.00567626953125 * radius, 94.35227966308594 * radius, 126.00567626953125 * radius, 98.35227966308594 * radius);
                ctx[b[62]](124.00567626953125 * radius, 102.35227966308594 * radius, 123.00567626953125 * radius, 103.35227966308594 * radius, 121.00567626953125 * radius, 104.35227966308594 * radius);
                ctx[b[62]](124.00567626953125 * radius, 105.35227966308594 * radius, 126.00567626953125 * radius, 107.35227966308594 * radius, 129.00567626953125 * radius, 111.35227966308594 * radius);
                ctx[b[62]](115.00567626953125 * radius, 122.35227966308594 * radius, 113.00567626953125 * radius, 145.35227966308594 * radius, 100.00567626953125 * radius, 152.35227966308594 * radius);
                ctx[b[62]](91.00567626953125 * radius, 158.35227966308594 * radius, 83.00567626953125 * radius, 149.35227966308594 * radius, 76.00567626953125 * radius, 138.35227966308594 * radius);
                ctx[b[62]](67.00567626953125 * radius, 114.35227966308594 * radius, 63.00567626953125 * radius, 113.35227966308594 * radius, 59.00567626953125 * radius, 111.35227966308594 * radius);
                ctx[b[62]](62.00567626953125 * radius, 107.35227966308594 * radius, 64.00567626953125 * radius, 105.35227966308594 * radius, 66.00567626953125 * radius, 104.35227966308594 * radius);
                ctx[b[62]](63.00567626953125 * radius, 100.35227966308594 * radius, 62.00567626953125 * radius, 100.35227966308594 * radius, 60.00567626953125 * radius, 99.35227966308594 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](33.00567626953125 * radius, 95.44320678710938 * radius);
                ctx[b[62]](42.00567626953125 * radius, 87.44320678710938 * radius, 48.00567626953125 * radius, 51.443206787109375 * radius, 74.00567626953125 * radius, 47.443206787109375 * radius);
                ctx[b[62]](100.00567626953125 * radius, 42.443206787109375 * radius, 118.00567626953125 * radius, 49.443206787109375 * radius, 131.00567626953125 * radius, 55.443206787109375 * radius);
                ctx[b[62]](140.00567626953125 * radius, 70.44320678710938 * radius, 145.00567626953125 * radius, 87.44320678710938 * radius, 152.00567626953125 * radius, 94.44320678710938 * radius);
                ctx[b[62]](149.00567626953125 * radius, 99.44320678710938 * radius, 147.00567626953125 * radius, 98.44320678710938 * radius, 141.00567626953125 * radius, 101.44320678710938 * radius);
                ctx[b[62]](147.00567626953125 * radius, 108.44320678710938 * radius, 147.00567626953125 * radius, 111.44320678710938 * radius, 147.00567626953125 * radius, 112.44320678710938 * radius);
                ctx[b[62]](143.00567626953125 * radius, 112.44320678710938 * radius, 141.00567626953125 * radius, 112.44320678710938 * radius, 137.00567626953125 * radius, 111.44320678710938 * radius);
                ctx[b[62]](138.00567626953125 * radius, 117.44320678710938 * radius, 138.00567626953125 * radius, 120.44320678710938 * radius, 138.00567626953125 * radius, 124.44320678710938 * radius);
                ctx[b[62]](125.00567626953125 * radius, 107.44320678710938 * radius, 121.00567626953125 * radius, 124.44320678710938 * radius, 110.00567626953125 * radius, 141.44320678710938 * radius);
                ctx[b[62]](102.00567626953125 * radius, 158.44320678710938 * radius, 89.00567626953125 * radius, 158.44320678710938 * radius, 80.00567626953125 * radius, 144.44320678710938 * radius);
                ctx[b[62]](61.00567626953125 * radius, 111.44320678710938 * radius, 56.00567626953125 * radius, 117.44320678710938 * radius, 48.00567626953125 * radius, 120.44320678710938 * radius);
                ctx[b[62]](46.00567626953125 * radius, 118.44320678710938 * radius, 47.00567626953125 * radius, 112.44320678710938 * radius, 48.00567626953125 * radius, 107.44320678710938 * radius);
                ctx[b[62]](43.00567626953125 * radius, 111.44320678710938 * radius, 40.00567626953125 * radius, 111.44320678710938 * radius, 37.00567626953125 * radius, 110.44320678710938 * radius);
                ctx[b[62]](39.50567626953125 * radius, 104.94320678710938 * radius, 39.50567626953125 * radius, 104.94320678710938 * radius, 42.00567626953125 * radius, 99.44320678710938 * radius);
                ctx[b[62]](33.00567626953125 * radius, 99.44320678710938 * radius, 33.00567626953125 * radius, 98.44320678710938 * radius, 33.00567626953125 * radius, 96.44320678710938 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, args[2], 3 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](51.00567626953125 * radius, 72.53409576416016 * radius);
                ctx[b[62]](48.00567626953125 * radius, 56.534095764160156 * radius, 48.00567626953125 * radius, 49.534095764160156 * radius, 54.00567626953125 * radius, 35.534095764160156 * radius);
                ctx[b[62]](58.00567626953125 * radius, 26.534095764160156 * radius, 65.00567626953125 * radius, 27.534095764160156 * radius, 73.00567626953125 * radius, 40.534095764160156 * radius);
                ctx[b[62]](81.00567626953125 * radius, 49.534095764160156 * radius, 82.00567626953125 * radius, 50.534095764160156 * radius, 83.00567626953125 * radius, 51.534095764160156 * radius);
                equal(ctx, args[1], args[2], 3 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](105.00567626953125 * radius, 50.53410339355469 * radius);
                ctx[b[62]](112.00567626953125 * radius, 48.53410339355469 * radius, 125.00567626953125 * radius, 21.534103393554688 * radius, 132.00567626953125 * radius, 33.53410339355469 * radius);
                ctx[b[62]](138.00567626953125 * radius, 42.53410339355469 * radius, 140.00567626953125 * radius, 64.53410339355469 * radius, 136.00567626953125 * radius, 75.53410339355469 * radius);
                equal(ctx, args[1], args[2], 3 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](57.00567626953125 * radius, 68.53410339355469 * radius);
                ctx[b[62]](63.00567626953125 * radius, 69.53410339355469 * radius, 69.00567626953125 * radius, 66.53410339355469 * radius, 73.00567626953125 * radius, 60.53410339355469 * radius);
                ctx[b[62]](66.00567626953125 * radius, 47.53410339355469 * radius, 61.00567626953125 * radius, 42.53410339355469 * radius, 58.00567626953125 * radius, 49.53410339355469 * radius);
                ctx[b[62]](56.00567626953125 * radius, 59.53410339355469 * radius, 56.00567626953125 * radius, 64.53410339355469 * radius, 57.00567626953125 * radius, 67.53410339355469 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](115.00567626953125 * radius, 59.715911865234375 * radius);
                ctx[b[62]](119.00567626953125 * radius, 48.715911865234375 * radius, 126.00567626953125 * radius, 41.715911865234375 * radius, 129.00567626953125 * radius, 48.715911865234375 * radius);
                ctx[b[62]](131.00567626953125 * radius, 56.715911865234375 * radius, 133.00567626953125 * radius, 71.71591186523438 * radius, 127.00567626953125 * radius, 68.71591186523438 * radius);
                ctx[b[62]](120.00567626953125 * radius, 67.71591186523438 * radius, 114.00567626953125 * radius, 59.715911865234375 * radius, 116.00567626953125 * radius, 58.715911865234375 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                callback(ctx, 77 * radius, 107 * radius, 6 * radius);
                equal(ctx, args[2]);
                callback(ctx, 110 * radius, 107 * radius, 6 * radius);
                equal(ctx, args[2]);
                callback(ctx, 75 * radius, 105 * radius, 3 * radius);
                equal(ctx, args[4]);
                callback(ctx, 108 * radius, 105 * radius, 3 * radius);
                equal(ctx, args[4]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](88.00567626953125 * radius, 141.4431915283203 * radius);
                ctx[b[62]](93.00567626953125 * radius, 137.4431915283203 * radius, 96.00567626953125 * radius, 138.4431915283203 * radius, 100.00567626953125 * radius, 141.4431915283203 * radius);
                ctx[b[62]](103.00567626953125 * radius, 143.4431915283203 * radius, 101.00567626953125 * radius, 149.4431915283203 * radius, 95.00567626953125 * radius, 148.4431915283203 * radius);
                ctx[b[62]](85.00567626953125 * radius, 148.4431915283203 * radius, 86.00567626953125 * radius, 145.4431915283203 * radius, 88.00567626953125 * radius, 142.4431915283203 * radius);
                ctx[b[238]]();
                equal(ctx, args[1]);
                return hash;
            }
        function _getTabComponent(radius, cmp, testCase)
            /*Scope Closed:false | writes:true*/
            {
                cmp = document('canvas');
                var ctx = cmp[b[9]]('2d');
                cmp[b[187]] = 55 * radius;
                cmp[b[236]] = 55 * radius;
                ctx[b[150]](-65 * radius, -55 * radius + 8 * radius);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[224]](95 * radius, 60 * radius);
                ctx[b[62]](107 * radius, 62 * radius, 110 * radius, 73 * radius, 107 * radius, 79 * radius);
                ctx[b[62]](104 * radius, 85 * radius, 85 * radius, 93 * radius, 81 * radius, 88 * radius);
                ctx[b[62]](74 * radius, 80 * radius, 85 * radius, 60 * radius, 95 * radius, 60 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 3);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[224]](91 * radius, 70 * radius);
                ctx[b[62]](91 * radius, 75 * radius, 100 * radius, 76 * radius, 100 * radius, 73 * radius);
                ctx[b[62]](100 * radius, 69 * radius, 89 * radius, 65 * radius, 91 * radius, 70 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[2], testCase[3], 3);
                return cmp;
            }
        function getNearestWalkable(x, y)
            /*Scope Closed:false | writes:true*/
            {
                var result = document('canvas');
                var a = result[b[9]]('2d');
                result[b[187]] = 238 * x;
                result[b[236]] = 230 * x;
                a[b[150]](-93 * x, -110 * x);
                callback(a, 213.5 * x, 256.75 * x, 75 * x);
                equal(a, y);
                callback(a, 213.5 * x, 175.75 * x, 25 * x);
                equal(a, y);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](156.5 * x, 137.75 * x);
                a[b[62]](170.5 * x, 173.75 * x, 195.5 * x, 177.75 * x, 209.5 * x, 177.75 * x);
                a[b[148]] = 17 * x;
                a[b[165]] = y;
                a[b[216]]();
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](217.5 * x, 178.75 * x);
                a[b[62]](251.5 * x, 177.75 * x, 263.5 * x, 153.75 * x, 270.5 * x, 140.75 * x);
                a[b[148]] = 17 * x;
                a[b[165]] = y;
                a[b[216]]();
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](130.5 * x, 124.75 * x);
                a[b[62]](153.5 * x, 185.75 * x, 198.5 * x, 185.75 * x, 213.5 * x, 185.75 * x);
                a[b[148]] = 17 * x;
                a[b[165]] = y;
                a[b[216]]();
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](214.5 * x, 183.75 * x);
                a[b[62]](265.5 * x, 192.75 * x, 293.5 * x, 141.75 * x, 297.5 * x, 124.75 * x);
                a[b[148]] = 17 * x;
                a[b[165]] = y;
                a[b[216]]();
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](107.5 * x, 213.75 * x);
                a[b[62]](151.5 * x, 190.75 * x, 198.5 * x, 184.75 * x, 210.5 * x, 184.75 * x);
                a[b[148]] = 17 * x;
                a[b[165]] = y;
                a[b[216]]();
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](212.5 * x, 187.75 * x);
                a[b[62]](258.5 * x, 182.75 * x, 286.5 * x, 194.75 * x, 314.5 * x, 206.75 * x);
                a[b[148]] = 17 * x;
                a[b[165]] = y;
                a[b[216]]();
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](102.5 * x, 258.75 * x);
                a[b[62]](142.5 * x, 200.75 * x, 193.5 * x, 194.75 * x, 211.5 * x, 185.75 * x);
                a[b[148]] = 17 * x;
                a[b[165]] = y;
                a[b[216]]();
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](214.5 * x, 192.75 * x);
                a[b[62]](276.5 * x, 194.75 * x, 306.5 * x, 233.75 * x, 316.5 * x, 246.75 * x);
                a[b[148]] = 17 * x;
                a[b[165]] = y;
                a[b[216]]();
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](219.5 * x, 158.75 * x);
                a[b[62]](226.5 * x, 159.75 * x, 227.5 * x, 147.75 * x, 219.5 * x, 145.75 * x);
                a[b[238]]();
                a[b[148]] = 10 * x;
                a[b[165]] = y;
                a[b[216]]();
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](210.5 * x, 160.75 * x);
                a[b[62]](203.5 * x, 159.75 * x, 199.5 * x, 146.75 * x, 210.5 * x, 145.75 * x);
                a[b[238]]();
                a[b[148]] = 10 * x;
                a[b[165]] = y;
                a[b[216]]();
                return result;
            }
        function _listenClick(a, e)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 238 * a;
                hash[b[236]] = 230 * a;
                c[b[150]](-93 * a, -110 * a + 5 * a);
                c[b[277]] = 0.3;
                callback(c, 213.5 * a, 256.75 * a, 75 * a);
                equal(c, e[5]);
                callback(c, 213.5 * a, 175.75 * a, 25 * a);
                equal(c, e[5]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](156.5 * a, 137.75 * a);
                c[b[62]](170.5 * a, 173.75 * a, 195.5 * a, 177.75 * a, 209.5 * a, 177.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[5];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](217.5 * a, 178.75 * a);
                c[b[62]](251.5 * a, 177.75 * a, 263.5 * a, 153.75 * a, 270.5 * a, 140.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[5];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](130.5 * a, 124.75 * a);
                c[b[62]](153.5 * a, 185.75 * a, 198.5 * a, 185.75 * a, 213.5 * a, 185.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[5];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](214.5 * a, 183.75 * a);
                c[b[62]](265.5 * a, 192.75 * a, 293.5 * a, 141.75 * a, 297.5 * a, 124.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[5];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](107.5 * a, 213.75 * a);
                c[b[62]](151.5 * a, 190.75 * a, 198.5 * a, 184.75 * a, 210.5 * a, 184.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[5];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](212.5 * a, 187.75 * a);
                c[b[62]](258.5 * a, 182.75 * a, 286.5 * a, 194.75 * a, 314.5 * a, 206.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[5];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](102.5 * a, 258.75 * a);
                c[b[62]](142.5 * a, 200.75 * a, 193.5 * a, 194.75 * a, 211.5 * a, 185.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[5];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](214.5 * a, 192.75 * a);
                c[b[62]](276.5 * a, 194.75 * a, 306.5 * a, 233.75 * a, 316.5 * a, 246.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[5];
                c[b[216]]();
                c[b[150]](0, -5);
                c[b[277]] = 1;
                callback(c, 213.5 * a, 256.75 * a, 75 * a);
                equal(c, e[3]);
                callback(c, 213.5 * a, 175.75 * a, 25 * a);
                equal(c, e[3]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](219.5 * a, 158.75 * a);
                c[b[62]](226.5 * a, 159.75 * a, 227.5 * a, 147.75 * a, 219.5 * a, 145.75 * a);
                c[b[238]]();
                c[b[148]] = 10 * a;
                c[b[165]] = e[3];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](210.5 * a, 160.75 * a);
                c[b[62]](203.5 * a, 159.75 * a, 199.5 * a, 146.75 * a, 210.5 * a, 145.75 * a);
                c[b[238]]();
                c[b[148]] = 10 * a;
                c[b[165]] = e[3];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](219.5 * a, 158.75 * a);
                c[b[62]](226.5 * a, 159.75 * a, 227.5 * a, 147.75 * a, 219.5 * a, 145.75 * a);
                c[b[238]]();
                c[b[219]] = e[0];
                c[b[175]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](210.5 * a, 160.75 * a);
                c[b[62]](203.5 * a, 159.75 * a, 199.5 * a, 146.75 * a, 210.5 * a, 145.75 * a);
                c[b[238]]();
                c[b[219]] = e[0];
                c[b[175]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](156.5 * a, 137.75 * a);
                c[b[62]](170.5 * a, 173.75 * a, 195.5 * a, 177.75 * a, 209.5 * a, 177.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[3];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](217.5 * a, 178.75 * a);
                c[b[62]](251.5 * a, 177.75 * a, 263.5 * a, 153.75 * a, 270.5 * a, 140.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[3];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](130.5 * a, 124.75 * a);
                c[b[62]](153.5 * a, 185.75 * a, 198.5 * a, 185.75 * a, 213.5 * a, 185.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[3];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](214.5 * a, 183.75 * a);
                c[b[62]](265.5 * a, 192.75 * a, 293.5 * a, 141.75 * a, 297.5 * a, 124.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[3];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](107.5 * a, 213.75 * a);
                c[b[62]](151.5 * a, 190.75 * a, 198.5 * a, 184.75 * a, 210.5 * a, 184.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[3];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](212.5 * a, 187.75 * a);
                c[b[62]](258.5 * a, 182.75 * a, 286.5 * a, 194.75 * a, 314.5 * a, 206.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[3];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](102.5 * a, 258.75 * a);
                c[b[62]](142.5 * a, 200.75 * a, 193.5 * a, 194.75 * a, 211.5 * a, 185.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[3];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](214.5 * a, 192.75 * a);
                c[b[62]](276.5 * a, 194.75 * a, 306.5 * a, 233.75 * a, 316.5 * a, 246.75 * a);
                c[b[148]] = 17 * a;
                c[b[165]] = e[3];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](156.5 * a, 137.75 * a);
                c[b[62]](170.5 * a, 173.75 * a, 195.5 * a, 177.75 * a, 209.5 * a, 177.75 * a);
                c[b[148]] = 8 * a;
                c[b[165]] = e[0];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](217.5 * a, 178.75 * a);
                c[b[62]](251.5 * a, 177.75 * a, 263.5 * a, 153.75 * a, 270.5 * a, 140.75 * a);
                c[b[148]] = 8 * a;
                c[b[165]] = e[0];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](130.5 * a, 124.75 * a);
                c[b[62]](153.5 * a, 185.75 * a, 198.5 * a, 185.75 * a, 213.5 * a, 185.75 * a);
                c[b[148]] = 8 * a;
                c[b[165]] = e[0];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](214.5 * a, 183.75 * a);
                c[b[62]](265.5 * a, 192.75 * a, 293.5 * a, 141.75 * a, 297.5 * a, 124.75 * a);
                c[b[148]] = 8 * a;
                c[b[165]] = e[0];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](107.5 * a, 213.75 * a);
                c[b[62]](151.5 * a, 190.75 * a, 198.5 * a, 184.75 * a, 210.5 * a, 184.75 * a);
                c[b[148]] = 8 * a;
                c[b[165]] = e[0];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](212.5 * a, 187.75 * a);
                c[b[62]](258.5 * a, 182.75 * a, 286.5 * a, 194.75 * a, 314.5 * a, 206.75 * a);
                c[b[148]] = 8 * a;
                c[b[165]] = e[0];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](102.5 * a, 258.75 * a);
                c[b[62]](142.5 * a, 200.75 * a, 193.5 * a, 194.75 * a, 211.5 * a, 185.75 * a);
                c[b[148]] = 8 * a;
                c[b[165]] = e[0];
                c[b[216]]();
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](214.5 * a, 192.75 * a);
                c[b[62]](276.5 * a, 194.75 * a, 306.5 * a, 233.75 * a, 316.5 * a, 246.75 * a);
                c[b[148]] = 8 * a;
                c[b[165]] = e[0];
                c[b[216]]();
                callback(c, 213.5 * a, 256.75 * a, 70 * a);
                equal(c, e[0]);
                callback(c, 213.5 * a, 175.75 * a, 20 * a);
                equal(c, e[0]);
                callback(c, 222 * a, 166 * a, 5 * a);
                c[b[219]] = e[2];
                c[b[175]]();
                callback(c, 205 * a, 166 * a, 5 * a);
                c[b[219]] = e[2];
                c[b[175]]();
                callback(c, 206.2 * a, 167 * a, 2.5 * a);
                c[b[219]] = e[4];
                c[b[175]]();
                callback(c, 223.2 * a, 167 * a, 2.5 * a);
                c[b[219]] = e[4];
                c[b[175]]();
                c[b[33]]();
                c[b[150]](213.5 * a, 293.75 * a);
                c[b[65]](0.76);
                chroma(c, -22 * a, -21 * a, 44 * a, 42 * a, 6 * a);
                c[b[210]]();
                c[b[219]] = e[1];
                c[b[175]]();
                c[b[33]]();
                c[b[150]](212.5 * a, 258.25 * a);
                c[b[65]](0.8);
                chroma(c, -15 * a, -14.5 * a, 30 * a, 29 * a, 6 * a);
                c[b[210]]();
                c[b[219]] = e[1];
                c[b[175]]();
                return hash;
            }
        function makeRect(radius, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 450 * radius;
                hash[b[236]] = 470 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](226.5 * radius, 91.546875 * radius);
                ctx[b[62]](254.5 * radius, 115.546875 * radius, 261.5 * radius, 115.546875 * radius, 294.5 * radius, 109.546875 * radius);
                ctx[b[62]](299.5 * radius, 141.546875 * radius, 315.5 * radius, 151.546875 * radius, 344.5 * radius, 158.546875 * radius);
                ctx[b[62]](330.5 * radius, 195.546875 * radius, 341.5 * radius, 207.546875 * radius, 361.5 * radius, 226.546875 * radius);
                ctx[b[62]](331.5 * radius, 251.546875 * radius, 335.5 * radius, 270.546875 * radius, 342.5 * radius, 295.546875 * radius);
                ctx[b[62]](300.5 * radius, 296.546875 * radius, 293.5 * radius, 325.546875 * radius, 292.5 * radius, 344.546875 * radius);
                ctx[b[62]](257.5 * radius, 326.546875 * radius, 242.5 * radius, 338.546875 * radius, 224.5 * radius, 361.546875 * radius);
                ctx[b[62]](200.5 * radius, 329.546875 * radius, 180.5 * radius, 334.546875 * radius, 155.5 * radius, 341.546875 * radius);
                ctx[b[62]](146.5 * radius, 307.546875 * radius, 140.5 * radius, 302.546875 * radius, 107.5 * radius, 292.546875 * radius);
                ctx[b[62]](117.5 * radius, 253.546875 * radius, 109.5 * radius, 244.546875 * radius, 89.5 * radius, 224.546875 * radius);
                ctx[b[62]](118.5 * radius, 191.546875 * radius, 114.5 * radius, 182.546875 * radius, 108.5 * radius, 156.546875 * radius);
                ctx[b[62]](143.5 * radius, 149.546875 * radius, 150.5 * radius, 136.546875 * radius, 157.5 * radius, 106.546875 * radius);
                ctx[b[62]](202.5 * radius, 120.546875 * radius, 211.5 * radius, 103.546875 * radius, 228.5 * radius, 91.546875 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, options[0], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](224.5 * radius, 129.546875 * radius);
                ctx[b[62]](247.5 * radius, 147.546875 * radius, 252.5 * radius, 143.546875 * radius, 274.5 * radius, 141.546875 * radius);
                ctx[b[62]](279.5 * radius, 163.546875 * radius, 289.5 * radius, 168.546875 * radius, 311.5 * radius, 178.546875 * radius);
                ctx[b[62]](301.5 * radius, 199.546875 * radius, 307.5 * radius, 213.546875 * radius, 323.5 * radius, 226.546875 * radius);
                ctx[b[62]](303.5 * radius, 240.546875 * radius, 303.5 * radius, 255.546875 * radius, 312.5 * radius, 275.546875 * radius);
                ctx[b[62]](281.5 * radius, 278.546875 * radius, 276.5 * radius, 291.546875 * radius, 272.5 * radius, 313.546875 * radius);
                ctx[b[62]](248.5 * radius, 301.546875 * radius, 239.5 * radius, 310.546875 * radius, 224.5 * radius, 324.546875 * radius);
                ctx[b[62]](211.5 * radius, 304.546875 * radius, 199.5 * radius, 301.546875 * radius, 176.5 * radius, 309.546875 * radius);
                ctx[b[62]](165.5 * radius, 276.546875 * radius, 159.5 * radius, 275.546875 * radius, 138.5 * radius, 274.546875 * radius);
                ctx[b[62]](148.5 * radius, 248.546875 * radius, 140.5 * radius, 237.546875 * radius, 125.5 * radius, 225.546875 * radius);
                ctx[b[62]](145.5 * radius, 205.546875 * radius, 146.5 * radius, 195.546875 * radius, 142.5 * radius, 176.546875 * radius);
                ctx[b[62]](173.5 * radius, 164.546875 * radius, 173.5 * radius, 155.546875 * radius, 178.5 * radius, 140.546875 * radius);
                ctx[b[62]](214.5 * radius, 143.546875 * radius, 214.5 * radius, 135.546875 * radius, 226.5 * radius, 129.546875 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, options[0], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](224.5 * radius, 160.546875 * radius);
                ctx[b[62]](236.5 * radius, 168.546875 * radius, 239.5 * radius, 168.546875 * radius, 258.5 * radius, 168.546875 * radius);
                ctx[b[62]](261.5 * radius, 185.546875 * radius, 268.5 * radius, 187.546875 * radius, 282.5 * radius, 192.546875 * radius);
                ctx[b[62]](277.5 * radius, 208.546875 * radius, 283.5 * radius, 216.546875 * radius, 289.5 * radius, 228.546875 * radius);
                ctx[b[62]](277.5 * radius, 243.546875 * radius, 280.5 * radius, 253.546875 * radius, 281.5 * radius, 260.546875 * radius);
                ctx[b[62]](264.5 * radius, 260.546875 * radius, 259.5 * radius, 269.546875 * radius, 256.5 * radius, 283.546875 * radius);
                ctx[b[62]](244.5 * radius, 276.546875 * radius, 232.5 * radius, 283.546875 * radius, 223.5 * radius, 291.546875 * radius);
                ctx[b[62]](213.5 * radius, 276.546875 * radius, 205.5 * radius, 278.546875 * radius, 190.5 * radius, 281.546875 * radius);
                ctx[b[62]](181.5 * radius, 262.546875 * radius, 173.5 * radius, 259.546875 * radius, 165.5 * radius, 258.546875 * radius);
                ctx[b[62]](169.5 * radius, 239.546875 * radius, 167.5 * radius, 233.546875 * radius, 157.5 * radius, 225.546875 * radius);
                ctx[b[62]](169.5 * radius, 208.546875 * radius, 170.5 * radius, 203.546875 * radius, 168.5 * radius, 192.546875 * radius);
                ctx[b[62]](181.5 * radius, 187.546875 * radius, 188.5 * radius, 179.546875 * radius, 192.5 * radius, 168.546875 * radius);
                ctx[b[62]](216.5 * radius, 170.546875 * radius, 218.5 * radius, 163.546875 * radius, 225.5 * radius, 160.546875 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, options[0], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](205.5 * radius, 194.546875 * radius);
                ctx[b[62]](216.5 * radius, 192.546875 * radius, 219.5 * radius, 191.546875 * radius, 225.5 * radius, 185.546875 * radius);
                ctx[b[62]](232.5 * radius, 193.546875 * radius, 237.5 * radius, 191.546875 * radius, 246.5 * radius, 192.546875 * radius);
                ctx[b[62]](249.5 * radius, 202.546875 * radius, 253.5 * radius, 205.546875 * radius, 258.5 * radius, 207.546875 * radius);
                ctx[b[62]](259.5 * radius, 222.546875 * radius, 256.5 * radius, 223.546875 * radius, 265.5 * radius, 226.546875 * radius);
                ctx[b[62]](256.5 * radius, 231.546875 * radius, 255.5 * radius, 241.546875 * radius, 259.5 * radius, 248.546875 * radius);
                ctx[b[62]](250.5 * radius, 245.546875 * radius, 245.5 * radius, 252.546875 * radius, 243.5 * radius, 260.546875 * radius);
                ctx[b[62]](234.5 * radius, 256.546875 * radius, 229.5 * radius, 258.546875 * radius, 223.5 * radius, 265.546875 * radius);
                ctx[b[62]](218.5 * radius, 255.546875 * radius, 213.5 * radius, 257.546875 * radius, 204.5 * radius, 261.546875 * radius);
                ctx[b[62]](203.5 * radius, 251.546875 * radius, 198.5 * radius, 248.546875 * radius, 189.5 * radius, 244.546875 * radius);
                ctx[b[62]](194.5 * radius, 237.546875 * radius, 192.5 * radius, 231.546875 * radius, 184.5 * radius, 225.546875 * radius);
                ctx[b[62]](191.5 * radius, 211.546875 * radius, 192.5 * radius, 209.546875 * radius, 190.5 * radius, 204.546875 * radius);
                ctx[b[62]](200.5 * radius, 204.546875 * radius, 204.5 * radius, 198.546875 * radius, 207.5 * radius, 194.546875 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, options[0], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](149.5 * radius, 93.546875 * radius);
                ctx[b[62]](287.5 * radius, 332.546875 * radius, 226 * radius, 225.546875 * radius, 302.5 * radius, 357.546875 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, options[0], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](224.5 * radius, 66.546875 * radius);
                ctx[b[62]](224.5 * radius, 223.546875 * radius, 224.5 * radius, 223.546875 * radius, 224.5 * radius, 380.546875 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, options[0], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](302.5 * radius, 88.546875 * radius);
                ctx[b[62]](222.5 * radius, 227.546875 * radius, 222.5 * radius, 227.546875 * radius, 142.5 * radius, 366.546875 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, options[0], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](361.5 * radius, 147.546875 * radius);
                ctx[b[62]](223 * radius, 226.546875 * radius, 223 * radius, 226.546875 * radius, 84.5 * radius, 305.546875 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, options[0], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](379.5 * radius, 225.546875 * radius);
                ctx[b[62]](221 * radius, 225.546875 * radius, 221 * radius, 225.546875 * radius, 62.5 * radius, 225.546875 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, options[0], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](90.5 * radius, 147.546875 * radius);
                ctx[b[62]](226.5 * radius, 226.546875 * radius, 226.5 * radius, 226.546875 * radius, 362.5 * radius, 305.546875 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, options[0], 4);
                return hash;
            }
        function getColor(a, item, selected)
            /*Scope Closed:false | writes:true*/
            {
                var blue = document('canvas');
                var c = blue[b[9]]('2d');
                blue[b[187]] = 400 * a;
                blue[b[236]] = 400 * a;
                c[b[33]]();
                c[b[150]](202.5 * a, 147.5 * a);
                chroma(c, -96.5 * a, -21.5 * a, 193 * a, 193 * a, 0 * a);
                c[b[210]]();
                equal(c, item[0], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](202.5 * a, 190.5 * a);
                chroma(c, 96.5 * a, -21.5 * a, -193 * a, 43 * a, 0 * a);
                c[b[210]]();
                equal(c, item[2], item[1], 12 * a);
                c[b[33]]();
                c[b[33]]();
                c[b[150]](202.5 * a, 233.5 * a);
                chroma(c, -96.5 * a, -20.5 * a, 193 * a, 41 * a, 0 * a);
                c[b[210]]();
                equal(c, item[3], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](202.5 * a, 275 * a);
                chroma(c, 96.5 * a, -21 * a, -193 * a, 42 * a, 0 * a);
                c[b[210]]();
                equal(c, item[0], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](201 * a, 212 * a);
                c[b[65]](8.64);
                chroma(c, -116 * a, -22 * a, 232 * a, 44 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](203.5 * a, 121.5 * a);
                chroma(c, -115.5 * a, -20.5 * a, 231 * a, 41 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](203.5 * a, 299 * a);
                chroma(c, -115.5 * a, -20 * a, 231 * a, 40 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](298.5 * a, 210 * a);
                chroma(c, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](108.5 * a, 210 * a);
                chroma(c, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](204 * a, 121.5 * a);
                chroma(c, -92 * a, -9.5 * a, 184 * a, 19 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[3], 10 * a);
                c[b[33]]();
                c[b[150]](197 * a, 299 * a);
                chroma(c, 85 * a, -9 * a, -170 * a, 18 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[3], 10 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](94 * a, 317 * a);
                c[b[62]](110.5 * a, 299.5 * a, 110.5 * a, 299.5 * a, 127 * a, 282 * a);
                c[b[238]]();
                equal(c, void 0, item[1], 12 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](279 * a, 142 * a);
                c[b[62]](296.5 * a, 125.5 * a, 296.5 * a, 125.5 * a, 314 * a, 109 * a);
                c[b[238]]();
                equal(c, void 0, item[1], 12 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](93 * a, 106 * a);
                c[b[62]](110.5 * a, 124 * a, 110.5 * a, 124 * a, 128 * a, 142 * a);
                c[b[238]]();
                equal(c, void 0, item[1], 12 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](281 * a, 282 * a);
                c[b[62]](296 * a, 297.5 * a, 296 * a, 297.5 * a, 311 * a, 313 * a);
                c[b[238]]();
                equal(c, void 0, item[1], 12 * a);
                if (0 == selected) {
                    c[b[228]](2, 2);
                    c[b[150]](-7 * a, 55 * a);
                    c[b[65]](-0.5);
                    c[b[19]]();
                    c[b[253]] = 'round';
                    c[b[4]] = 'round';
                    c[b[224]](60 * a, 47 * a);
                    c[b[62]](81 * a, 46 * a, 85 * a, 47 * a, 83 * a, 63 * a);
                    c[b[62]](83 * a, 72 * a, 83 * a, 75 * a, 72 * a, 73 * a);
                    c[b[62]](68 * a, 80 * a, 69 * a, 82 * a, 66 * a, 73 * a);
                    c[b[62]](62 * a, 81 * a, 61 * a, 82 * a, 59 * a, 73 * a);
                    c[b[62]](54 * a, 81 * a, 55 * a, 81 * a, 52 * a, 74 * a);
                    c[b[62]](38 * a, 76 * a, 41 * a, 74 * a, 40 * a, 66 * a);
                    c[b[62]](38 * a, 45 * a, 39 * a, 49 * a, 59 * a, 47 * a);
                    c[b[238]]();
                    equal(c, item[4], item[4], 5 * a);
                    c[b[19]]();
                    c[b[253]] = 'round';
                    c[b[4]] = 'round';
                    c[b[224]](68 * a, 54 * a);
                    c[b[62]](75 * a, 54 * a, 77 * a, 62 * a, 71 * a, 64 * a);
                    c[b[62]](62 * a, 65 * a, 63 * a, 54 * a, 68 * a, 54 * a);
                    c[b[238]]();
                    equal(c, item[3]);
                    c[b[19]]();
                    c[b[253]] = 'round';
                    c[b[4]] = 'round';
                    c[b[224]](50 * a, 55 * a);
                    c[b[62]](57 * a, 55 * a, 58 * a, 65 * a, 52 * a, 65 * a);
                    c[b[62]](44 * a, 66 * a, 44 * a, 54 * a, 50 * a, 55 * a);
                    c[b[238]]();
                    equal(c, item[3]);
                } else {
                    if (1 == selected) {
                        c[b[228]](0.6, 0.6);
                        c[b[150]](185 * a, 165 * a);
                        c[b[19]]();
                        c[b[253]] = 'round';
                        c[b[4]] = 'round';
                        c[b[224]](108 * a, 56 * a);
                        c[b[62]](136 * a, 58 * a, 203 * a, 69 * a, 234 * a, 75 * a);
                        c[b[62]](246 * a, 77 * a, 247 * a, 78 * a, 245 * a, 90 * a);
                        c[b[62]](238 * a, 143 * a, 228 * a, 197 * a, 214 * a, 259 * a);
                        c[b[62]](212 * a, 267 * a, 209 * a, 270 * a, 189 * a, 268 * a);
                        c[b[62]](142 * a, 264 * a, 106 * a, 260 * a, 75 * a, 253 * a);
                        c[b[62]](60 * a, 250 * a, 64 * a, 250 * a, 66 * a, 221 * a);
                        c[b[62]](71 * a, 168 * a, 87 * a, 95 * a, 98 * a, 67 * a);
                        c[b[62]](101 * a, 57 * a, 103 * a, 56 * a, 106 * a, 56 * a);
                        c[b[238]]();
                        equal(c, item[4], item[4], 20 * a);
                        c[b[19]]();
                        c[b[253]] = 'round';
                        c[b[4]] = 'round';
                        c[b[224]](112 * a, 72 * a);
                        c[b[62]](132 * a, 73 * a, 227 * a, 85 * a, 226 * a, 91 * a);
                        c[b[62]](231 * a, 89 * a, 217 * a, 196 * a, 200 * a, 250 * a);
                        c[b[62]](196 * a, 254 * a, 175 * a, 249 * a, 166 * a, 249 * a);
                        c[b[62]](91 * a, 241 * a, 82 * a, 236 * a, 83 * a, 232 * a);
                        c[b[62]](90 * a, 144 * a, 108 * a, 71 * a, 111 * a, 72 * a);
                        c[b[238]]();
                        equal(c, void 0, item[0], 13 * a);
                        c[b[19]]();
                        c[b[253]] = 'round';
                        c[b[4]] = 'round';
                        c[b[224]](132 * a, 117 * a);
                        c[b[62]](171 * a, 86 * a, 191 * a, 101 * a, 188 * a, 134 * a);
                        c[b[62]](185 * a, 154 * a, 170 * a, 158 * a, 153 * a, 158 * a);
                        c[b[62]](143 * a, 172 * a, 146 * a, 180 * a, 147 * a, 193 * a);
                        equal(c, void 0, item[0], 20 * a);
                        callback(c, 142 * a, 221 * a, 16.1245154965971 * a);
                        equal(c, item[0]);
                    }
                }
                return blue;
            }
        function hashSC(a, item)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 400 * a;
                hash[b[236]] = 400 * a;
                c[b[33]]();
                c[b[150]](202.5 * a, 147.5 * a);
                chroma(c, -96.5 * a, -21.5 * a, 193 * a, 43 * a, 0 * a);
                c[b[210]]();
                equal(c, item[0], item[0], 12 * a);
                c[b[33]]();
                c[b[150]](202.5 * a, 190.5 * a);
                chroma(c, 96.5 * a, -21.5 * a, -193 * a, 43 * a, 0 * a);
                c[b[210]]();
                equal(c, item[0], item[0], 12 * a);
                c[b[33]]();
                c[b[150]](202.5 * a, 233.5 * a);
                chroma(c, -96.5 * a, -20.5 * a, 193 * a, 41 * a, 0 * a);
                c[b[210]]();
                equal(c, item[0], item[0], 12 * a);
                c[b[33]]();
                c[b[150]](202.5 * a, 275 * a);
                chroma(c, 96.5 * a, -21 * a, -193 * a, 42 * a, 0 * a);
                c[b[210]]();
                equal(c, item[0], item[0], 12 * a);
                c[b[33]]();
                c[b[150]](203.5 * a, 121.5 * a);
                chroma(c, -115.5 * a, -20.5 * a, 231 * a, 41 * a, 10 * a);
                c[b[210]]();
                equal(c, item[0], item[0], 12 * a);
                c[b[33]]();
                c[b[150]](203.5 * a, 299 * a);
                chroma(c, -115.5 * a, -20 * a, 231 * a, 40 * a, 10 * a);
                c[b[210]]();
                equal(c, item[0], item[0], 12 * a);
                c[b[33]]();
                c[b[150]](298.5 * a, 210 * a);
                chroma(c, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
                c[b[210]]();
                equal(c, item[0], item[0], 12 * a);
                c[b[33]]();
                c[b[150]](108.5 * a, 210 * a);
                chroma(c, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
                c[b[210]]();
                equal(c, item[0], item[0], 12 * a);
                return hash;
            }
        function setPos(a, item)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 650 * a;
                hash[b[236]] = 650 * a;
                c[b[228]](1.9, 1.9);
                c[b[33]]();
                c[b[150]](202.5 * a, 147.5 * a);
                chroma(c, -96.5 * a, -21.5 * a, 193 * a, 193 * a, 0 * a);
                c[b[210]]();
                equal(c, item[4], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](203.5 * a, 121.5 * a);
                chroma(c, -115.5 * a, -20.5 * a, 231 * a, 41 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](203.5 * a, 299 * a);
                chroma(c, -115.5 * a, -20 * a, 231 * a, 40 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](298.5 * a, 210 * a);
                chroma(c, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](108.5 * a, 210 * a);
                chroma(c, -20.5 * a, -109 * a, 41 * a, 218 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[1], 12 * a);
                c[b[33]]();
                c[b[150]](204 * a, 121.5 * a);
                chroma(c, -92 * a, -9.5 * a, 184 * a, 19 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[3], 10 * a);
                c[b[33]]();
                c[b[150]](197 * a, 299 * a);
                chroma(c, 85 * a, -9 * a, -170 * a, 18 * a, 10 * a);
                c[b[210]]();
                equal(c, item[3], item[3], 10 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](94 * a, 317 * a);
                c[b[62]](110.5 * a, 299.5 * a, 110.5 * a, 299.5 * a, 127 * a, 282 * a);
                c[b[238]]();
                equal(c, void 0, item[1], 12 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](279 * a, 142 * a);
                c[b[62]](296.5 * a, 125.5 * a, 296.5 * a, 125.5 * a, 314 * a, 109 * a);
                c[b[238]]();
                equal(c, void 0, item[1], 12 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](93 * a, 106 * a);
                c[b[62]](110.5 * a, 124 * a, 110.5 * a, 124 * a, 128 * a, 142 * a);
                c[b[238]]();
                equal(c, void 0, item[1], 12 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](281 * a, 282 * a);
                c[b[62]](296 * a, 297.5 * a, 296 * a, 297.5 * a, 311 * a, 313 * a);
                c[b[238]]();
                equal(c, void 0, item[1], 12 * a);
                return hash;
            }
        function initialize(i, data, test)
            /*Scope Closed:false | writes:true*/
            {
                data = document('canvas');
                var a = data[b[9]]('2d');
                data[b[187]] = 400 * i;
                data[b[236]] = 400 * i;
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](101 * i, 255 * i);
                a[b[62]](113 * i, 243 * i, 179 * i, 210 * i, 219 * i, 196 * i);
                a[b[62]](252 * i, 203 * i, 288 * i, 215 * i, 318 * i, 233 * i);
                a[b[62]](304 * i, 254 * i, 258 * i, 273 * i, 215 * i, 296 * i);
                a[b[62]](161 * i, 287 * i, 119 * i, 270 * i, 102 * i, 257 * i);
                a[b[238]]();
                equal(a, test[0], test[1], 14 * i);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](99 * i, 258 * i);
                a[b[62]](99 * i, 272.5 * i, 99 * i, 272.5 * i, 99 * i, 287 * i);
                a[b[62]](166 * i, 319 * i, 193 * i, 320 * i, 212 * i, 324 * i);
                a[b[62]](292 * i, 286 * i, 312 * i, 271 * i, 319 * i, 263 * i);
                a[b[62]](320 * i, 249 * i, 320 * i, 241 * i, 318 * i, 234 * i);
                a[b[62]](300 * i, 254 * i, 254 * i, 277 * i, 216 * i, 294 * i);
                a[b[62]](190 * i, 296 * i, 135 * i, 276 * i, 102 * i, 258 * i);
                a[b[238]]();
                equal(a, test[2], test[1], 14 * i);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](212 * i, 323 * i);
                a[b[62]](211.5 * i, 310.5 * i, 211.5 * i, 310.5 * i, 211 * i, 298 * i);
                a[b[238]]();
                equal(a, void 0, test[1], 14 * i);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](212 * i, 210 * i);
                a[b[62]](286 * i, 210 * i, 331 * i, 254 * i, 212 * i, 276 * i);
                a[b[62]](108 * i, 276 * i, 112 * i, 222 * i, 213 * i, 208 * i);
                a[b[238]]();
                equal(a, test[3], test[4], 14 * i);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](98 * i, 200 * i);
                a[b[62]](126 * i, 216 * i, 177 * i, 232 * i, 213 * i, 237 * i);
                a[b[62]](266 * i, 218 * i, 288 * i, 209 * i, 318 * i, 190 * i);
                a[b[62]](269 * i, 164 * i, 239 * i, 158 * i, 214 * i, 153 * i);
                a[b[62]](148 * i, 172 * i, 131 * i, 182 * i, 98 * i, 200 * i);
                a[b[238]]();
                equal(a, test[0], test[1], 14 * i);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](97 * i, 204 * i);
                a[b[62]](97 * i, 215.5 * i, 97 * i, 215.5 * i, 97 * i, 227 * i);
                a[b[62]](148 * i, 250 * i, 179 * i, 256 * i, 212 * i, 262 * i);
                a[b[62]](268 * i, 244 * i, 281 * i, 233 * i, 318 * i, 214 * i);
                a[b[62]](318 * i, 203 * i, 318 * i, 203 * i, 318 * i, 192 * i);
                a[b[62]](250 * i, 225 * i, 236 * i, 231 * i, 214 * i, 239 * i);
                a[b[62]](158 * i, 228 * i, 126 * i, 215 * i, 99 * i, 201 * i);
                a[b[238]]();
                equal(a, test[2], test[1], 14 * i);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](212 * i, 260 * i);
                a[b[62]](212 * i, 251.5 * i, 212 * i, 251.5 * i, 212 * i, 243 * i);
                a[b[238]]();
                equal(a, void 0, test[1], 14 * i);
                callback(a, 161 * i, 201 * i, 13 * i);
                equal(a, test[5]);
                callback(a, 216 * i, 205 * i, 8.06225774829855 * i);
                equal(a, test[5]);
                callback(a, 216 * i, 175 * i, 6.708203932499369 * i);
                equal(a, test[5]);
                callback(a, 271 * i, 191 * i, 5.0990195135927845 * i);
                equal(a, test[5]);
                callback(a, 206 * i, 180 * i, 11.180339887498949 * i);
                equal(a, test[5]);
                return data;
            }
        function codespanCallback(radius, source, test)
            /*Scope Closed:false | writes:true*/
            {
                source = document('canvas');
                var ctx = source[b[9]]('2d');
                source[b[187]] = 400 * radius;
                source[b[236]] = 400 * radius;
                ctx[b[33]]();
                ctx[b[150]](85 * radius, 237 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 54.585977194239184 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](178 * radius, 238 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 52.53573932334064 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](270 * radius, 239 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 53.58058329516393 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](222 * radius, 312 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 52.53573932334064 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](317 * radius, 159 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 57.63465889766331 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](223.5 * radius, 139.0625 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 51.66236541235796 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](132.5 * radius, 137.0625 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 52.009614495783374 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](178.5 * radius, 58.0625 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 53.16013544000805 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](177.5 * radius, 216.0625 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 50 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](84.5 * radius, 215.0625 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 54 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](319.5 * radius, 138.0625 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 55.08175741568164 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](269.5 * radius, 216.0625 * radius);
                ctx[b[65]](1.5707963267948966);
                get(ctx, 6, 54.589376255824725 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](221.5 * radius, 293.0625 * radius);
                ctx[b[65]](0.5235987755982988);
                get(ctx, 6, 49.49747468305833 * radius, 1 * radius);
                ctx[b[210]]();
                equal(ctx, test[1], test[2], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](221.5 * radius, 342.0625 * radius);
                ctx[b[62]](221.5 * radius, 350.5625 * radius, 221.5 * radius, 350.5625 * radius, 221.5 * radius, 359.0625 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, test[2], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](84.5 * radius, 270.0625 * radius);
                ctx[b[62]](84.5 * radius, 277.0625 * radius, 84.5 * radius, 277.0625 * radius, 84.5 * radius, 284.0625 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, test[2], 12 * radius);
                ctx[b[33]]();
                ctx[b[150]](84.5 * radius, 215.0625 * radius);
                ctx[b[65]](0.5235987755982988);
                get(ctx, 6, 30 * radius, 15 * radius);
                ctx[b[210]]();
                equal(ctx, test[3]);
                ctx[b[33]]();
                ctx[b[150]](177.5 * radius, 215.0625 * radius);
                ctx[b[65]](0.5235987755982988);
                get(ctx, 6, 30 * radius, 15 * radius);
                ctx[b[210]]();
                equal(ctx, test[3]);
                ctx[b[33]]();
                ctx[b[150]](222.5 * radius, 294.0625 * radius);
                ctx[b[65]](0.5235987755982988);
                get(ctx, 6, 30 * radius, 15 * radius);
                ctx[b[210]]();
                equal(ctx, test[3]);
                ctx[b[33]]();
                ctx[b[150]](270.5 * radius, 216.0625 * radius);
                ctx[b[65]](0.5235987755982988);
                get(ctx, 6, 30 * radius, 15 * radius);
                ctx[b[210]]();
                equal(ctx, test[3]);
                ctx[b[33]]();
                ctx[b[150]](320.5 * radius, 134.0625 * radius);
                ctx[b[65]](0.5235987755982988);
                get(ctx, 6, 30 * radius, 15 * radius);
                ctx[b[210]]();
                equal(ctx, test[3]);
                ctx[b[33]]();
                ctx[b[150]](224.5 * radius, 138.0625 * radius);
                ctx[b[65]](0.5235987755982988);
                get(ctx, 6, 30 * radius, 15 * radius);
                ctx[b[210]]();
                equal(ctx, test[3]);
                ctx[b[33]]();
                ctx[b[150]](133.5 * radius, 137.0625 * radius);
                ctx[b[65]](0.5235987755982988);
                get(ctx, 6, 30 * radius, 15 * radius);
                ctx[b[210]]();
                equal(ctx, test[3]);
                ctx[b[33]]();
                ctx[b[150]](178.5 * radius, 56.0625 * radius);
                ctx[b[65]](0.5235987755982988);
                get(ctx, 6, 30 * radius, 15 * radius);
                ctx[b[210]]();
                equal(ctx, test[3]);
                return source;
            }
        function add(radius, id, testCase)
            /*Scope Closed:false | writes:true*/
            {
                id = document('canvas');
                var ctx = id[b[9]]('2d');
                id[b[187]] = 52 * radius;
                id[b[236]] = 65 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](9.833328247070312 * radius, 12.078125 * radius);
                ctx[b[62]](15.333328247070312 * radius, 28.078125 * radius, 15.333328247070312 * radius, 28.078125 * radius, 20.833328247070312 * radius, 44.078125 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, testCase[1], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](7.8333282470703125 * radius, 20.078125 * radius);
                ctx[b[62]](16.833328247070312 * radius, 32.578125 * radius, 16.833328247070312 * radius, 32.578125 * radius, 25.833328247070312 * radius, 45.078125 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, testCase[1], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](23.833328247070312 * radius, 26.078125 * radius);
                ctx[b[62]](25.833328247070312 * radius, 11.078125 * radius, 16.833328247070312 * radius, 8.078125 * radius, 14.833328247070312 * radius, 7.078125 * radius);
                ctx[b[62]](11.833328247070312 * radius, 17.078125 * radius, 13.833328247070312 * radius, 22.078125 * radius, 23.833328247070312 * radius, 27.078125 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](35.83332824707031 * radius, 8.078125 * radius);
                ctx[b[62]](34.83332824707031 * radius, 27.078125 * radius, 28.833328247070312 * radius, 27.078125 * radius, 23.833328247070312 * radius, 28.078125 * radius);
                ctx[b[62]](21.833328247070312 * radius, 14.078125 * radius, 26.833328247070312 * radius, 11.078125 * radius, 35.83332824707031 * radius, 8.078125 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](25.833328247070312 * radius, 39.078125 * radius);
                ctx[b[62]](20.833328247070312 * radius, 29.078125 * radius, 14.833328247070312 * radius, 27.078125 * radius, 5.8333282470703125 * radius, 29.078125 * radius);
                ctx[b[62]](9.833328247070312 * radius, 39.078125 * radius, 16.833328247070312 * radius, 42.078125 * radius, 25.833328247070312 * radius, 40.078125 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](42.83332824707031 * radius, 23.078125 * radius);
                ctx[b[62]](35.83332824707031 * radius, 35.078125 * radius, 31.833328247070312 * radius, 37.078125 * radius, 25.833328247070312 * radius, 36.078125 * radius);
                ctx[b[62]](25.833328247070312 * radius, 24.078125 * radius, 33.83332824707031 * radius, 21.078125 * radius, 42.83332824707031 * radius, 23.078125 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](23.833328247070312 * radius, 24.078125 * radius);
                ctx[b[62]](20.833328247070312 * radius, 34.078125 * radius, 23.833328247070312 * radius, 40.078125 * radius, 27.833328247070312 * radius, 43.078125 * radius);
                ctx[b[62]](37.33332824707031 * radius, 28.078125 * radius, 37.33332824707031 * radius, 28.078125 * radius, 46.83332824707031 * radius, 13.078125 * radius);
                equal(ctx, void 0, testCase[1], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](38.83332824707031 * radius, 14.078125 * radius);
                ctx[b[62]](34.83332824707031 * radius, 24.078125 * radius, 34.83332824707031 * radius, 24.078125 * radius, 30.833328247070312 * radius, 34.078125 * radius);
                equal(ctx, void 0, testCase[1], 2 * radius);
                return id;
            }
        function getPositonalStyle(radius, node, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 170 * radius;
                hash[b[236]] = 173 * radius;
                ctx[b[150]](5 * radius, 5 * radius);
                ctx[b[277]] = node ? 0.5 : 1;
                ctx[b[33]]();
                ctx[b[150]](86.25 * radius, 84.953125 * radius);
                ctx[b[65]](0.32);
                get(ctx, 7, 42.15447781671598 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](-5 * radius, -5 * radius);
                ctx[b[33]]();
                ctx[b[150]](86.25 * radius, 84.953125 * radius);
                ctx[b[65]](0.32);
                get(ctx, 7, 42.15447781671598 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[1], testCase[2], 4 * radius);
                ctx[b[277]] = node ? 0.5 : 1;
                ctx[b[150]](5 * radius, 5 * radius);
                ctx[b[33]]();
                ctx[b[150]](86.25 * radius, 84.953125 * radius);
                ctx[b[65]](0.28);
                get(ctx, 7, 30.463092423455635 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](-5 * radius, -5 * radius);
                ctx[b[33]]();
                ctx[b[150]](86.25 * radius, 84.953125 * radius);
                ctx[b[65]](0.28);
                get(ctx, 7, 30.463092423455635 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[3], testCase[4], 4 * radius);
                ctx[b[277]] = node ? 0.5 : 1;
                ctx[b[150]](5 * radius, 5 * radius);
                callback(ctx, 86.25 * radius, 84.953125 * radius, 18.867962264113206 * radius);
                equal(ctx, testCase[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](-5 * radius, -5 * radius);
                callback(ctx, 86.25 * radius, 84.953125 * radius, 18.867962264113206 * radius);
                equal(ctx, testCase[5], testCase[6], 4 * radius);
                return hash;
            }
        function lcs(array1, array2, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 170 * array1;
                hash[b[236]] = 173 * array1;
                c[b[277]] = array2 ? 0.5 : 1;
                c[b[150]](5 * array1, 5 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](85.25 * array1, 82.953125 * array1);
                c[b[62]](98.25 * array1, 46.453125 * array1, 98.25 * array1, 46.453125 * array1, 111.25 * array1, 9.953125 * array1);
                c[b[238]]();
                equal(c, void 0, options[0], 4 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](111.25 * array1, 8.953125 * array1);
                c[b[62]](117.75 * array1, 12.453125 * array1, 117.75 * array1, 12.453125 * array1, 124.25 * array1, 15.953125 * array1);
                c[b[62]](113.75 * array1, 39.953125 * array1, 113.75 * array1, 39.953125 * array1, 103.25 * array1, 63.953125 * array1);
                c[b[62]](97.75 * array1, 64.953125 * array1, 97.75 * array1, 64.953125 * array1, 92.25 * array1, 65.953125 * array1);
                c[b[238]]();
                equal(c, options[0]);
                c[b[277]] = 1;
                c[b[150]](-5 * array1, -5 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](111.25 * array1, 8.953125 * array1);
                c[b[62]](117.75 * array1, 12.453125 * array1, 117.75 * array1, 12.453125 * array1, 124.25 * array1, 15.953125 * array1);
                c[b[62]](113.75 * array1, 39.953125 * array1, 113.75 * array1, 39.953125 * array1, 103.25 * array1, 63.953125 * array1);
                c[b[62]](97.75 * array1, 64.953125 * array1, 97.75 * array1, 64.953125 * array1, 92.25 * array1, 65.953125 * array1);
                c[b[238]]();
                equal(c, options[7]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](85.25 * array1, 82.953125 * array1);
                c[b[62]](98.25 * array1, 46.453125 * array1, 98.25 * array1, 46.453125 * array1, 111.25 * array1, 9.953125 * array1);
                c[b[238]]();
                equal(c, void 0, options[6], 4 * array1);
                c[b[277]] = array2 ? 0.5 : 1;
                c[b[150]](5 * array1, 5 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](87.25 * array1, 84.953125 * array1);
                c[b[62]](123.75 * array1, 100.453125 * array1, 123.75 * array1, 100.453125 * array1, 160.25 * array1, 115.953125 * array1);
                c[b[238]]();
                equal(c, void 0, options[0], 4 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](160.25 * array1, 114.953125 * array1);
                c[b[62]](156.25 * array1, 122.453125 * array1, 156.25 * array1, 122.453125 * array1, 152.25 * array1, 129.953125 * array1);
                c[b[62]](130.25 * array1, 117.953125 * array1, 130.25 * array1, 117.953125 * array1, 108.25 * array1, 105.953125 * array1);
                c[b[62]](107.25 * array1, 98.953125 * array1, 107.25 * array1, 98.953125 * array1, 106.25 * array1, 91.953125 * array1);
                c[b[238]]();
                equal(c, options[0]);
                c[b[277]] = 1;
                c[b[150]](-5 * array1, -5 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](160.25 * array1, 114.953125 * array1);
                c[b[62]](156.25 * array1, 122.453125 * array1, 156.25 * array1, 122.453125 * array1, 152.25 * array1, 129.953125 * array1);
                c[b[62]](130.25 * array1, 117.953125 * array1, 130.25 * array1, 117.953125 * array1, 108.25 * array1, 105.953125 * array1);
                c[b[62]](107.25 * array1, 98.953125 * array1, 107.25 * array1, 98.953125 * array1, 106.25 * array1, 91.953125 * array1);
                c[b[238]]();
                equal(c, options[7]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](87.25 * array1, 84.953125 * array1);
                c[b[62]](123.75 * array1, 100.453125 * array1, 123.75 * array1, 100.453125 * array1, 160.25 * array1, 115.953125 * array1);
                c[b[238]]();
                equal(c, void 0, options[6], 4 * array1);
                c[b[277]] = array2 ? 0.5 : 1;
                c[b[150]](5 * array1, 5 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](83.25 * array1, 83.953125 * array1);
                c[b[62]](47.75 * array1, 68.453125 * array1, 47.75 * array1, 68.453125 * array1, 12.25 * array1, 52.953125 * array1);
                c[b[238]]();
                equal(c, void 0, options[0], 4 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](13.25 * array1, 53.953125 * array1);
                c[b[62]](17.25 * array1, 46.953125 * array1, 17.25 * array1, 46.953125 * array1, 21.25 * array1, 39.953125 * array1);
                c[b[62]](42.75 * array1, 52.453125 * array1, 42.75 * array1, 52.453125 * array1, 64.25 * array1, 64.953125 * array1);
                c[b[62]](64.25 * array1, 70.953125 * array1, 64.25 * array1, 70.953125 * array1, 64.25 * array1, 76.953125 * array1);
                c[b[238]]();
                equal(c, options[0]);
                c[b[277]] = 1;
                c[b[150]](-5 * array1, -5 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](13.25 * array1, 53.953125 * array1);
                c[b[62]](17.25 * array1, 46.953125 * array1, 17.25 * array1, 46.953125 * array1, 21.25 * array1, 39.953125 * array1);
                c[b[62]](42.75 * array1, 52.453125 * array1, 42.75 * array1, 52.453125 * array1, 64.25 * array1, 64.953125 * array1);
                c[b[62]](64.25 * array1, 70.953125 * array1, 64.25 * array1, 70.953125 * array1, 64.25 * array1, 76.953125 * array1);
                c[b[238]]();
                equal(c, options[7]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](83.25 * array1, 83.953125 * array1);
                c[b[62]](47.75 * array1, 68.453125 * array1, 47.75 * array1, 68.453125 * array1, 12.25 * array1, 52.953125 * array1);
                c[b[238]]();
                equal(c, void 0, options[6], 4 * array1);
                c[b[277]] = array2 ? 0.5 : 1;
                c[b[150]](5 * array1, 5 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](84.25 * array1, 86.953125 * array1);
                c[b[62]](70.25 * array1, 123.953125 * array1, 70.25 * array1, 123.953125 * array1, 56.25 * array1, 160.953125 * array1);
                c[b[238]]();
                equal(c, void 0, options[0], 4 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](56.25 * array1, 159.953125 * array1);
                c[b[62]](49.25 * array1, 155.453125 * array1, 49.25 * array1, 155.453125 * array1, 42.25 * array1, 150.953125 * array1);
                c[b[62]](54.25 * array1, 127.953125 * array1, 54.25 * array1, 127.953125 * array1, 66.25 * array1, 104.953125 * array1);
                c[b[62]](71.25 * array1, 104.953125 * array1, 71.25 * array1, 104.953125 * array1, 76.25 * array1, 104.953125 * array1);
                c[b[238]]();
                equal(c, options[0]);
                c[b[277]] = 1;
                c[b[150]](-5 * array1, -5 * array1);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](56.25 * array1, 159.953125 * array1);
                c[b[62]](49.25 * array1, 155.453125 * array1, 49.25 * array1, 155.453125 * array1, 42.25 * array1, 150.953125 * array1);
                c[b[62]](54.25 * array1, 127.953125 * array1, 54.25 * array1, 127.953125 * array1, 66.25 * array1, 104.953125 * array1);
                c[b[62]](71.25 * array1, 104.953125 * array1, 71.25 * array1, 104.953125 * array1, 76.25 * array1, 104.953125 * array1);
                c[b[238]]();
                equal(c, options[7]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](84.25 * array1, 86.953125 * array1);
                c[b[62]](70.25 * array1, 123.953125 * array1, 70.25 * array1, 123.953125 * array1, 56.25 * array1, 160.953125 * array1);
                c[b[238]]();
                equal(c, void 0, options[6], 4 * array1);
                return hash;
            }
        function issueIDToken(ratio, opts, item)
            /*Scope Closed:false | writes:true*/
            {
                var canvasData = document('canvas');
                var ctx = canvasData[b[9]]('2d');
                canvasData[b[187]] = 170 * ratio;
                canvasData[b[236]] = 173 * ratio;
                ctx[b[277]] = opts ? 0.5 : 1;
                ctx[b[150]](5 * ratio, 5 * ratio);
                ctx[b[33]]();
                ctx[b[150]](86.25 * ratio, 84.953125 * ratio);
                get(ctx, 7, 9.848857801796104 * ratio, 5 * ratio);
                ctx[b[210]]();
                equal(ctx, item[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](-5 * ratio, -5 * ratio);
                ctx[b[33]]();
                ctx[b[150]](86.25 * ratio, 84.953125 * ratio);
                get(ctx, 7, 9.848857801796104 * ratio, 5 * ratio);
                ctx[b[210]]();
                equal(ctx, item[8], item[9], 4 * ratio);
                return canvasData;
            }
        function doTestEvalForUndefined(radius, cmp, testCase)
            /*Scope Closed:false | writes:true*/
            {
                cmp = document('canvas');
                var ctx = cmp[b[9]]('2d');
                cmp[b[187]] = 75 * radius;
                cmp[b[236]] = 55 * radius;
                ctx[b[150]](-30 * radius, -40 * radius);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[62]](67 * radius, 56 * radius, 72 * radius, 71 * radius, 72 * radius, 71 * radius);
                ctx[b[62]](72 * radius, 71 * radius, 84 * radius, 70 * radius, 75 * radius, 82 * radius);
                ctx[b[62]](70 * radius, 88 * radius, 61 * radius, 89 * radius, 58 * radius, 89 * radius);
                ctx[b[62]](55 * radius, 89 * radius, 40 * radius, 89 * radius, 46 * radius, 77 * radius);
                ctx[b[62]](46 * radius, 77 * radius, 43 * radius, 63 * radius, 43 * radius, 63 * radius);
                ctx[b[62]](35 * radius, 61 * radius, 35 * radius, 53 * radius, 42 * radius, 47 * radius);
                ctx[b[62]](48 * radius, 42 * radius, 62 * radius, 41 * radius, 66 * radius, 43 * radius);
                ctx[b[62]](70 * radius, 45 * radius, 72 * radius, 48 * radius, 67 * radius, 56 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[62]](68 * radius, 61 * radius, 72 * radius, 76 * radius, 72 * radius, 76 * radius);
                ctx[b[62]](65 * radius, 85 * radius, 61 * radius, 85 * radius, 49 * radius, 83 * radius);
                ctx[b[62]](49 * radius, 83 * radius, 44 * radius, 63 * radius, 44 * radius, 63 * radius);
                ctx[b[62]](54 * radius, 63 * radius, 60 * radius, 63 * radius, 67 * radius, 55 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[1]);
                ctx[b[19]]();
                ctx[b[224]](69 * radius, 65 * radius);
                ctx[b[62]](70 * radius, 61 * radius, 81 * radius, 66 * radius, 86 * radius, 66 * radius);
                ctx[b[62]](90 * radius, 66 * radius, 97 * radius, 63 * radius, 97 * radius, 56 * radius);
                ctx[b[62]](97 * radius, 50 * radius, 93 * radius, 47 * radius, 88 * radius, 44 * radius);
                equal(ctx, false, testCase[1], 2);
                ctx[b[19]]();
                ctx[b[224]](50 * radius, 48 * radius);
                ctx[b[62]](43 * radius, 52 * radius, 50 * radius, 54 * radius, 51 * radius, 54 * radius);
                ctx[b[62]](54 * radius, 54 * radius, 59 * radius, 52 * radius, 59 * radius, 49 * radius);
                ctx[b[62]](59 * radius, 48 * radius, 55 * radius, 46 * radius, 50 * radius, 48 * radius);
                equal(ctx, testCase[2]);
                return cmp;
            }
        function makeNative(s, obj, item)
            /*Scope Closed:false | writes:true*/
            {
                obj = document('canvas');
                var c = obj[b[9]]('2d');
                var width = 195 * s;
                var height = 190 * s;
                obj[b[187]] = width;
                obj[b[236]] = height;
                var ys = 10 * s;
                var a = 35 * s;
                var w = 150 * s;
                var N = a / 2;
                var X2 = w / 2;
                var z = 4 * s;
                c[b[150]](width / 2 - 5 * s, height / 2 - 5 * s);
                c[b[65]](-Math[b[46]] / 1.25);
                c[b[277]] = 1;
                chroma(c, -(a / 2), -(w / 2), a, w, ys);
                equal(c, item[0], item[1], z);
                c[b[150]](0, 0);
                c[b[65]](Math[b[46]] / 3);
                c[b[277]] = 1;
                chroma(c, -(a / 2), -(w / 2), a, w, ys);
                equal(c, item[0], item[1], z);
                c[b[150]](0, 5);
                chroma(c, -(a / 2) / 2, -(w / 2) / 2, a / 2, w / 3, ys - 2);
                equal(c, item[1]);
                return obj;
            }
        function init(v, c, d, o, k)
            /*Scope Closed:false | writes:true*/
            {
                var c = document('canvas');
                var $ = c[b[9]]('2d');
                var a = 70 * v;
                var l = 70 * v;
                var y = 10 * v;
                var px = 5 * v;
                c[b[187]] = a;
                c[b[236]] = l + 5 * v;
                var i = 0;
                for (; i < c[b[176]]; i++) {
                    var o = c[i];
                    $[b[277]] = o[b[129]];
                    var ret = o[b[235]](d, false, o[b[194]]);
                    $[b[33]]();
                    $[b[150]](a / 2 + o[b[276]] * v, l / 2 + o[b[134]] * v);
                    $[b[65]](o[b[58]]);
                    $[b[230]](ret, -ret[b[187]] / 2, -ret[b[236]] / 2);
                    $[b[210]]();
                }
                v = [];
                i = 0;
                for (; i < o[b[176]]; i++) {
                    c = document('canvas');
                    d = c[b[9]]('2d');
                    c[b[187]] = a;
                    c[b[236]] = l + 5 * v;
                    d[b[277]] = k / 2;
                    if (2 == i) {
                        chroma(d, 0, px, a, l, y);
                    } else {
                        chroma(d, 0, 0, a, l + 5 * v, y);
                    }
                    equal(d, '#081a19');
                    d[b[277]] = k;
                    if (2 == i) {
                        chroma(d, 0, px, a, l, y);
                    } else {
                        chroma(d, 0, 0, a, l, y);
                    }
                    equal(d, o[i]);
                    d[b[277]] = 1;
                    if (2 == i) {
                        d[b[230]](c, 0, px);
                    } else {
                        d[b[230]](c, 0, 0);
                    }
                    v[b[73]](clearphoto(c));
                }
                return v;
            }
        function DOMRenderer_create_pdf_image(a, item)
            /*Scope Closed:false | writes:true*/
            {
                var canvas = document('canvas');
                var c = canvas[b[9]]('2d');
                canvas[b[187]] = 149 * a;
                canvas[b[236]] = 356 * a;
                c[b[33]]();
                c[b[150]](74.5 * a, 177.5 * a);
                chroma(c, -57.5 * a, -161.5 * a, 100 * a, 323 * a, 10 * a);
                c[b[210]]();
                equal(c, item[0], item[1], 4 * a);
                c[b[33]]();
                c[b[150]](74.5 * a, 177.5 * a);
                chroma(c, -57.5 * a, 50.5 * a, 100 * a, 105 * a, 10 * a);
                c[b[210]]();
                equal(c, item[6], item[1], 4 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](16 * a, 125 * a);
                c[b[62]](74.5 * a, 125 * a, 118 * a, 125 * a, 118 * a, 125 * a);
                c[b[238]]();
                equal(c, item[2], item[2], 10 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](16 * a, 120 * a);
                c[b[62]](74.5 * a, 120 * a, 74.5 * a, 120 * a, 118 * a, 120 * a);
                c[b[238]]();
                equal(c, item[3], item[3], 10 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](16 * a, 228 * a);
                c[b[62]](75 * a, 228.5 * a, 118 * a, 228.5 * a, 118 * a, 229 * a);
                c[b[238]]();
                equal(c, item[2], item[2], 10 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](16 * a, 224 * a);
                c[b[62]](75 * a, 224 * a, 118 * a, 224 * a, 118 * a, 224 * a);
                c[b[238]]();
                equal(c, item[3], item[3], 10 * a);
                c[b[33]]();
                c[b[150]](72 * a, 68.5 * a);
                chroma(c, -41.5 * a, -36.5 * a, 73 * a, 73 * a, 13 * a);
                c[b[210]]();
                equal(c, item[4]);
                c[b[33]]();
                c[b[150]](72 * a, 175.5 * a);
                chroma(c, -41.5 * a, -38.5 * a, 73 * a, 73 * a, 13 * a);
                c[b[210]]();
                equal(c, item[4]);
                c[b[33]]();
                c[b[150]](72 * a, 279.5 * a);
                chroma(c, -41.5 * a, -40.5 * a, 73 * a, 73 * a, 13 * a);
                c[b[210]]();
                equal(c, item[4]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](16 * a, 338 * a);
                c[b[62]](75 * a, 338 * a, 118 * a, 338 * a, 118 * a, 338 * a);
                c[b[238]]();
                equal(c, item[2], item[2], 10 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](16 * a, 333 * a);
                c[b[62]](75 * a, 333 * a, 118 * a, 333 * a, 118 * a, 333 * a);
                c[b[238]]();
                equal(c, item[3], item[3], 10 * a);
                return canvas;
            }
        function getEditorComponent(ratio, cmp, testCase)
            /*Scope Closed:false | writes:true*/
            {
                cmp = document('canvas');
                var ctx = cmp[b[9]]('2d');
                var left = 140 * ratio;
                var y = 90 * ratio;
                cmp[b[187]] = 193 * ratio;
                cmp[b[236]] = 198 * ratio;
                var width = 10 * ratio;
                var a = 25 * ratio;
                var opacity = 180 * ratio;
                var N = a / 2;
                var opaque = opacity / 2;
                var gutterWidth = 4 * ratio;
                ctx[b[150]](-25 * ratio, 1 * ratio);
                ctx[b[150]](left, y);
                ctx[b[65]](-Math[b[46]] / 5);
                chroma(ctx, -(a / 2), -(opacity / 2), a, opacity, width);
                equal(ctx, testCase[0], testCase[1], gutterWidth);
                ctx[b[150]](-30 * ratio, -25 * ratio);
                ctx[b[65]](Math[b[46]] / 3);
                chroma(ctx, -(a / 2), -(opacity / 2), a, opacity, width);
                equal(ctx, testCase[0], testCase[1], gutterWidth);
                ctx[b[150]](35 * ratio, 30 * ratio);
                ctx[b[65]](Math[b[46]] / 3);
                chroma(ctx, -(a / 2), -(opacity / 2), a, opacity, width);
                equal(ctx, testCase[0], testCase[1], gutterWidth);
                return cmp;
            }
        function insertionBinarySort(steepness, cmp, array)
            /*Scope Closed:false | writes:true*/
            {
                cmp = document('canvas');
                var a = cmp[b[9]]('2d');
                var expected = 145 * steepness;
                var got = 145 * steepness;
                cmp[b[187]] = expected;
                cmp[b[236]] = got;
                var tanh_value = 70 * steepness;
                a[b[150]](expected / 2, got / 2);
                a[b[277]] = 0.4;
                callback(a, 0, 0, tanh_value);
                equal(a, array[0]);
                tanh_value = 50 * steepness;
                a[b[150]](0, 0);
                a[b[277]] = 0.8;
                callback(a, 0, 0, tanh_value);
                equal(a, array[0]);
                tanh_value = 35 * steepness;
                a[b[150]](0, 0);
                a[b[277]] = 0.8;
                callback(a, 0, 0, tanh_value);
                equal(a, array[1]);
                tanh_value = 20 * steepness;
                a[b[150]](0, 0);
                a[b[277]] = 0.8;
                callback(a, 0, 0, tanh_value);
                equal(a, array[2]);
                return cmp;
            }
        function doTestEvalForSecureIFrameContentWindow(t, cmp, testCase)
            /*Scope Closed:false | writes:true*/
            {
                cmp = document('canvas');
                var c = cmp[b[9]]('2d');
                var expected = 135 * t;
                var got = 190 * t;
                cmp[b[187]] = expected;
                cmp[b[236]] = got;
                var x = 10 * t;
                var a = 25 * t;
                var w = 180 * t;
                var N = a / 2;
                var wl = w / 2;
                t = t * 4;
                c[b[150]](expected / 2, got / 2);
                c[b[65]](-Math[b[46]] / 5);
                c[b[277]] = 1;
                chroma(c, -(a / 2), -(w / 2), a, w, x);
                equal(c, testCase[0], testCase[1], t);
                c[b[150]](0, 0);
                c[b[65]](Math[b[46]] / 5);
                c[b[277]] = 1;
                chroma(c, -(a / 2), -(w / 2), a, w, x);
                equal(c, testCase[0], testCase[1], t);
                return cmp;
            }
        function number_hex_parser(k, c, t)
            /*Scope Closed:false | writes:true*/
            {
                c = document('canvas');
                var a = c[b[9]]('2d');
                var f = 205 * k;
                var value = 205 * k;
                c[b[187]] = f;
                c[b[236]] = value;
                k = k * 100;
                a[b[150]](f / 2, value / 2);
                a[b[277]] = 1;
                callback(a, 0, 0, k);
                equal(a, t[0]);
                return c;
            }
        function createEditor(column, cmp, options)
            /*Scope Closed:false | writes:true*/
            {
                cmp = document('canvas');
                var a = cmp[b[9]]('2d');
                var expected = 370 * column;
                var got = 370 * column;
                cmp[b[187]] = expected;
                cmp[b[236]] = got;
                a[b[277]] = 0.2;
                callback(a, expected / 2, got / 2, 180 * column);
                equal(a, options[0]);
                return cmp;
            }
        function load(n, c, item)
            /*Scope Closed:false | writes:true*/
            {
                c = document('canvas');
                var a = c[b[9]]('2d');
                c[b[187]] = 155 * n;
                c[b[236]] = 127 * n;
                a[b[277]] = 0.5;
                a[b[150]](0, 8 * n);
                a[b[150]](-7 * n, -20 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](55 * n, 68 * n);
                a[b[62]](86 * n, 64 * n, 117 * n, 66 * n, 134 * n, 68 * n);
                a[b[62]](152 * n, 69 * n, 165 * n, 86 * n, 152 * n, 104 * n);
                a[b[62]](146 * n, 87 * n, 122 * n, 89 * n, 98 * n, 90 * n);
                a[b[62]](64 * n, 89 * n, 41 * n, 91 * n, 36 * n, 106 * n);
                a[b[62]](19 * n, 92 * n, 31 * n, 71 * n, 54 * n, 69 * n);
                a[b[238]]();
                equal(a, item[0]);
                a[b[277]] = 1;
                a[b[150]](0, -8 * n);
                a[b[150]](7 * n, 20 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](24 * n, 28 * n);
                a[b[62]](39 * n, 30 * n, 37 * n, 31 * n, 40 * n, 32 * n);
                a[b[62]](22 * n, 45 * n, 26 * n, 58 * n, 29 * n, 66 * n);
                a[b[62]](86.5 * n, 65 * n, 86.5 * n, 65 * n, 144 * n, 64 * n);
                a[b[62]](151 * n, 42 * n, 132 * n, 20 * n, 120 * n, 16 * n);
                a[b[62]](106 * n, 12 * n, 89 * n, 0 * n, 73 * n, 3 * n);
                a[b[62]](51 * n, 5 * n, 36 * n, 20 * n, 25 * n, 28 * n);
                a[b[238]]();
                equal(a, item[1], item[2], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](30 * n, 41 * n);
                a[b[62]](49 * n, 31 * n, 53 * n, 29 * n, 62 * n, 27 * n);
                a[b[62]](59 * n, 24 * n, 56 * n, 25 * n, 53 * n, 24 * n);
                a[b[62]](67 * n, 15 * n, 84 * n, 12 * n, 120 * n, 16 * n);
                a[b[62]](107 * n, 11 * n, 96 * n, 6 * n, 85 * n, 2 * n);
                a[b[62]](59 * n, 3 * n, 54 * n, 7 * n, 40 * n, 17 * n);
                a[b[62]](32.5 * n, 22.5 * n, 32.5 * n, 22.5 * n, 25 * n, 28 * n);
                a[b[62]](32 * n, 30 * n, 32 * n, 30 * n, 39 * n, 32 * n);
                a[b[238]]();
                equal(a, item[3]);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](24 * n, 28 * n);
                a[b[62]](39 * n, 30 * n, 37 * n, 31 * n, 40 * n, 32 * n);
                a[b[62]](22 * n, 45 * n, 26 * n, 58 * n, 29 * n, 66 * n);
                a[b[62]](86.5 * n, 65 * n, 86.5 * n, 65 * n, 144 * n, 64 * n);
                a[b[62]](151 * n, 42 * n, 132 * n, 20 * n, 120 * n, 16 * n);
                a[b[62]](106 * n, 12 * n, 89 * n, 0 * n, 73 * n, 3 * n);
                a[b[62]](51 * n, 5 * n, 36 * n, 20 * n, 25 * n, 28 * n);
                a[b[238]]();
                equal(a, void 0, item[2], 4 * n);
                callback(a, 18 * n, 38 * n, 14.866068747318506 * n);
                equal(a, item[4], item[5], 4 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](39 * n, 30 * n);
                a[b[62]](27 * n, 38 * n, 25 * n, 50 * n, 26 * n, 60 * n);
                a[b[62]](36.5 * n, 58.5 * n, 36.5 * n, 58.5 * n, 47 * n, 57 * n);
                equal(a, item[1], item[2], 4 * n);
                a[b[150]](-7 * n, -20 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](27 * n, 74 * n);
                a[b[62]](38 * n, 77.5 * n, 38 * n, 77.5 * n, 49 * n, 81 * n);
                a[b[62]](54.5 * n, 75.5 * n, 54.5 * n, 75.5 * n, 60 * n, 70 * n);
                a[b[62]](64 * n, 72 * n, 64 * n, 72 * n, 68 * n, 74 * n);
                a[b[62]](80.5 * n, 67.5 * n, 80.5 * n, 67.5 * n, 93 * n, 61 * n);
                a[b[62]](104.5 * n, 68 * n, 104.5 * n, 68 * n, 116 * n, 75 * n);
                a[b[62]](120.5 * n, 72.5 * n, 120.5 * n, 72.5 * n, 125 * n, 70 * n);
                a[b[62]](129 * n, 75 * n, 129 * n, 75 * n, 133 * n, 80 * n);
                a[b[62]](145.5 * n, 76.5 * n, 145.5 * n, 76.5 * n, 158 * n, 73 * n);
                a[b[62]](158 * n, 87 * n, 158 * n, 93 * n, 155 * n, 95 * n);
                a[b[62]](152.5 * n, 96 * n, 152.5 * n, 96 * n, 150 * n, 97 * n);
                a[b[62]](121 * n, 85 * n, 108 * n, 86 * n, 93 * n, 85 * n);
                a[b[62]](64 * n, 85 * n, 52 * n, 95 * n, 38 * n, 99 * n);
                a[b[62]](36 * n, 98.5 * n, 36 * n, 98.5 * n, 34 * n, 98 * n);
                a[b[62]](25 * n, 98 * n, 27 * n, 91 * n, 27 * n, 76 * n);
                a[b[238]]();
                equal(a, item[6], item[7], 6 * n);
                return c;
            }
        function waitForItemUpdated(radius, index, testCase)
            /*Scope Closed:false | writes:true*/
            {
                index = document('canvas');
                var ctx = index[b[9]]('2d');
                index[b[187]] = 155 * radius;
                index[b[236]] = 127 * radius;
                ctx[b[277]] = 0.5;
                ctx[b[150]](0, 8 * radius);
                ctx[b[150]](-7 * radius, -20 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](55 * radius, 68 * radius);
                ctx[b[62]](86 * radius, 64 * radius, 117 * radius, 66 * radius, 134 * radius, 68 * radius);
                ctx[b[62]](152 * radius, 69 * radius, 165 * radius, 86 * radius, 152 * radius, 104 * radius);
                ctx[b[62]](146 * radius, 87 * radius, 122 * radius, 89 * radius, 98 * radius, 90 * radius);
                ctx[b[62]](64 * radius, 89 * radius, 41 * radius, 91 * radius, 36 * radius, 106 * radius);
                ctx[b[62]](19 * radius, 92 * radius, 31 * radius, 71 * radius, 54 * radius, 69 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -8 * radius);
                ctx[b[150]](7 * radius, 20 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](24 * radius, 28 * radius);
                ctx[b[62]](39 * radius, 30 * radius, 37 * radius, 31 * radius, 40 * radius, 32 * radius);
                ctx[b[62]](22 * radius, 45 * radius, 26 * radius, 58 * radius, 29 * radius, 66 * radius);
                ctx[b[62]](86.5 * radius, 65 * radius, 86.5 * radius, 65 * radius, 144 * radius, 64 * radius);
                ctx[b[62]](151 * radius, 42 * radius, 132 * radius, 20 * radius, 120 * radius, 16 * radius);
                ctx[b[62]](106 * radius, 12 * radius, 89 * radius, 0 * radius, 73 * radius, 3 * radius);
                ctx[b[62]](51 * radius, 5 * radius, 36 * radius, 20 * radius, 25 * radius, 28 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[1], testCase[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](30 * radius, 41 * radius);
                ctx[b[62]](49 * radius, 31 * radius, 53 * radius, 29 * radius, 62 * radius, 27 * radius);
                ctx[b[62]](59 * radius, 24 * radius, 56 * radius, 25 * radius, 53 * radius, 24 * radius);
                ctx[b[62]](67 * radius, 15 * radius, 84 * radius, 12 * radius, 120 * radius, 16 * radius);
                ctx[b[62]](107 * radius, 11 * radius, 96 * radius, 6 * radius, 85 * radius, 2 * radius);
                ctx[b[62]](59 * radius, 3 * radius, 54 * radius, 7 * radius, 40 * radius, 17 * radius);
                ctx[b[62]](32.5 * radius, 22.5 * radius, 32.5 * radius, 22.5 * radius, 25 * radius, 28 * radius);
                ctx[b[62]](32 * radius, 30 * radius, 32 * radius, 30 * radius, 39 * radius, 32 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](24 * radius, 28 * radius);
                ctx[b[62]](39 * radius, 30 * radius, 37 * radius, 31 * radius, 40 * radius, 32 * radius);
                ctx[b[62]](22 * radius, 45 * radius, 26 * radius, 58 * radius, 29 * radius, 66 * radius);
                ctx[b[62]](86.5 * radius, 65 * radius, 86.5 * radius, 65 * radius, 144 * radius, 64 * radius);
                ctx[b[62]](151 * radius, 42 * radius, 132 * radius, 20 * radius, 120 * radius, 16 * radius);
                ctx[b[62]](106 * radius, 12 * radius, 89 * radius, 0 * radius, 73 * radius, 3 * radius);
                ctx[b[62]](51 * radius, 5 * radius, 36 * radius, 20 * radius, 25 * radius, 28 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, testCase[2], 4 * radius);
                callback(ctx, 18 * radius, 38 * radius, 14.866068747318506 * radius);
                equal(ctx, testCase[4], testCase[5], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](39 * radius, 30 * radius);
                ctx[b[62]](27 * radius, 38 * radius, 25 * radius, 50 * radius, 26 * radius, 60 * radius);
                ctx[b[62]](36.5 * radius, 58.5 * radius, 36.5 * radius, 58.5 * radius, 47 * radius, 57 * radius);
                equal(ctx, testCase[1], testCase[2], 4 * radius);
                ctx[b[150]](-7 * radius, -20 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](55 * radius, 68 * radius);
                ctx[b[62]](86 * radius, 64 * radius, 117 * radius, 66 * radius, 134 * radius, 68 * radius);
                ctx[b[62]](152 * radius, 69 * radius, 165 * radius, 86 * radius, 152 * radius, 104 * radius);
                ctx[b[62]](146 * radius, 87 * radius, 122 * radius, 89 * radius, 98 * radius, 90 * radius);
                ctx[b[62]](64 * radius, 89 * radius, 41 * radius, 91 * radius, 36 * radius, 106 * radius);
                ctx[b[62]](19 * radius, 92 * radius, 31 * radius, 71 * radius, 54 * radius, 69 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[4], testCase[5], 4 * radius);
                return index;
            }
        function or(r, args)
            /*Scope Closed:false | writes:true*/
            {
                var cmp = document('canvas');
                var a = cmp[b[9]]('2d');
                var expected = 220 * r;
                var w = 220 * r;
                var height = 32 * r;
                var z = 4 * r;
                cmp[b[187]] = expected;
                cmp[b[236]] = w;
                a[b[150]](expected / 2, w / 2 + 10 * r);
                a[b[277]] = 0.5;
                callback(a, 0, 0, height);
                equal(a, args[0], args[0]);
                a[b[150]](0, -8 * r);
                a[b[277]] = 1;
                callback(a, 0, 0, height);
                equal(a, args[1], args[2], z);
                return cmp;
            }
        function getTimeline(name, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var cmp = document('canvas');
                var a = cmp[b[9]]('2d');
                var expected = 40 * name;
                var got = 40 * name;
                var idA = 16 * name;
                var exceptions = 4 * name;
                cmp[b[187]] = expected;
                cmp[b[236]] = got;
                a[b[150]](expected / 2, got / 2);
                a[b[277]] = 1;
                callback(a, 0, 0, idA);
                equal(a, testCase[0], testCase[1], exceptions);
                return cmp;
            }
        function testHighlight(pick_x, hlvals)
            /*Scope Closed:false | writes:true*/
            {
                var cmp = document('canvas');
                var a = cmp[b[9]]('2d');
                var expected = 220 * pick_x;
                var FragCoord_x = 220 * pick_x;
                var idA = 16 * pick_x;
                cmp[b[187]] = expected;
                cmp[b[236]] = FragCoord_x;
                a[b[150]](expected / 2, FragCoord_x / 2);
                a[b[277]] = 0.5;
                callback(a, 0, 0, idA);
                equal(a, hlvals[0]);
                a[b[277]] = 1;
                return cmp;
            }
        function $fz(radius, args, n, froot)
            /*Scope Closed:false | writes:true*/
            {
                var c = document('canvas');
                var ctx = c[b[9]]('2d');
                var y = 30 * radius;
                var delta = 20 * radius;
                var x = 200 * radius;
                var distance = 180 * radius;
                var fracx = x / 2;
                var segs = distance / 2;
                c[b[187]] = 210 * radius;
                c[b[236]] = 205 * radius;
                c[b[187]] = 419 * radius;
                c[b[236]] = 412 * radius;
                if (1 == froot) {
                    ctx[b[33]]();
                    ctx[b[150]](10 * radius, 0 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](117.99996948242188 * radius, 216.40621948242188 * radius);
                    ctx[b[62]](86.99996948242188 * radius, 221.40621948242188 * radius, 74.99996948242188 * radius, 217.40621948242188 * radius, 60.999969482421875 * radius, 205.40621948242188 * radius);
                    equal(ctx, void 0, args[4], 3 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](114.99996948242188 * radius, 227.40621948242188 * radius);
                    ctx[b[62]](90.99996948242188 * radius, 233.40621948242188 * radius, 66.99996948242188 * radius, 228.40621948242188 * radius, 43.999969482421875 * radius, 225.40621948242188 * radius);
                    equal(ctx, void 0, args[4], 3 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](110.99996948242188 * radius, 236.40621948242188 * radius);
                    ctx[b[62]](94.99996948242188 * radius, 244.40621948242188 * radius, 79.99996948242188 * radius, 249.40621948242188 * radius, 60.999969482421875 * radius, 249.40621948242188 * radius);
                    equal(ctx, void 0, args[4], 3 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](111.99996948242188 * radius, 206.29513549804688 * radius);
                    ctx[b[62]](91.99996948242188 * radius, 206.29513549804688 * radius, 87.99996948242188 * radius, 201.29513549804688 * radius, 79.99996948242188 * radius, 192.29513549804688 * radius);
                    equal(ctx, void 0, args[4], 3 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](109.99996948242188 * radius, 249.18402099609375 * radius);
                    ctx[b[62]](97.99996948242188 * radius, 263.18402099609375 * radius, 85.99996948242188 * radius, 271.18402099609375 * radius, 65.99996948242188 * radius, 277.18402099609375 * radius);
                    equal(ctx, void 0, args[4], 3 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](105.99996948242188 * radius, 192.18402099609375 * radius);
                    ctx[b[62]](99.49996948242188 * radius, 197.68402099609375 * radius, 99.49996948242188 * radius, 197.68402099609375 * radius, 92.99996948242188 * radius, 203.18402099609375 * radius);
                    ctx[b[62]](95.99996948242188 * radius, 213.18402099609375 * radius, 95.99996948242188 * radius, 215.18402099609375 * radius, 89.99996948242188 * radius, 219.18402099609375 * radius);
                    ctx[b[62]](91.99996948242188 * radius, 223.18402099609375 * radius, 91.99996948242188 * radius, 226.18402099609375 * radius, 87.99996948242188 * radius, 230.18402099609375 * radius);
                    ctx[b[62]](89.99996948242188 * radius, 234.18402099609375 * radius, 91.99996948242188 * radius, 237.18402099609375 * radius, 90.99996948242188 * radius, 244.18402099609375 * radius);
                    ctx[b[62]](96.99996948242188 * radius, 252.18402099609375 * radius, 96.99996948242188 * radius, 256.18402099609375 * radius, 95.99996948242188 * radius, 262.18402099609375 * radius);
                    ctx[b[62]](106.49996948242188 * radius, 264.18402099609375 * radius, 106.49996948242188 * radius, 264.18402099609375 * radius, 116.99996948242188 * radius, 266.18402099609375 * radius);
                    equal(ctx, void 0, args[4], 3 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](104.99996948242188 * radius, 183.29513549804688 * radius);
                    ctx[b[62]](99.99996948242188 * radius, 193.29513549804688 * radius, 93.99996948242188 * radius, 195.29513549804688 * radius, 89.99996948242188 * radius, 201.29513549804688 * radius);
                    ctx[b[62]](86.99996948242188 * radius, 212.29513549804688 * radius, 85.99996948242188 * radius, 214.29513549804688 * radius, 81.99996948242188 * radius, 215.29513549804688 * radius);
                    ctx[b[62]](83.99996948242188 * radius, 223.29513549804688 * radius, 83.99996948242188 * radius, 227.29513549804688 * radius, 79.99996948242188 * radius, 230.29513549804688 * radius);
                    ctx[b[62]](83.99996948242188 * radius, 235.29513549804688 * radius, 84.99996948242188 * radius, 240.29513549804688 * radius, 79.99996948242188 * radius, 246.29513549804688 * radius);
                    ctx[b[62]](86.99996948242188 * radius, 251.29513549804688 * radius, 91.99996948242188 * radius, 256.2951354980469 * radius, 89.99996948242188 * radius, 266.2951354980469 * radius);
                    ctx[b[62]](102.99996948242188 * radius, 269.2951354980469 * radius, 102.99996948242188 * radius, 269.2951354980469 * radius, 115.99996948242188 * radius, 272.2951354980469 * radius);
                    equal(ctx, void 0, args[4], 3 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](107.99996948242188 * radius, 177.85067749023438 * radius);
                    ctx[b[62]](95.99996948242188 * radius, 187.35067749023438 * radius, 95.99996948242188 * radius, 187.35067749023438 * radius, 83.99996948242188 * radius, 196.85067749023438 * radius);
                    ctx[b[62]](82.99996948242188 * radius, 203.85067749023438 * radius, 80.99996948242188 * radius, 209.85067749023438 * radius, 72.99996948242188 * radius, 210.85067749023438 * radius);
                    ctx[b[62]](73.99996948242188 * radius, 220.85067749023438 * radius, 73.99996948242188 * radius, 221.85067749023438 * radius, 66.99996948242188 * radius, 227.85067749023438 * radius);
                    ctx[b[62]](71.99996948242188 * radius, 235.85067749023438 * radius, 73.99996948242188 * radius, 239.85067749023438 * radius, 71.99996948242188 * radius, 247.85067749023438 * radius);
                    ctx[b[62]](80.99996948242188 * radius, 257.8506774902344 * radius, 81.99996948242188 * radius, 263.8506774902344 * radius, 77.99996948242188 * radius, 271.8506774902344 * radius);
                    ctx[b[62]](95.49996948242188 * radius, 272.8506774902344 * radius, 95.49996948242188 * radius, 272.8506774902344 * radius, 112.99996948242188 * radius, 273.8506774902344 * radius);
                    equal(ctx, void 0, args[4], 3 * radius);
                    ctx[b[210]]();
                } else {
                    if (2 == froot) {
                        ctx[b[33]]();
                        ctx[b[150]](130 * radius, 35 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](170.99996948242188 * radius, 133.85067749023438 * radius);
                        ctx[b[62]](195.99996948242188 * radius, 129.85067749023438 * radius, 196.99996948242188 * radius, 111.85067749023438 * radius, 200.99996948242188 * radius, 88.85067749023438 * radius);
                        equal(ctx, void 0, args[4], 3 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](169.99996948242188 * radius, 143.85067749023438 * radius);
                        ctx[b[62]](189.99996948242188 * radius, 145.85067749023438 * radius, 207.99996948242188 * radius, 126.85067749023438 * radius, 222.99996948242188 * radius, 100.85067749023438 * radius);
                        equal(ctx, void 0, args[4], 3 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](170.99996948242188 * radius, 157.85067749023438 * radius);
                        ctx[b[62]](193.99996948242188 * radius, 160.85067749023438 * radius, 210.99996948242188 * radius, 151.85067749023438 * radius, 232.99996948242188 * radius, 139.85067749023438 * radius);
                        equal(ctx, void 0, args[4], 3 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](169.99996948242188 * radius, 168.85067749023438 * radius);
                        ctx[b[62]](192.99996948242188 * radius, 175.85067749023438 * radius, 203.99996948242188 * radius, 177.85067749023438 * radius, 245.99996948242188 * radius, 168.85067749023438 * radius);
                        equal(ctx, void 0, args[4], 3 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](167.99996948242188 * radius, 168.85067749023438 * radius);
                        ctx[b[62]](183.99996948242188 * radius, 189.85067749023438 * radius, 191.99996948242188 * radius, 193.85067749023438 * radius, 220.99996948242188 * radius, 196.85067749023438 * radius);
                        equal(ctx, void 0, args[4], 3 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](176.99996948242188 * radius, 117.85067749023438 * radius);
                        ctx[b[62]](181.99996948242188 * radius, 120.85067749023438 * radius, 181.99996948242188 * radius, 120.85067749023438 * radius, 186.99996948242188 * radius, 123.85067749023438 * radius);
                        ctx[b[62]](183.99996948242188 * radius, 137.85067749023438 * radius, 185.99996948242188 * radius, 136.85067749023438 * radius, 190.99996948242188 * radius, 136.85067749023438 * radius);
                        ctx[b[62]](186.99996948242188 * radius, 147.85067749023438 * radius, 189.99996948242188 * radius, 152.85067749023438 * radius, 193.99996948242188 * radius, 155.85067749023438 * radius);
                        ctx[b[62]](187.99996948242188 * radius, 165.85067749023438 * radius, 190.99996948242188 * radius, 169.85067749023438 * radius, 190.99996948242188 * radius, 172.85067749023438 * radius);
                        ctx[b[62]](186.99996948242188 * radius, 183.85067749023438 * radius, 186.99996948242188 * radius, 185.85067749023438 * radius, 189.99996948242188 * radius, 188.85067749023438 * radius);
                        ctx[b[62]](182.49996948242188 * radius, 195.35067749023438 * radius, 182.49996948242188 * radius, 195.35067749023438 * radius, 174.99996948242188 * radius, 201.85067749023438 * radius);
                        equal(ctx, void 0, args[4], 3 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](176.99996948242188 * radius, 112.18402099609375 * radius);
                        ctx[b[62]](183.99996948242188 * radius, 119.18402099609375 * radius, 186.99996948242188 * radius, 117.18402099609375 * radius, 192.99996948242188 * radius, 116.18402099609375 * radius);
                        ctx[b[62]](191.99996948242188 * radius, 126.18402099609375 * radius, 193.99996948242188 * radius, 130.18402099609375 * radius, 199.99996948242188 * radius, 130.18402099609375 * radius);
                        ctx[b[62]](194.99996948242188 * radius, 145.18402099609375 * radius, 197.99996948242188 * radius, 147.18402099609375 * radius, 201.99996948242188 * radius, 153.18402099609375 * radius);
                        ctx[b[62]](196.99996948242188 * radius, 164.18402099609375 * radius, 197.99996948242188 * radius, 169.18402099609375 * radius, 201.99996948242188 * radius, 174.18402099609375 * radius);
                        ctx[b[62]](194.99996948242188 * radius, 184.18402099609375 * radius, 196.99996948242188 * radius, 187.18402099609375 * radius, 200.99996948242188 * radius, 193.18402099609375 * radius);
                        ctx[b[62]](185.99996948242188 * radius, 195.18402099609375 * radius, 181.99996948242188 * radius, 201.18402099609375 * radius, 174.99996948242188 * radius, 210.18402099609375 * radius);
                        equal(ctx, void 0, args[4], 3 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](176.99996948242188 * radius, 101.29513549804688 * radius);
                        ctx[b[62]](181.99996948242188 * radius, 108.29513549804688 * radius, 189.99996948242188 * radius, 110.29513549804688 * radius, 195.99996948242188 * radius, 107.29513549804688 * radius);
                        ctx[b[62]](197.99996948242188 * radius, 121.29513549804688 * radius, 200.99996948242188 * radius, 122.29513549804688 * radius, 206.99996948242188 * radius, 122.29513549804688 * radius);
                        ctx[b[62]](201.99996948242188 * radius, 138.29513549804688 * radius, 204.99996948242188 * radius, 142.29513549804688 * radius, 211.99996948242188 * radius, 148.29513549804688 * radius);
                        ctx[b[62]](201.99996948242188 * radius, 156.29513549804688 * radius, 205.99996948242188 * radius, 167.29513549804688 * radius, 213.99996948242188 * radius, 173.29513549804688 * radius);
                        ctx[b[62]](204.99996948242188 * radius, 181.29513549804688 * radius, 204.99996948242188 * radius, 187.29513549804688 * radius, 205.99996948242188 * radius, 193.29513549804688 * radius);
                        ctx[b[62]](190.99996948242188 * radius, 198.29513549804688 * radius, 181.99996948242188 * radius, 205.29513549804688 * radius, 174.99996948242188 * radius, 214.29513549804688 * radius);
                        equal(ctx, void 0, args[4], 3 * radius);
                        ctx[b[210]]();
                    }
                }
                ctx[b[150]](c[b[187]] / 2, c[b[236]] / 2);
                if (!froot) {
                    ctx[b[277]] = 0.5;
                    chroma(ctx, -(x / 2), -(distance / 2), x, distance + 20 * radius, y);
                    equal(ctx, args[0]);
                    if (n) {
                        ctx[b[65]](Math[b[46]]);
                    }
                    ctx[b[277]] = 1;
                    chroma(ctx, -(x / 2), -(distance / 2), x, distance, y);
                    equal(ctx, args[1], args[2], 4);
                    ctx[b[277]] = 1;
                    chroma(ctx, -(x / 2) + 35 * radius, -(distance / 2) + 20 * radius, x - 50 * radius, distance - 50 * radius, y - 10 * radius);
                    equal(ctx, args[3]);
                }
                if (3 == froot) {
                    ctx[b[150]](-c[b[187]] / 2, -c[b[236]] / 2);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](121 * radius, 190 * radius);
                    ctx[b[62]](129 * radius, 186 * radius, 137 * radius, 183 * radius, 135 * radius, 163 * radius);
                    ctx[b[62]](131 * radius, 135 * radius, 153 * radius, 127 * radius, 177 * radius, 124 * radius);
                    ctx[b[62]](198 * radius, 120 * radius, 208 * radius, 122 * radius, 226 * radius, 128 * radius);
                    ctx[b[62]](261 * radius, 112 * radius, 271 * radius, 126 * radius, 287 * radius, 147 * radius);
                    ctx[b[62]](310 * radius, 163 * radius, 304 * radius, 183 * radius, 283 * radius, 196 * radius);
                    ctx[b[62]](296 * radius, 249 * radius, 278 * radius, 262 * radius, 253 * radius, 263 * radius);
                    ctx[b[62]](210 * radius, 264 * radius, 188 * radius, 252 * radius, 177 * radius, 234 * radius);
                    ctx[b[62]](133 * radius, 242 * radius, 123 * radius, 241 * radius, 115 * radius, 225 * radius);
                    ctx[b[62]](109 * radius, 206 * radius, 115 * radius, 193 * radius, 121 * radius, 190 * radius);
                    ctx[b[238]]();
                    equal(ctx, args[4]);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](219 * radius, 144 * radius);
                    ctx[b[62]](251 * radius, 121 * radius, 277 * radius, 136 * radius, 276 * radius, 159 * radius);
                    ctx[b[62]](276 * radius, 176 * radius, 273 * radius, 191 * radius, 242 * radius, 193 * radius);
                    ctx[b[62]](226 * radius, 228 * radius, 155 * radius, 219 * radius, 150 * radius, 183 * radius);
                    ctx[b[62]](142 * radius, 144 * radius, 174 * radius, 127 * radius, 219 * radius, 144 * radius);
                    ctx[b[238]]();
                    equal(ctx, args[5]);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](123 * radius, 214 * radius);
                    ctx[b[62]](119 * radius, 198 * radius, 129 * radius, 189 * radius, 146 * radius, 194 * radius);
                    ctx[b[62]](158 * radius, 201 * radius, 165 * radius, 218 * radius, 147 * radius, 226 * radius);
                    ctx[b[62]](135 * radius, 230 * radius, 125 * radius, 222 * radius, 123 * radius, 214 * radius);
                    ctx[b[238]]();
                    equal(ctx, args[5]);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](257 * radius, 199 * radius);
                    ctx[b[62]](264 * radius, 199 * radius, 275 * radius, 213 * radius, 261 * radius, 220 * radius);
                    ctx[b[62]](246 * radius, 225 * radius, 235 * radius, 200 * radius, 257 * radius, 199 * radius);
                    ctx[b[238]]();
                    equal(ctx, args[5]);
                    ctx[b[150]](-5 * radius, 55 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](186 * radius, 123 * radius);
                    ctx[b[62]](198 * radius, 115 * radius, 219 * radius, 110 * radius, 219 * radius, 123 * radius);
                    ctx[b[62]](216 * radius, 135 * radius, 171 * radius, 143 * radius, 186 * radius, 123 * radius);
                    ctx[b[238]]();
                    equal(ctx, args[5]);
                    ctx[b[150]](5 * radius, -55 * radius);
                    ctx[b[150]](-5 * radius, 15 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](171 * radius, 241 * radius);
                    ctx[b[62]](189 * radius, 234 * radius, 200 * radius, 248 * radius, 189 * radius, 254 * radius);
                    ctx[b[62]](179 * radius, 260 * radius, 158 * radius, 246 * radius, 171 * radius, 241 * radius);
                    ctx[b[238]]();
                    equal(ctx, args[5]);
                } else {
                    if (4 == froot) {
                        ctx[b[150]](-c[b[187]] / 2, -c[b[236]] / 2);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](30 * radius, 167 * radius);
                        ctx[b[62]](47 * radius, 144 * radius, 64 * radius, 140 * radius, 80 * radius, 147 * radius);
                        ctx[b[62]](95 * radius, 154 * radius, 95 * radius, 159 * radius, 100 * radius, 179 * radius);
                        ctx[b[62]](105 * radius, 202 * radius, 95 * radius, 218 * radius, 69 * radius, 218 * radius);
                        ctx[b[62]](48 * radius, 236 * radius, 26 * radius, 223 * radius, 28 * radius, 213 * radius);
                        ctx[b[62]](28 * radius, 205 * radius, 29 * radius, 199 * radius, 32 * radius, 195 * radius);
                        ctx[b[62]](21 * radius, 183 * radius, 27 * radius, 173 * radius, 30 * radius, 167 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[4]);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](26 * radius, 145 * radius);
                        ctx[b[62]](32 * radius, 138 * radius, 37 * radius, 137 * radius, 40 * radius, 139 * radius);
                        ctx[b[62]](43 * radius, 140 * radius, 41 * radius, 150 * radius, 31 * radius, 159 * radius);
                        ctx[b[62]](23 * radius, 166 * radius, 17 * radius, 158 * radius, 26 * radius, 145 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[4]);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](13 * radius, 193 * radius);
                        ctx[b[62]](21 * radius, 187 * radius, 30 * radius, 190 * radius, 20 * radius, 202 * radius);
                        ctx[b[62]](13 * radius, 208 * radius, 7 * radius, 202 * radius, 13 * radius, 193 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[4]);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](121 * radius, 190 * radius);
                        ctx[b[62]](129 * radius, 186 * radius, 137 * radius, 183 * radius, 135 * radius, 163 * radius);
                        ctx[b[62]](131 * radius, 135 * radius, 153 * radius, 127 * radius, 177 * radius, 124 * radius);
                        ctx[b[62]](198 * radius, 120 * radius, 208 * radius, 122 * radius, 226 * radius, 128 * radius);
                        ctx[b[62]](261 * radius, 112 * radius, 271 * radius, 126 * radius, 287 * radius, 147 * radius);
                        ctx[b[62]](310 * radius, 163 * radius, 304 * radius, 183 * radius, 283 * radius, 196 * radius);
                        ctx[b[62]](296 * radius, 249 * radius, 278 * radius, 262 * radius, 253 * radius, 263 * radius);
                        ctx[b[62]](210 * radius, 264 * radius, 188 * radius, 252 * radius, 177 * radius, 234 * radius);
                        ctx[b[62]](133 * radius, 242 * radius, 123 * radius, 241 * radius, 115 * radius, 225 * radius);
                        ctx[b[62]](109 * radius, 206 * radius, 115 * radius, 193 * radius, 121 * radius, 190 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[4]);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](335 * radius, 196 * radius);
                        ctx[b[62]](312 * radius, 208 * radius, 300 * radius, 185 * radius, 309 * radius, 167 * radius);
                        ctx[b[62]](314 * radius, 141 * radius, 339 * radius, 127 * radius, 359 * radius, 144 * radius);
                        ctx[b[62]](363 * radius, 148 * radius, 364 * radius, 150 * radius, 364 * radius, 150 * radius);
                        ctx[b[62]](392 * radius, 143 * radius, 396 * radius, 183 * radius, 378 * radius, 204 * radius);
                        ctx[b[62]](367 * radius, 215 * radius, 339 * radius, 208 * radius, 335 * radius, 196 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[4]);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](349 * radius, 212 * radius);
                        ctx[b[62]](339 * radius, 216 * radius, 334 * radius, 208 * radius, 341 * radius, 203 * radius);
                        ctx[b[62]](353 * radius, 198 * radius, 361 * radius, 205 * radius, 349 * radius, 212 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[4]);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](46 * radius, 165 * radius);
                        ctx[b[62]](55 * radius, 148 * radius, 85 * radius, 157 * radius, 83 * radius, 175 * radius);
                        ctx[b[62]](99 * radius, 185 * radius, 89 * radius, 212 * radius, 66 * radius, 204 * radius);
                        ctx[b[62]](55 * radius, 212 * radius, 43 * radius, 212 * radius, 41 * radius, 202 * radius);
                        ctx[b[62]](39 * radius, 194 * radius, 42 * radius, 187 * radius, 49 * radius, 185 * radius);
                        ctx[b[62]](44 * radius, 175 * radius, 45 * radius, 172 * radius, 46 * radius, 165 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[4]);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](219 * radius, 144 * radius);
                        ctx[b[62]](251 * radius, 121 * radius, 277 * radius, 136 * radius, 276 * radius, 159 * radius);
                        ctx[b[62]](276 * radius, 176 * radius, 273 * radius, 191 * radius, 242 * radius, 193 * radius);
                        ctx[b[62]](226 * radius, 228 * radius, 155 * radius, 219 * radius, 150 * radius, 183 * radius);
                        ctx[b[62]](142 * radius, 144 * radius, 174 * radius, 127 * radius, 219 * radius, 144 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[5]);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](123 * radius, 214 * radius);
                        ctx[b[62]](119 * radius, 198 * radius, 129 * radius, 189 * radius, 146 * radius, 194 * radius);
                        ctx[b[62]](158 * radius, 201 * radius, 165 * radius, 218 * radius, 147 * radius, 226 * radius);
                        ctx[b[62]](135 * radius, 230 * radius, 125 * radius, 222 * radius, 123 * radius, 214 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[5]);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](257 * radius, 199 * radius);
                        ctx[b[62]](264 * radius, 199 * radius, 275 * radius, 213 * radius, 261 * radius, 220 * radius);
                        ctx[b[62]](246 * radius, 225 * radius, 235 * radius, 200 * radius, 257 * radius, 199 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[5]);
                        ctx[b[150]](-5 * radius, 55 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](186 * radius, 123 * radius);
                        ctx[b[62]](198 * radius, 115 * radius, 219 * radius, 110 * radius, 219 * radius, 123 * radius);
                        ctx[b[62]](216 * radius, 135 * radius, 171 * radius, 143 * radius, 186 * radius, 123 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[5]);
                        ctx[b[150]](5 * radius, -55 * radius);
                        ctx[b[150]](-5 * radius, 15 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](171 * radius, 241 * radius);
                        ctx[b[62]](189 * radius, 234 * radius, 200 * radius, 248 * radius, 189 * radius, 254 * radius);
                        ctx[b[62]](179 * radius, 260 * radius, 158 * radius, 246 * radius, 171 * radius, 241 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[5]);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](367 * radius, 164 * radius);
                        ctx[b[62]](380 * radius, 160 * radius, 391 * radius, 185 * radius, 371 * radius, 189 * radius);
                        ctx[b[62]](362 * radius, 192 * radius, 354 * radius, 191 * radius, 350 * radius, 185 * radius);
                        ctx[b[62]](326 * radius, 205 * radius, 314 * radius, 182 * radius, 316 * radius, 171 * radius);
                        ctx[b[62]](317 * radius, 150 * radius, 332 * radius, 143 * radius, 347 * radius, 147 * radius);
                        ctx[b[62]](361 * radius, 151 * radius, 366 * radius, 158 * radius, 367 * radius, 164 * radius);
                        ctx[b[238]]();
                        equal(ctx, args[4]);
                    }
                }
                return c;
            }
        function setup(radius, args, appPath, done)
            /*Scope Closed:false | writes:true*/
            {
                var map = document('canvas');
                var ctx = map[b[9]]('2d');
                map[b[187]] = 121 * radius;
                map[b[236]] = 130 * radius;
                ctx[b[150]](0, 20 * radius);
                if (1 == appPath) {
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](6 * radius, 23 * radius);
                    ctx[b[62]](6 * radius, 46 * radius, 6 * radius, 46 * radius, 6 * radius, 69 * radius);
                    ctx[b[62]](21 * radius, 69 * radius, 21 * radius, 69 * radius, 36 * radius, 69 * radius);
                    ctx[b[62]](45.5 * radius, 78.5 * radius, 45.5 * radius, 78.5 * radius, 55 * radius, 88 * radius);
                    ctx[b[62]](55.5 * radius, 45.5 * radius, 55.5 * radius, 45.5 * radius, 56 * radius, 3 * radius);
                    ctx[b[62]](47 * radius, 14 * radius, 47 * radius, 14 * radius, 38 * radius, 25 * radius);
                    ctx[b[62]](23 * radius, 25 * radius, 23 * radius, 25 * radius, 6 * radius, 23 * radius);
                    ctx[b[238]]();
                    equal(ctx, void 0, args[3], 13 * radius);
                }
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](6 * radius, 23 * radius);
                ctx[b[62]](6 * radius, 46 * radius, 6 * radius, 46 * radius, 6 * radius, 69 * radius);
                ctx[b[62]](21 * radius, 69 * radius, 21 * radius, 69 * radius, 36 * radius, 69 * radius);
                ctx[b[62]](45.5 * radius, 78.5 * radius, 45.5 * radius, 78.5 * radius, 55 * radius, 88 * radius);
                ctx[b[62]](55.5 * radius, 45.5 * radius, 55.5 * radius, 45.5 * radius, 56 * radius, 3 * radius);
                ctx[b[62]](47 * radius, 14 * radius, 47 * radius, 14 * radius, 38 * radius, 25 * radius);
                ctx[b[62]](23 * radius, 25 * radius, 23 * radius, 25 * radius, 6 * radius, 23 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 4 * radius);
                if (1 == done) {
                    ctx[b[150]](0, 5 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](67 * radius, 30 * radius);
                    ctx[b[62]](73 * radius, 47 * radius, 69 * radius, 45 * radius, 67 * radius, 58 * radius);
                    equal(ctx, void 0, args[0], 10 * radius);
                    ctx[b[150]](3, 0 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](70 * radius, 17 * radius);
                    ctx[b[62]](83 * radius, 45 * radius, 76 * radius, 55 * radius, 70 * radius, 69 * radius);
                    equal(ctx, void 0, args[0], 10 * radius);
                    ctx[b[150]](3, 0 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](76 * radius, 8 * radius);
                    ctx[b[62]](88 * radius, 31 * radius, 89 * radius, 55 * radius, 76 * radius, 79 * radius);
                    equal(ctx, void 0, args[0], 10 * radius);
                    if (1 == appPath) {
                        ctx[b[150]](-6 * radius, -5 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](67 * radius, 30 * radius);
                        ctx[b[62]](73 * radius, 47 * radius, 69 * radius, 45 * radius, 67 * radius, 58 * radius);
                        equal(ctx, void 0, args[3], 18 * radius);
                        ctx[b[150]](3, 0 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](70 * radius, 17 * radius);
                        ctx[b[62]](83 * radius, 45 * radius, 76 * radius, 55 * radius, 70 * radius, 69 * radius);
                        equal(ctx, void 0, args[3], 18 * radius);
                        ctx[b[150]](3, 0 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](76 * radius, 8 * radius);
                        ctx[b[62]](88 * radius, 31 * radius, 89 * radius, 55 * radius, 76 * radius, 79 * radius);
                        equal(ctx, void 0, args[3], 18 * radius);
                        ctx[b[150]](-6, 0 * radius);
                    } else {
                        ctx[b[150]](-6 * radius, -5 * radius);
                    }
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](67 * radius, 30 * radius);
                    ctx[b[62]](73 * radius, 47 * radius, 69 * radius, 45 * radius, 67 * radius, 58 * radius);
                    equal(ctx, void 0, args[2], 10 * radius);
                    ctx[b[150]](3, 0 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](70 * radius, 17 * radius);
                    ctx[b[62]](83 * radius, 45 * radius, 76 * radius, 55 * radius, 70 * radius, 69 * radius);
                    equal(ctx, void 0, args[2], 10 * radius);
                    ctx[b[150]](3, 0 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](76 * radius, 8 * radius);
                    ctx[b[62]](88 * radius, 31 * radius, 89 * radius, 55 * radius, 76 * radius, 79 * radius);
                    equal(ctx, void 0, args[2], 10 * radius);
                } else {
                    if (1 == appPath) {
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](108 * radius, 27 * radius);
                        ctx[b[62]](94 * radius, 45.5 * radius, 94 * radius, 45.5 * radius, 80 * radius, 64 * radius);
                        ctx[b[238]]();
                        equal(ctx, void 0, args[3], 18 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](79 * radius, 30 * radius);
                        ctx[b[62]](93 * radius, 47 * radius, 93 * radius, 47 * radius, 107 * radius, 64 * radius);
                        ctx[b[238]]();
                        equal(ctx, void 0, args[3], 18 * radius);
                    } else {
                        ctx[b[150]](0, -5 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](108 * radius, 27 * radius);
                        ctx[b[62]](94 * radius, 45.5 * radius, 94 * radius, 45.5 * radius, 80 * radius, 64 * radius);
                        ctx[b[238]]();
                        equal(ctx, void 0, args[0], 7 * radius);
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](79 * radius, 30 * radius);
                        ctx[b[62]](93 * radius, 47 * radius, 93 * radius, 47 * radius, 107 * radius, 64 * radius);
                        ctx[b[238]]();
                        equal(ctx, void 0, args[0], 7 * radius);
                        ctx[b[150]](0, 5 * radius);
                    }
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](108 * radius, 27 * radius);
                    ctx[b[62]](94 * radius, 45.5 * radius, 94 * radius, 45.5 * radius, 80 * radius, 64 * radius);
                    ctx[b[238]]();
                    equal(ctx, void 0, args[2], 7 * radius);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](79 * radius, 30 * radius);
                    ctx[b[62]](93 * radius, 47 * radius, 93 * radius, 47 * radius, 107 * radius, 64 * radius);
                    ctx[b[238]]();
                    equal(ctx, void 0, args[2], 7 * radius);
                }
                return map;
            }
        function eachNoCallbackIterator(a, test, callback)
            /*Scope Closed:false | writes:true*/
            {
                var dst = document('canvas');
                var c = dst[b[9]]('2d');
                var a3 = 450 * a;
                var a2 = 145 * a;
                var intersectionTime = a3 / 2;
                var yp = a2 / 2;
                var r = 10 * a;
                var w = 300 * a;
                var aa = 30 * a;
                var scaled_w = w / 2;
                var fractionUploaded = aa / 2;
                if (callback) {
                    dst[b[187]] = 145 * a;
                    dst[b[236]] = 450 * a;
                    c[b[65]](Math[b[46]] / 2);
                    c[b[33]]();
                    c[b[277]] = 0.5;
                    chroma(c, 100 * a, -110 * a, w, aa, r);
                    equal(c, test[0]);
                    c[b[150]](178 * a, -98 * a);
                    chroma(c, -(w / 2), -(aa / 2) - 6 * a, 100 * a, 100 * a, r);
                    equal(c, test[0]);
                    c[b[150]](-50 * a, 5 * a);
                    chroma(c, 220 * a, -15 * a, 90 * a, 90 * a, r);
                    equal(c, test[0]);
                    c[b[210]]();
                    c[b[33]]();
                    c[b[277]] = 1;
                    c[b[150]](250 * a, -63 * a);
                    chroma(c, -(w / 2) - 20 * a, -(aa / 2), w, aa, r);
                    equal(c, test[1], test[2], 4);
                    c[b[150]](-70 * a, -40 * a);
                    chroma(c, -(w / 2) - 20 * a, -(aa / 2), 100 * a, 100 * a, r);
                    equal(c, test[3], test[4], 4);
                    c[b[150]](-70 * a, 15 * a);
                    chroma(c, 220 * a, -22 * a, 90 * a, 90 * a, r);
                    equal(c, test[3], test[4], 4);
                    chroma(c, 230 * a, -12 * a, 55 * a, 55 * a, r);
                    equal(c, test[5]);
                    c[b[150]](-70 * a, 0);
                    chroma(c, -15 * a, -2 * a, 60 * a, 60 * a, r);
                } else {
                    dst[b[187]] = a3;
                    dst[b[236]] = a2;
                    c[b[33]]();
                    c[b[277]] = 0.5;
                    c[b[150]](intersectionTime, yp + 10 * a);
                    chroma(c, -(w / 2), -(aa / 2), w, aa, r);
                    equal(c, test[0]);
                    c[b[150]](-65 * a, -25 * a);
                    chroma(c, -(w / 2), -(aa / 2) - 6 * a, 100 * a, 100 * a, 15 * a);
                    equal(c, test[0]);
                    c[b[150]](-35 * a, -5 * a);
                    chroma(c, 220 * a, -15 * a, 90 * a, 90 * a, 15 * a);
                    equal(c, test[0]);
                    c[b[210]]();
                    c[b[33]]();
                    c[b[277]] = 1;
                    c[b[150]](240 * a, 70 * a);
                    chroma(c, -(w / 2), -(aa / 2), w, aa, r);
                    equal(c, test[1], test[2], 4);
                    c[b[150]](-60 * a, -40 * a);
                    chroma(c, -(w / 2) - 20 * a, -(aa / 2), 100 * a, 100 * a, 15 * a);
                    equal(c, test[3], test[4], 4);
                    c[b[150]](-55 * a, 10 * a);
                    chroma(c, 220 * a, -22 * a, 90 * a, 90 * a, 15 * a);
                    equal(c, test[3], test[4], 4);
                    chroma(c, 240 * a, -12 * a, 55 * a, 55 * a, 12 * a);
                    equal(c, test[5]);
                    c[b[150]](45 * a, 0 * a);
                    chroma(c, -145 * a, -2 * a, 60 * a, 60 * a, 12 * a);
                }
                equal(c, test[5]);
                c[b[210]]();
                return dst;
            }
        function projectPointToLine(a, ab)
            /*Scope Closed:false | writes:true*/
            {
                var map = document('canvas');
                var cmp = map[b[9]]('2d');
                var offset = Math(ab[b[187]], a[b[187]]);
                var c = Math(ab[b[236]], a[b[236]]);
                map[b[187]] = offset;
                map[b[236]] = c;
                cmp[b[230]](a, (offset - a[b[187]]) / 2, (c - a[b[236]]) / 2);
                cmp[b[230]](ab, (offset - ab[b[187]]) / 2, (c - ab[b[236]]) / 2);
                return map;
            }
        function and(ratio, index, item)
            /*Scope Closed:false | writes:true*/
            {
                var cmp = document('canvas');
                var ctx = cmp[b[9]]('2d');
                var got = 105 * ratio;
                var length = 125 * ratio;
                var gutterWidth = 4 * ratio;
                var width = 10 * ratio;
                var offset = 5 * ratio;
                var w = 10 * ratio;
                var height = 110 * ratio;
                var scaled_w = w / 2;
                var perHeight = height / 2;
                cmp[b[187]] = got;
                cmp[b[236]] = length;
                ctx[b[33]]();
                ctx[b[277]] = index ? 0.5 : 1;
                ctx[b[150]](got / 2 + 8 * ratio, length / 2 + 5 * ratio);
                chroma(ctx, -(w / 2), -(height / 2), w, height, width);
                if (index) {
                    equal(ctx, item[0]);
                } else {
                    equal(ctx, item[1]);
                }
                ctx[b[150]](-130 * ratio + 5 * ratio, -128 * ratio + 5 * ratio);
                ctx[b[19]]();
                ctx[b[62]](159 * ratio, 93 * ratio, 156 * ratio, 99 * ratio, 154 * ratio, 102 * ratio);
                ctx[b[62]](128 * ratio, 92 * ratio, 90 * ratio, 93 * ratio, 72 * ratio, 96 * ratio);
                ctx[b[62]](68 * ratio, 84 * ratio, 143 * ratio, 73 * ratio, 162 * ratio, 86 * ratio);
                ctx[b[238]]();
                equal(ctx, item[2]);
                ctx[b[210]]();
                ctx[b[150]](got / 2 + 8, length / 2);
                ctx[b[277]] = 1;
                chroma(ctx, -(w / 2), -(height / 2), w, height, width);
                equal(ctx, item[3], item[4], gutterWidth);
                ctx[b[150]](-130 * ratio, -125 * ratio);
                ctx[b[19]]();
                ctx[b[62]](159 * ratio, 93 * ratio, 156 * ratio, 99 * ratio, 154 * ratio, 102 * ratio);
                ctx[b[62]](128 * ratio, 92 * ratio, 90 * ratio, 93 * ratio, 72 * ratio, 96 * ratio);
                ctx[b[62]](68 * ratio, 84 * ratio, 143 * ratio, 73 * ratio, 162 * ratio, 86 * ratio);
                ctx[b[238]]();
                equal(ctx, item[5], item[6], gutterWidth);
                return cmp;
            }
        function ebookConvert(ratio, callback, args)
            /*Scope Closed:false | writes:true*/
            {
                var canvasData = document('canvas');
                var ctx = canvasData[b[9]]('2d');
                canvasData[b[187]] = 170 * ratio;
                canvasData[b[236]] = 469 * ratio;
                ctx[b[277]] = callback ? 0.5 : 1;
                ctx[b[150]](20 * ratio, 20 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](88 * ratio, 30 * ratio);
                ctx[b[62]](96 * ratio, 49.5 * ratio, 96 * ratio, 49.5 * ratio, 104 * ratio, 69 * ratio);
                ctx[b[62]](105.5 * ratio, 41.5 * ratio, 105.5 * ratio, 41.5 * ratio, 107 * ratio, 14 * ratio);
                ctx[b[62]](114 * ratio, 9.5 * ratio, 114 * ratio, 9.5 * ratio, 121 * ratio, 5 * ratio);
                ctx[b[62]](135.5 * ratio, 27.5 * ratio, 135.5 * ratio, 27.5 * ratio, 150 * ratio, 50 * ratio);
                ctx[b[62]](110.5 * ratio, 286 * ratio, 110.5 * ratio, 286 * ratio, 103 * ratio, 331 * ratio);
                ctx[b[62]](69.5 * ratio, 325 * ratio, 69.5 * ratio, 325 * ratio, 36 * ratio, 319 * ratio);
                ctx[b[62]](56.5 * ratio, 180 * ratio, 56.5 * ratio, 180 * ratio, 77 * ratio, 41 * ratio);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](118 * ratio, 31 * ratio);
                ctx[b[62]](125 * ratio, 43 * ratio, 125 * ratio, 43 * ratio, 132 * ratio, 55 * ratio);
                ctx[b[62]](109.5 * ratio, 185.5 * ratio, 109.5 * ratio, 185.5 * ratio, 87 * ratio, 316 * ratio);
                ctx[b[62]](72 * ratio, 313.5 * ratio, 72 * ratio, 313.5 * ratio, 57 * ratio, 311 * ratio);
                ctx[b[62]](76.5 * ratio, 181 * ratio, 76.5 * ratio, 181 * ratio, 96 * ratio, 51 * ratio);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](56 * ratio, 328 * ratio);
                ctx[b[62]](47 * ratio, 385.5 * ratio, 47 * ratio, 385.5 * ratio, 38 * ratio, 443 * ratio);
                ctx[b[62]](52 * ratio, 446 * ratio, 52 * ratio, 446 * ratio, 66 * ratio, 449 * ratio);
                ctx[b[62]](76.5 * ratio, 388.5 * ratio, 76.5 * ratio, 388.5 * ratio, 87 * ratio, 328 * ratio);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](74 * ratio, 302 * ratio);
                ctx[b[62]](104 * ratio, 316.5 * ratio, 104 * ratio, 316.5 * ratio, 134 * ratio, 331 * ratio);
                ctx[b[62]](133 * ratio, 341 * ratio, 133 * ratio, 341 * ratio, 132 * ratio, 351 * ratio);
                ctx[b[62]](69.5 * ratio, 342 * ratio, 69.5 * ratio, 342 * ratio, 7 * ratio, 333 * ratio);
                ctx[b[62]](8 * ratio, 323 * ratio, 8 * ratio, 323 * ratio, 9 * ratio, 313 * ratio);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[33]]();
                ctx[b[150]](51.5 * ratio, 440.5 * ratio);
                ctx[b[65]](0.2);
                chroma(ctx, -20.5 * ratio, -18.5 * ratio, 41 * ratio, 37 * ratio, 10 * ratio);
                ctx[b[210]]();
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](73 * ratio, 316 * ratio);
                ctx[b[62]](90 * ratio, 324.5 * ratio, 90 * ratio, 324.5 * ratio, 107 * ratio, 333 * ratio);
                ctx[b[62]](70 * ratio, 327.5 * ratio, 70 * ratio, 327.5 * ratio, 33 * ratio, 322 * ratio);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](-20 * ratio, -20 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](88 * ratio, 30 * ratio);
                ctx[b[62]](96 * ratio, 49.5 * ratio, 96 * ratio, 49.5 * ratio, 104 * ratio, 69 * ratio);
                ctx[b[62]](105.5 * ratio, 41.5 * ratio, 105.5 * ratio, 41.5 * ratio, 107 * ratio, 14 * ratio);
                ctx[b[62]](114 * ratio, 9.5 * ratio, 114 * ratio, 9.5 * ratio, 121 * ratio, 5 * ratio);
                ctx[b[62]](135.5 * ratio, 27.5 * ratio, 135.5 * ratio, 27.5 * ratio, 150 * ratio, 50 * ratio);
                ctx[b[62]](110.5 * ratio, 286 * ratio, 110.5 * ratio, 286 * ratio, 103 * ratio, 331 * ratio);
                ctx[b[62]](69.5 * ratio, 325 * ratio, 69.5 * ratio, 325 * ratio, 36 * ratio, 319 * ratio);
                ctx[b[62]](56.5 * ratio, 180 * ratio, 56.5 * ratio, 180 * ratio, 77 * ratio, 41 * ratio);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 7 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](118 * ratio, 31 * ratio);
                ctx[b[62]](125 * ratio, 43 * ratio, 125 * ratio, 43 * ratio, 132 * ratio, 55 * ratio);
                ctx[b[62]](109.5 * ratio, 185.5 * ratio, 109.5 * ratio, 185.5 * ratio, 87 * ratio, 316 * ratio);
                ctx[b[62]](72 * ratio, 313.5 * ratio, 72 * ratio, 313.5 * ratio, 57 * ratio, 311 * ratio);
                ctx[b[62]](76.5 * ratio, 181 * ratio, 76.5 * ratio, 181 * ratio, 96 * ratio, 51 * ratio);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](88 * ratio, 30 * ratio);
                ctx[b[62]](96 * ratio, 49.5 * ratio, 96 * ratio, 49.5 * ratio, 104 * ratio, 69 * ratio);
                ctx[b[62]](105.5 * ratio, 41.5 * ratio, 105.5 * ratio, 41.5 * ratio, 107 * ratio, 14 * ratio);
                ctx[b[62]](114 * ratio, 9.5 * ratio, 114 * ratio, 9.5 * ratio, 121 * ratio, 5 * ratio);
                ctx[b[62]](135.5 * ratio, 27.5 * ratio, 135.5 * ratio, 27.5 * ratio, 150 * ratio, 50 * ratio);
                ctx[b[62]](110.5 * ratio, 286 * ratio, 110.5 * ratio, 286 * ratio, 103 * ratio, 331 * ratio);
                ctx[b[62]](69.5 * ratio, 325 * ratio, 69.5 * ratio, 325 * ratio, 36 * ratio, 319 * ratio);
                ctx[b[62]](56.5 * ratio, 180 * ratio, 56.5 * ratio, 180 * ratio, 77 * ratio, 41 * ratio);
                ctx[b[238]]();
                equal(ctx, void 0, args[2], 7 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](56 * ratio, 328 * ratio);
                ctx[b[62]](47 * ratio, 385.5 * ratio, 47 * ratio, 385.5 * ratio, 38 * ratio, 443 * ratio);
                ctx[b[62]](52 * ratio, 446 * ratio, 52 * ratio, 446 * ratio, 66 * ratio, 449 * ratio);
                ctx[b[62]](76.5 * ratio, 388.5 * ratio, 76.5 * ratio, 388.5 * ratio, 87 * ratio, 328 * ratio);
                ctx[b[238]]();
                equal(ctx, args[4], args[5], 7 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](74 * ratio, 302 * ratio);
                ctx[b[62]](104 * ratio, 316.5 * ratio, 104 * ratio, 316.5 * ratio, 134 * ratio, 331 * ratio);
                ctx[b[62]](133 * ratio, 341 * ratio, 133 * ratio, 341 * ratio, 132 * ratio, 351 * ratio);
                ctx[b[62]](69.5 * ratio, 342 * ratio, 69.5 * ratio, 342 * ratio, 7 * ratio, 333 * ratio);
                ctx[b[62]](8 * ratio, 323 * ratio, 8 * ratio, 323 * ratio, 9 * ratio, 313 * ratio);
                ctx[b[238]]();
                equal(ctx, args[4], args[5], 7 * ratio);
                ctx[b[33]]();
                ctx[b[150]](51.5 * ratio, 440.5 * ratio);
                ctx[b[65]](0.2);
                chroma(ctx, -20.5 * ratio, -18.5 * ratio, 41 * ratio, 37 * ratio, 10 * ratio);
                ctx[b[210]]();
                equal(ctx, args[4], args[5], 7 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](73 * ratio, 316 * ratio);
                ctx[b[62]](90 * ratio, 324.5 * ratio, 90 * ratio, 324.5 * ratio, 107 * ratio, 333 * ratio);
                ctx[b[62]](70 * ratio, 327.5 * ratio, 70 * ratio, 327.5 * ratio, 33 * ratio, 322 * ratio);
                ctx[b[238]]();
                equal(ctx, args[6]);
                return canvasData;
            }
        function rotateAdd(a, cx, cy)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 424 * a;
                hash[b[236]] = 788 * a;
                c[b[150]](25 * a, 25 * a);
                c[b[277]] = cx ? 0.5 : 1;
                c[b[33]]();
                c[b[150]](193.5 * a, 602.5 * a);
                c[b[65]](-0.12);
                chroma(c, -26.5 * a, -97.5 * a, 53 * a, 195 * a, 25 * a);
                c[b[210]]();
                equal(c, cy[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](137 * a, 519 * a);
                c[b[62]](182 * a, 513 * a, 182 * a, 513 * a, 227 * a, 507 * a);
                c[b[62]](214 * a, 417 * a, 189 * a, 304 * a, 221 * a, 180 * a);
                c[b[62]](191 * a, 126 * a, 192 * a, 105 * a, 198 * a, 64 * a);
                c[b[62]](123 * a, 102 * a, 99 * a, 285 * a, 137 * a, 517 * a);
                c[b[238]]();
                equal(c, cy[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](175 * a, 119 * a);
                c[b[62]](176 * a, 142 * a, 184 * a, 165 * a, 197 * a, 183 * a);
                c[b[62]](167 * a, 325 * a, 191 * a, 405 * a, 202 * a, 502 * a);
                c[b[62]](180 * a, 503 * a, 180 * a, 503 * a, 158 * a, 504 * a);
                c[b[62]](135 * a, 396 * a, 134 * a, 185 * a, 175 * a, 119 * a);
                c[b[238]]();
                equal(c, cy[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](110 * a, 518 * a);
                c[b[62]](111.5 * a, 533 * a, 111.5 * a, 533 * a, 113 * a, 548 * a);
                c[b[62]](162.5 * a, 544 * a, 162.5 * a, 544 * a, 212 * a, 540 * a);
                c[b[62]](312 * a, 535 * a, 281 * a, 665 * a, 225 * a, 665 * a);
                c[b[62]](227 * a, 686.5 * a, 227 * a, 686.5 * a, 229 * a, 708 * a);
                c[b[62]](343 * a, 684 * a, 354 * a, 496 * a, 222 * a, 498 * a);
                c[b[62]](165.5 * a, 503 * a, 165.5 * a, 503 * a, 109 * a, 508 * a);
                c[b[238]]();
                equal(c, cy[0]);
                callback(c, 204 * a, 693 * a, 36.013886210738214 * a);
                equal(c, cy[0]);
                callback(c, 105 * a, 518 * a, 30 * a);
                equal(c, cy[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](171 * a, 535 * a);
                c[b[62]](139.5 * a, 537.5 * a, 139.5 * a, 537.5 * a, 108 * a, 540 * a);
                c[b[62]](110 * a, 527.5 * a, 110 * a, 527.5 * a, 112 * a, 515 * a);
                c[b[62]](148 * a, 513 * a, 148 * a, 513 * a, 184 * a, 511 * a);
                c[b[238]]();
                equal(c, cy[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](244 * a, 669 * a);
                c[b[62]](248.5 * a, 680 * a, 248.5 * a, 680 * a, 253 * a, 691 * a);
                c[b[62]](239.5 * a, 697 * a, 239.5 * a, 697 * a, 226 * a, 703 * a);
                c[b[62]](223 * a, 691.5 * a, 223 * a, 691.5 * a, 220 * a, 680 * a);
                c[b[238]]();
                equal(c, cy[0]);
                c[b[150]](-25 * a, -25 * a);
                c[b[277]] = 1;
                c[b[33]]();
                c[b[150]](193.5 * a, 602.5 * a);
                c[b[65]](-0.12);
                chroma(c, -26.5 * a, -97.5 * a, 53 * a, 195 * a, 25 * a);
                c[b[210]]();
                equal(c, cy[1], cy[2], 16 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](137 * a, 519 * a);
                c[b[62]](182 * a, 513 * a, 182 * a, 513 * a, 227 * a, 507 * a);
                c[b[62]](214 * a, 417 * a, 189 * a, 304 * a, 221 * a, 180 * a);
                c[b[62]](191 * a, 126 * a, 192 * a, 105 * a, 198 * a, 64 * a);
                c[b[62]](123 * a, 102 * a, 99 * a, 285 * a, 137 * a, 517 * a);
                c[b[238]]();
                equal(c, cy[3], cy[4], 16 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](175 * a, 119 * a);
                c[b[62]](176 * a, 142 * a, 184 * a, 165 * a, 197 * a, 183 * a);
                c[b[62]](167 * a, 325 * a, 191 * a, 405 * a, 202 * a, 502 * a);
                c[b[62]](180 * a, 503 * a, 180 * a, 503 * a, 158 * a, 504 * a);
                c[b[62]](135 * a, 396 * a, 134 * a, 185 * a, 175 * a, 119 * a);
                c[b[238]]();
                equal(c, cy[5]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](110 * a, 518 * a);
                c[b[62]](111.5 * a, 533 * a, 111.5 * a, 533 * a, 113 * a, 548 * a);
                c[b[62]](162.5 * a, 544 * a, 162.5 * a, 544 * a, 212 * a, 540 * a);
                c[b[62]](312 * a, 535 * a, 281 * a, 665 * a, 225 * a, 665 * a);
                c[b[62]](227 * a, 686.5 * a, 227 * a, 686.5 * a, 229 * a, 708 * a);
                c[b[62]](343 * a, 684 * a, 354 * a, 496 * a, 222 * a, 498 * a);
                c[b[62]](165.5 * a, 503 * a, 165.5 * a, 503 * a, 109 * a, 508 * a);
                c[b[238]]();
                equal(c, cy[6], cy[4], 16 * a);
                callback(c, 204 * a, 693 * a, 36.013886210738214 * a);
                equal(c, cy[6], cy[4], 16 * a);
                callback(c, 105 * a, 518 * a, 30 * a);
                equal(c, cy[6], cy[4], 16 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](171 * a, 535 * a);
                c[b[62]](139.5 * a, 537.5 * a, 139.5 * a, 537.5 * a, 108 * a, 540 * a);
                c[b[62]](110 * a, 527.5 * a, 110 * a, 527.5 * a, 112 * a, 515 * a);
                c[b[62]](148 * a, 513 * a, 148 * a, 513 * a, 184 * a, 511 * a);
                c[b[238]]();
                equal(c, cy[6]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](244 * a, 669 * a);
                c[b[62]](248.5 * a, 680 * a, 248.5 * a, 680 * a, 253 * a, 691 * a);
                c[b[62]](239.5 * a, 697 * a, 239.5 * a, 697 * a, 226 * a, 703 * a);
                c[b[62]](223 * a, 691.5 * a, 223 * a, 691.5 * a, 220 * a, 680 * a);
                c[b[238]]();
                equal(c, cy[6]);
                callback(c, 204 * a, 693 * a, 17.029386365926403 * a);
                equal(c, cy[7]);
                callback(c, 106 * a, 518 * a, 12 * a);
                equal(c, cy[7]);
                return hash;
            }
        function call(radius, f, args)
            /*Scope Closed:false | writes:true*/
            {
                var ret = document('canvas');
                var ctx = ret[b[9]]('2d');
                ret[b[187]] = 100 * radius;
                ret[b[236]] = 250 * radius;
                ctx[b[150]](-135 * radius, -75 * radius);
                ctx[b[277]] = f ? 0.8 : 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](178.5 * radius, 238.03125 * radius);
                ctx[b[62]](177 * radius, 175.03125 * radius, 177 * radius, 175.03125 * radius, 175.5 * radius, 112.03125 * radius);
                ctx[b[62]](184.5 * radius, 100.53125 * radius, 184.5 * radius, 100.53125 * radius, 193.5 * radius, 89.03125 * radius);
                ctx[b[62]](202 * radius, 100.03125 * radius, 202 * radius, 100.03125 * radius, 210.5 * radius, 111.03125 * radius);
                ctx[b[62]](209.5 * radius, 174.03125 * radius, 209.5 * radius, 174.03125 * radius, 208.5 * radius, 237.03125 * radius);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](155.5 * radius, 239.03125 * radius);
                ctx[b[62]](194 * radius, 238.53125 * radius, 194 * radius, 238.53125 * radius, 232.5 * radius, 238.03125 * radius);
                ctx[b[62]](232.5 * radius, 243.03125 * radius, 232.5 * radius, 243.03125 * radius, 232.5 * radius, 248.03125 * radius);
                ctx[b[62]](194 * radius, 248.53125 * radius, 194 * radius, 248.53125 * radius, 155.5 * radius, 249.03125 * radius);
                ctx[b[238]]();
                equal(ctx, args[0]);
                callback(ctx, 160.5 * radius, 243.03125 * radius, 7 * radius);
                equal(ctx, args[0]);
                callback(ctx, 227.5 * radius, 242.03125 * radius, 7 * radius);
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](185.5 * radius, 253.03125 * radius);
                ctx[b[62]](193.5 * radius, 253.03125 * radius, 193.5 * radius, 253.03125 * radius, 201.5 * radius, 253.03125 * radius);
                ctx[b[62]](201.5 * radius, 276.03125 * radius, 201.5 * radius, 276.03125 * radius, 201.5 * radius, 299.03125 * radius);
                ctx[b[62]](194.5 * radius, 299.03125 * radius, 194.5 * radius, 299.03125 * radius, 187.5 * radius, 299.03125 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 5 * radius);
                callback(ctx, 194 * radius, 298 * radius, 9 * radius);
                equal(ctx, args[0], args[0], 5 * radius);
                ctx[b[277]] = 1;
                ctx[b[150]](-10 * radius, 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](178.5 * radius, 238.03125 * radius);
                ctx[b[62]](177 * radius, 175.03125 * radius, 177 * radius, 175.03125 * radius, 175.5 * radius, 112.03125 * radius);
                ctx[b[62]](184.5 * radius, 100.53125 * radius, 184.5 * radius, 100.53125 * radius, 193.5 * radius, 89.03125 * radius);
                ctx[b[62]](202 * radius, 100.03125 * radius, 202 * radius, 100.03125 * radius, 210.5 * radius, 111.03125 * radius);
                ctx[b[62]](209.5 * radius, 174.03125 * radius, 209.5 * radius, 174.03125 * radius, 208.5 * radius, 237.03125 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[4], 5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](155.5 * radius, 239.03125 * radius);
                ctx[b[62]](194 * radius, 238.53125 * radius, 194 * radius, 238.53125 * radius, 232.5 * radius, 238.03125 * radius);
                ctx[b[62]](232.5 * radius, 243.03125 * radius, 232.5 * radius, 243.03125 * radius, 232.5 * radius, 248.03125 * radius);
                ctx[b[62]](194 * radius, 248.53125 * radius, 194 * radius, 248.53125 * radius, 155.5 * radius, 249.03125 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 5 * radius);
                callback(ctx, 160.5 * radius, 243.03125 * radius, 7 * radius);
                equal(ctx, args[1], args[2], 5 * radius);
                callback(ctx, 227.5 * radius, 242.03125 * radius, 7 * radius);
                equal(ctx, args[1], args[2], 5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](185.5 * radius, 253.03125 * radius);
                ctx[b[62]](193.5 * radius, 253.03125 * radius, 193.5 * radius, 253.03125 * radius, 201.5 * radius, 253.03125 * radius);
                ctx[b[62]](201.5 * radius, 276.03125 * radius, 201.5 * radius, 276.03125 * radius, 201.5 * radius, 299.03125 * radius);
                ctx[b[62]](194.5 * radius, 299.03125 * radius, 194.5 * radius, 299.03125 * radius, 187.5 * radius, 299.03125 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 7 * radius);
                callback(ctx, 194 * radius, 298 * radius, 9 * radius);
                equal(ctx, args[1], args[2], 7 * radius);
                return ret;
            }
        function select_qsa(a, from, selector)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 290 * a;
                hash[b[236]] = 525 * a;
                c[b[277]] = from ? 0.5 : 1;
                c[b[150]](20 * a, 20 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](111 * a, 351 * a);
                c[b[62]](129 * a, 218 * a, 129 * a, 218 * a, 147 * a, 85 * a);
                c[b[62]](167 * a, 65.5 * a, 167 * a, 65.5 * a, 187 * a, 46 * a);
                c[b[62]](201.5 * a, 70.5 * a, 201.5 * a, 70.5 * a, 216 * a, 95 * a);
                c[b[62]](194.5 * a, 227.5 * a, 194.5 * a, 227.5 * a, 173 * a, 360 * a);
                c[b[238]]();
                equal(c, selector[0]);
                c[b[33]]();
                c[b[150]](131 * a, 425.5 * a);
                c[b[65]](0.16);
                chroma(c, -14 * a, -56.5 * a, 28 * a, 113 * a, 8 * a);
                c[b[210]]();
                equal(c, selector[0]);
                callback(c, 122 * a, 480 * a, 18.439088914585774 * a);
                equal(c, selector[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](79 * a, 371 * a);
                c[b[62]](131 * a, 373 * a, 145 * a, 378 * a, 197 * a, 388 * a);
                c[b[62]](205 * a, 382.5 * a, 205 * a, 382.5 * a, 213 * a, 377 * a);
                c[b[62]](167 * a, 352 * a, 117 * a, 345 * a, 69 * a, 355 * a);
                c[b[238]]();
                equal(c, selector[0]);
                c[b[277]] = 1;
                c[b[150]](-20 * a, -20 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](111 * a, 351 * a);
                c[b[62]](129 * a, 218 * a, 129 * a, 218 * a, 147 * a, 85 * a);
                c[b[62]](167 * a, 65.5 * a, 167 * a, 65.5 * a, 187 * a, 46 * a);
                c[b[62]](201.5 * a, 70.5 * a, 201.5 * a, 70.5 * a, 216 * a, 95 * a);
                c[b[62]](194.5 * a, 227.5 * a, 194.5 * a, 227.5 * a, 173 * a, 360 * a);
                c[b[238]]();
                equal(c, selector[1], selector[2], 12.5 * a);
                c[b[33]]();
                c[b[150]](131 * a, 425.5 * a);
                c[b[65]](0.16);
                chroma(c, -14 * a, -56.5 * a, 28 * a, 113 * a, 8 * a);
                c[b[210]]();
                equal(c, selector[4], selector[5], 12.5 * a);
                callback(c, 122 * a, 480 * a, 18.439088914585774 * a);
                equal(c, selector[4], selector[5], 12.5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](79 * a, 371 * a);
                c[b[62]](131 * a, 373 * a, 145 * a, 378 * a, 197 * a, 388 * a);
                c[b[62]](205 * a, 382.5 * a, 205 * a, 382.5 * a, 213 * a, 377 * a);
                c[b[62]](167 * a, 352 * a, 117 * a, 345 * a, 69 * a, 355 * a);
                c[b[238]]();
                equal(c, selector[4], selector[5], 12.5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](128 * a, 345 * a);
                c[b[62]](142 * a, 345 * a, 147 * a, 346 * a, 158 * a, 349 * a);
                c[b[62]](177.5 * a, 224.5 * a, 177.5 * a, 224.5 * a, 197 * a, 100 * a);
                c[b[62]](190.5 * a, 84.5 * a, 190.5 * a, 84.5 * a, 184 * a, 69 * a);
                c[b[62]](173.5 * a, 82 * a, 173.5 * a, 82 * a, 163 * a, 95 * a);
                c[b[238]]();
                equal(c, selector[3]);
                return hash;
            }
        function resize(ratio, data, args, cb_)
            /*Scope Closed:false | writes:true*/
            {
                data = document('canvas');
                var ctx = data[b[9]]('2d');
                data[b[187]] = 283 * ratio;
                data[b[236]] = 224 * ratio;
                ctx[b[150]](0, 15 * ratio);
                ctx[b[277]] = 0.5;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](93 * ratio, 55 * ratio);
                ctx[b[62]](127 * ratio, 27 * ratio, 195 * ratio, 42 * ratio, 213 * ratio, 78 * ratio);
                ctx[b[62]](254 * ratio, 134 * ratio, 226 * ratio, 198 * ratio, 153 * ratio, 197 * ratio);
                ctx[b[62]](59 * ratio, 204 * ratio, 56 * ratio, 158 * ratio, 51 * ratio, 115 * ratio);
                ctx[b[62]](50 * ratio, 93 * ratio, 81 * ratio, 62 * ratio, 90 * ratio, 57 * ratio);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](100 * ratio, 33 * ratio);
                ctx[b[62]](85 * ratio, 62 * ratio, 102 * ratio, 66 * ratio, 110 * ratio, 83 * ratio);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](181 * ratio, 32 * ratio);
                ctx[b[62]](196 * ratio, 62 * ratio, 181 * ratio, 68 * ratio, 178 * ratio, 69 * ratio);
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](225 * ratio, 52 * ratio);
                ctx[b[62]](228 * ratio, 78 * ratio, 207 * ratio, 77 * ratio, 192 * ratio, 88 * ratio);
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](34 * ratio, 134 * ratio);
                ctx[b[62]](46 * ratio, 111 * ratio, 57 * ratio, 111 * ratio, 79 * ratio, 109 * ratio);
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](249 * ratio, 135 * ratio);
                ctx[b[62]](233 * ratio, 107 * ratio, 212 * ratio, 112 * ratio, 202 * ratio, 115 * ratio);
                equal(ctx, args[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](56 * ratio, 50 * ratio);
                ctx[b[62]](56 * ratio, 82 * ratio, 73 * ratio, 82 * ratio, 93 * ratio, 89 * ratio);
                equal(ctx, args[0]);
                ctx[b[150]](0, -15 * ratio);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](100 * ratio, 33 * ratio);
                ctx[b[62]](85 * ratio, 62 * ratio, 102 * ratio, 66 * ratio, 110 * ratio, 83 * ratio);
                equal(ctx, void 0, args[2], 40 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](181 * ratio, 32 * ratio);
                ctx[b[62]](196 * ratio, 62 * ratio, 181 * ratio, 68 * ratio, 178 * ratio, 69 * ratio);
                equal(ctx, void 0, args[2], 40 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](225 * ratio, 52 * ratio);
                ctx[b[62]](228 * ratio, 78 * ratio, 207 * ratio, 77 * ratio, 192 * ratio, 88 * ratio);
                equal(ctx, void 0, args[2], 40 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](34 * ratio, 134 * ratio);
                ctx[b[62]](46 * ratio, 111 * ratio, 57 * ratio, 111 * ratio, 79 * ratio, 109 * ratio);
                equal(ctx, void 0, args[2], 40 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](249 * ratio, 135 * ratio);
                ctx[b[62]](233 * ratio, 107 * ratio, 212 * ratio, 112 * ratio, 202 * ratio, 115 * ratio);
                equal(ctx, void 0, args[2], 40 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](56 * ratio, 50 * ratio);
                ctx[b[62]](56 * ratio, 82 * ratio, 73 * ratio, 82 * ratio, 93 * ratio, 89 * ratio);
                equal(ctx, void 0, args[2], 40 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](93 * ratio, 55 * ratio);
                ctx[b[62]](127 * ratio, 27 * ratio, 195 * ratio, 42 * ratio, 213 * ratio, 78 * ratio);
                ctx[b[62]](254 * ratio, 134 * ratio, 226 * ratio, 198 * ratio, 153 * ratio, 197 * ratio);
                ctx[b[62]](59 * ratio, 204 * ratio, 56 * ratio, 158 * ratio, 51 * ratio, 115 * ratio);
                ctx[b[62]](50 * ratio, 93 * ratio, 81 * ratio, 62 * ratio, 90 * ratio, 57 * ratio);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 10 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](100 * ratio, 33 * ratio);
                ctx[b[62]](85 * ratio, 62 * ratio, 102 * ratio, 66 * ratio, 110 * ratio, 83 * ratio);
                equal(ctx, void 0, args[1], 20 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](181 * ratio, 32 * ratio);
                ctx[b[62]](196 * ratio, 62 * ratio, 181 * ratio, 68 * ratio, 178 * ratio, 69 * ratio);
                equal(ctx, void 0, args[1], 20 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](225 * ratio, 52 * ratio);
                ctx[b[62]](228 * ratio, 78 * ratio, 207 * ratio, 77 * ratio, 192 * ratio, 88 * ratio);
                equal(ctx, void 0, args[1], 20 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](34 * ratio, 134 * ratio);
                ctx[b[62]](46 * ratio, 111 * ratio, 57 * ratio, 111 * ratio, 79 * ratio, 109 * ratio);
                equal(ctx, void 0, args[1], 20 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](249 * ratio, 135 * ratio);
                ctx[b[62]](233 * ratio, 107 * ratio, 212 * ratio, 112 * ratio, 202 * ratio, 115 * ratio);
                equal(ctx, void 0, args[1], 20 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](56 * ratio, 50 * ratio);
                ctx[b[62]](56 * ratio, 82 * ratio, 73 * ratio, 82 * ratio, 93 * ratio, 89 * ratio);
                equal(ctx, void 0, args[1], 20 * ratio);
                callback(ctx, 101 * ratio, 155 * ratio, 20.591260281974 * ratio);
                equal(ctx, args[3]);
                callback(ctx, 180 * ratio, 155 * ratio, 20.591260281974 * ratio);
                equal(ctx, args[3]);
                callback(ctx, 95 * ratio, 148 * ratio, 7.211102550927978 * ratio);
                equal(ctx, args[4]);
                callback(ctx, 173 * ratio, 148 * ratio, 7.211102550927978 * ratio);
                equal(ctx, args[4]);
                if (1 === cb_) {
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](191 * ratio, 107 * ratio);
                    ctx[b[62]](180 * ratio, 104 * ratio, 175 * ratio, 101 * ratio, 180 * ratio, 95 * ratio);
                    ctx[b[62]](180 * ratio, 95 * ratio, 181 * ratio, 99 * ratio, 188 * ratio, 103 * ratio);
                    ctx[b[62]](191 * ratio, 101 * ratio, 191 * ratio, 95 * ratio, 190 * ratio, 91 * ratio);
                    ctx[b[62]](190 * ratio, 91 * ratio, 196 * ratio, 89 * ratio, 195 * ratio, 99 * ratio);
                    ctx[b[238]]();
                    equal(ctx, args[2]);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](206 * ratio, 98 * ratio);
                    ctx[b[62]](203 * ratio, 95 * ratio, 200 * ratio, 93 * ratio, 198 * ratio, 101 * ratio);
                    ctx[b[62]](194 * ratio, 109 * ratio, 193 * ratio, 109 * ratio, 196 * ratio, 110 * ratio);
                    ctx[b[62]](206 * ratio, 115 * ratio, 209 * ratio, 114 * ratio, 211 * ratio, 111 * ratio);
                    ctx[b[62]](211 * ratio, 106 * ratio, 208 * ratio, 108 * ratio, 203 * ratio, 108 * ratio);
                    ctx[b[62]](193 * ratio, 107 * ratio, 204 * ratio, 101 * ratio, 206 * ratio, 99 * ratio);
                    ctx[b[238]]();
                    equal(ctx, args[2]);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](172 * ratio, 111 * ratio);
                    ctx[b[62]](172 * ratio, 106 * ratio, 174 * ratio, 105 * ratio, 185 * ratio, 109 * ratio);
                    ctx[b[62]](190 * ratio, 109 * ratio, 189 * ratio, 114 * ratio, 185 * ratio, 120 * ratio);
                    ctx[b[62]](181 * ratio, 125 * ratio, 180 * ratio, 126 * ratio, 176 * ratio, 122 * ratio);
                    ctx[b[62]](182 * ratio, 119 * ratio, 187 * ratio, 110 * ratio, 182 * ratio, 112 * ratio);
                    ctx[b[238]]();
                    equal(ctx, args[2]);
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](202 * ratio, 125 * ratio);
                    ctx[b[62]](197 * ratio, 117 * ratio, 193 * ratio, 116 * ratio, 193 * ratio, 120 * ratio);
                    ctx[b[62]](192.5 * ratio, 124.5 * ratio, 192.5 * ratio, 124.5 * ratio, 192 * ratio, 129 * ratio);
                    ctx[b[62]](188 * ratio, 129 * ratio, 187 * ratio, 124 * ratio, 189 * ratio, 120 * ratio);
                    ctx[b[62]](191 * ratio, 110 * ratio, 192 * ratio, 110 * ratio, 200 * ratio, 116 * ratio);
                    ctx[b[62]](208 * ratio, 120 * ratio, 207 * ratio, 123 * ratio, 202 * ratio, 125 * ratio);
                    ctx[b[238]]();
                    equal(ctx, args[2]);
                }
                return data;
            }
        function ImpressGenerator(radius, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 283 * radius;
                hash[b[236]] = 224 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](100 * radius, 33 * radius);
                ctx[b[62]](85 * radius, 62 * radius, 102 * radius, 66 * radius, 110 * radius, 83 * radius);
                equal(ctx, void 0, args[0], 40 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](181 * radius, 32 * radius);
                ctx[b[62]](196 * radius, 62 * radius, 181 * radius, 68 * radius, 178 * radius, 69 * radius);
                equal(ctx, void 0, args[0], 40 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](225 * radius, 52 * radius);
                ctx[b[62]](228 * radius, 78 * radius, 207 * radius, 77 * radius, 192 * radius, 88 * radius);
                equal(ctx, void 0, args[0], 40 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](34 * radius, 134 * radius);
                ctx[b[62]](46 * radius, 111 * radius, 57 * radius, 111 * radius, 79 * radius, 109 * radius);
                equal(ctx, void 0, args[0], 40 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](249 * radius, 135 * radius);
                ctx[b[62]](233 * radius, 107 * radius, 212 * radius, 112 * radius, 202 * radius, 115 * radius);
                equal(ctx, void 0, args[0], 40 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](56 * radius, 50 * radius);
                ctx[b[62]](56 * radius, 82 * radius, 73 * radius, 82 * radius, 93 * radius, 89 * radius);
                equal(ctx, void 0, args[0], 40 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](93 * radius, 55 * radius);
                ctx[b[62]](124 * radius, 29 * radius, 179 * radius, 44 * radius, 188 * radius, 52 * radius);
                ctx[b[62]](207 * radius, 64 * radius, 226 * radius, 94 * radius, 231 * radius, 118 * radius);
                ctx[b[62]](236 * radius, 145 * radius, 222 * radius, 184 * radius, 193 * radius, 192 * radius);
                ctx[b[62]](147 * radius, 201 * radius, 116 * radius, 200 * radius, 93 * radius, 193 * radius);
                ctx[b[62]](61 * radius, 180 * radius, 48 * radius, 147 * radius, 50 * radius, 123 * radius);
                ctx[b[62]](50 * radius, 93 * radius, 76 * radius, 66 * radius, 92 * radius, 56 * radius);
                ctx[b[238]]();
                equal(ctx, args[0]);
                return hash;
            }
        function resolveToRelativePath(radius, source, test)
            /*Scope Closed:false | writes:true*/
            {
                source = document('canvas');
                var ctx = source[b[9]]('2d');
                source[b[187]] = 131 * radius;
                source[b[236]] = 121 * radius;
                ctx[b[150]](0, 20 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](110 * radius, 59 * radius);
                ctx[b[62]](93 * radius, 61.5 * radius, 93 * radius, 61.5 * radius, 76 * radius, 64 * radius);
                ctx[b[62]](84.5 * radius, 78.5 * radius, 84.5 * radius, 78.5 * radius, 93 * radius, 93 * radius);
                ctx[b[62]](70 * radius, 111 * radius, 43 * radius, 103 * radius, 30 * radius, 82 * radius);
                ctx[b[62]](17 * radius, 61 * radius, 25 * radius, 30 * radius, 51 * radius, 21 * radius);
                ctx[b[62]](66 * radius, 15 * radius, 83 * radius, 18 * radius, 96 * radius, 29 * radius);
                ctx[b[62]](104 * radius, 35 * radius, 109 * radius, 47 * radius, 110 * radius, 58 * radius);
                ctx[b[238]]();
                equal(ctx, test[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -20 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](110 * radius, 59 * radius);
                ctx[b[62]](93 * radius, 61.5 * radius, 93 * radius, 61.5 * radius, 76 * radius, 64 * radius);
                ctx[b[62]](84.5 * radius, 78.5 * radius, 84.5 * radius, 78.5 * radius, 93 * radius, 93 * radius);
                ctx[b[62]](70 * radius, 111 * radius, 43 * radius, 103 * radius, 30 * radius, 82 * radius);
                ctx[b[62]](17 * radius, 61 * radius, 25 * radius, 30 * radius, 51 * radius, 21 * radius);
                ctx[b[62]](66 * radius, 15 * radius, 83 * radius, 18 * radius, 96 * radius, 29 * radius);
                ctx[b[62]](104 * radius, 35 * radius, 109 * radius, 47 * radius, 110 * radius, 58 * radius);
                ctx[b[238]]();
                equal(ctx, test[1], test[2], 10 * radius);
                return source;
            }
        function loadInitSource(radius, source, test)
            /*Scope Closed:false | writes:true*/
            {
                source = document('canvas');
                var ctx = source[b[9]]('2d');
                source[b[187]] = 104 * radius;
                source[b[236]] = 112 * radius;
                ctx[b[150]](0, 15 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](16 * radius, 44 * radius);
                ctx[b[62]](30.5 * radius, 48 * radius, 30.5 * radius, 48 * radius, 45 * radius, 52 * radius);
                ctx[b[62]](36.5 * radius, 63 * radius, 36.5 * radius, 63 * radius, 28 * radius, 74 * radius);
                ctx[b[62]](32 * radius, 86 * radius, 61 * radius, 92 * radius, 78 * radius, 76 * radius);
                ctx[b[62]](93 * radius, 62 * radius, 92 * radius, 40 * radius, 80 * radius, 26 * radius);
                ctx[b[62]](65 * radius, 11 * radius, 42 * radius, 16 * radius, 34 * radius, 21 * radius);
                ctx[b[62]](22 * radius, 27 * radius, 16 * radius, 39 * radius, 16 * radius, 44 * radius);
                ctx[b[238]]();
                equal(ctx, test[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -15 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](16 * radius, 44 * radius);
                ctx[b[62]](30.5 * radius, 48 * radius, 30.5 * radius, 48 * radius, 45 * radius, 52 * radius);
                ctx[b[62]](36.5 * radius, 63 * radius, 36.5 * radius, 63 * radius, 28 * radius, 74 * radius);
                ctx[b[62]](32 * radius, 86 * radius, 61 * radius, 92 * radius, 78 * radius, 76 * radius);
                ctx[b[62]](93 * radius, 62 * radius, 92 * radius, 40 * radius, 80 * radius, 26 * radius);
                ctx[b[62]](65 * radius, 11 * radius, 42 * radius, 16 * radius, 34 * radius, 21 * radius);
                ctx[b[62]](22 * radius, 27 * radius, 16 * radius, 39 * radius, 16 * radius, 44 * radius);
                ctx[b[238]]();
                equal(ctx, test[1], test[2], 8 * radius);
                return source;
            }
        function switchCanvasContext(radius, command, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 321 * radius;
                hash[b[236]] = 284 * radius;
                ctx[b[150]](100 * radius, 30 * radius);
                ctx[b[150]](5 * radius, 10 * radius);
                ctx[b[277]] = command ? 0.5 : 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](58 * radius, 33 * radius);
                ctx[b[62]](81 * radius, 22 * radius, 93 * radius, 26 * radius, 123 * radius, 47 * radius);
                ctx[b[62]](160 * radius, 73 * radius, 169 * radius, 80 * radius, 191 * radius, 99 * radius);
                ctx[b[62]](202 * radius, 107 * radius, 211 * radius, 118 * radius, 195 * radius, 151 * radius);
                ctx[b[62]](181 * radius, 183 * radius, 157 * radius, 192 * radius, 129 * radius, 174 * radius);
                ctx[b[62]](78 * radius, 140 * radius, 68 * radius, 129 * radius, 37 * radius, 94 * radius);
                ctx[b[62]](15 * radius, 68 * radius, 25 * radius, 52 * radius, 56 * radius, 34 * radius);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](-5 * radius, -10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](58 * radius, 33 * radius);
                ctx[b[62]](81 * radius, 22 * radius, 93 * radius, 26 * radius, 123 * radius, 47 * radius);
                ctx[b[62]](160 * radius, 73 * radius, 169 * radius, 80 * radius, 191 * radius, 99 * radius);
                ctx[b[62]](202 * radius, 107 * radius, 211 * radius, 118 * radius, 195 * radius, 151 * radius);
                ctx[b[62]](181 * radius, 183 * radius, 157 * radius, 192 * radius, 129 * radius, 174 * radius);
                ctx[b[62]](78 * radius, 140 * radius, 68 * radius, 129 * radius, 37 * radius, 94 * radius);
                ctx[b[62]](15 * radius, 68 * radius, 25 * radius, 52 * radius, 56 * radius, 34 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](167 * radius, 120 * radius);
                ctx[b[62]](196 * radius, 106 * radius, 207 * radius, 111 * radius, 199 * radius, 135 * radius);
                ctx[b[62]](185 * radius, 172 * radius, 166 * radius, 187 * radius, 145 * radius, 179 * radius);
                ctx[b[62]](118 * radius, 166 * radius, 127 * radius, 139 * radius, 166 * radius, 121 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](25 * radius, 64 * radius);
                ctx[b[62]](59 * radius, 96 * radius, 97 * radius, 128 * radius, 129 * radius, 151 * radius);
                ctx[b[62]](126 * radius, 163 * radius, 134 * radius, 174 * radius, 142 * radius, 180 * radius);
                ctx[b[62]](114 * radius, 170 * radius, 68 * radius, 134 * radius, 31 * radius, 85 * radius);
                ctx[b[62]](24 * radius, 71 * radius, 24 * radius, 70 * radius, 25 * radius, 65 * radius);
                ctx[b[238]]();
                equal(ctx, args[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](161 * radius, 141 * radius);
                ctx[b[62]](181 * radius, 131 * radius, 186 * radius, 135 * radius, 173 * radius, 152 * radius);
                ctx[b[62]](163 * radius, 163 * radius, 155 * radius, 161 * radius, 151 * radius, 150 * radius);
                ctx[b[62]](147 * radius, 140 * radius, 155 * radius, 131 * radius, 175 * radius, 125 * radius);
                ctx[b[62]](190 * radius, 120 * radius, 196 * radius, 121 * radius, 189 * radius, 143 * radius);
                ctx[b[62]](182 * radius, 167 * radius, 169 * radius, 174 * radius, 157 * radius, 174 * radius);
                ctx[b[62]](138 * radius, 172 * radius, 139 * radius, 162 * radius, 140 * radius, 156 * radius);
                equal(ctx, void 0, args[4], 4 * radius);
                ctx[b[150]](-100 * radius, -30 * radius);
                ctx[b[150]](10 * radius, 70 * radius);
                ctx[b[150]](5 * radius, 10 * radius);
                ctx[b[277]] = command ? 0.5 : 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](58 * radius, 33 * radius);
                ctx[b[62]](81 * radius, 22 * radius, 93 * radius, 26 * radius, 123 * radius, 47 * radius);
                ctx[b[62]](160 * radius, 73 * radius, 169 * radius, 80 * radius, 191 * radius, 99 * radius);
                ctx[b[62]](202 * radius, 107 * radius, 211 * radius, 118 * radius, 195 * radius, 151 * radius);
                ctx[b[62]](181 * radius, 183 * radius, 157 * radius, 192 * radius, 129 * radius, 174 * radius);
                ctx[b[62]](78 * radius, 140 * radius, 68 * radius, 129 * radius, 37 * radius, 94 * radius);
                ctx[b[62]](15 * radius, 68 * radius, 25 * radius, 52 * radius, 56 * radius, 34 * radius);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](-5 * radius, -10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](58 * radius, 33 * radius);
                ctx[b[62]](81 * radius, 22 * radius, 93 * radius, 26 * radius, 123 * radius, 47 * radius);
                ctx[b[62]](160 * radius, 73 * radius, 169 * radius, 80 * radius, 191 * radius, 99 * radius);
                ctx[b[62]](202 * radius, 107 * radius, 211 * radius, 118 * radius, 195 * radius, 151 * radius);
                ctx[b[62]](181 * radius, 183 * radius, 157 * radius, 192 * radius, 129 * radius, 174 * radius);
                ctx[b[62]](78 * radius, 140 * radius, 68 * radius, 129 * radius, 37 * radius, 94 * radius);
                ctx[b[62]](15 * radius, 68 * radius, 25 * radius, 52 * radius, 56 * radius, 34 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](167 * radius, 120 * radius);
                ctx[b[62]](196 * radius, 106 * radius, 207 * radius, 111 * radius, 199 * radius, 135 * radius);
                ctx[b[62]](185 * radius, 172 * radius, 166 * radius, 187 * radius, 145 * radius, 179 * radius);
                ctx[b[62]](118 * radius, 166 * radius, 127 * radius, 139 * radius, 166 * radius, 121 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](25 * radius, 64 * radius);
                ctx[b[62]](59 * radius, 96 * radius, 97 * radius, 128 * radius, 129 * radius, 151 * radius);
                ctx[b[62]](126 * radius, 163 * radius, 134 * radius, 174 * radius, 142 * radius, 180 * radius);
                ctx[b[62]](114 * radius, 170 * radius, 68 * radius, 134 * radius, 31 * radius, 85 * radius);
                ctx[b[62]](24 * radius, 71 * radius, 24 * radius, 70 * radius, 25 * radius, 65 * radius);
                ctx[b[238]]();
                equal(ctx, args[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](161 * radius, 141 * radius);
                ctx[b[62]](181 * radius, 131 * radius, 186 * radius, 135 * radius, 173 * radius, 152 * radius);
                ctx[b[62]](163 * radius, 163 * radius, 155 * radius, 161 * radius, 151 * radius, 150 * radius);
                ctx[b[62]](147 * radius, 140 * radius, 155 * radius, 131 * radius, 175 * radius, 125 * radius);
                ctx[b[62]](190 * radius, 120 * radius, 196 * radius, 121 * radius, 189 * radius, 143 * radius);
                ctx[b[62]](182 * radius, 167 * radius, 169 * radius, 174 * radius, 157 * radius, 174 * radius);
                ctx[b[62]](138 * radius, 172 * radius, 139 * radius, 162 * radius, 140 * radius, 156 * radius);
                equal(ctx, void 0, args[4], 4 * radius);
                ctx[b[150]](20 * radius, -80 * radius);
                ctx[b[150]](5 * radius, 10 * radius);
                ctx[b[277]] = command ? 0.5 : 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](58 * radius, 33 * radius);
                ctx[b[62]](81 * radius, 22 * radius, 93 * radius, 26 * radius, 123 * radius, 47 * radius);
                ctx[b[62]](160 * radius, 73 * radius, 169 * radius, 80 * radius, 191 * radius, 99 * radius);
                ctx[b[62]](202 * radius, 107 * radius, 211 * radius, 118 * radius, 195 * radius, 151 * radius);
                ctx[b[62]](181 * radius, 183 * radius, 157 * radius, 192 * radius, 129 * radius, 174 * radius);
                ctx[b[62]](78 * radius, 140 * radius, 68 * radius, 129 * radius, 37 * radius, 94 * radius);
                ctx[b[62]](15 * radius, 68 * radius, 25 * radius, 52 * radius, 56 * radius, 34 * radius);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](-5 * radius, -10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](58 * radius, 33 * radius);
                ctx[b[62]](81 * radius, 22 * radius, 93 * radius, 26 * radius, 123 * radius, 47 * radius);
                ctx[b[62]](160 * radius, 73 * radius, 169 * radius, 80 * radius, 191 * radius, 99 * radius);
                ctx[b[62]](202 * radius, 107 * radius, 211 * radius, 118 * radius, 195 * radius, 151 * radius);
                ctx[b[62]](181 * radius, 183 * radius, 157 * radius, 192 * radius, 129 * radius, 174 * radius);
                ctx[b[62]](78 * radius, 140 * radius, 68 * radius, 129 * radius, 37 * radius, 94 * radius);
                ctx[b[62]](15 * radius, 68 * radius, 25 * radius, 52 * radius, 56 * radius, 34 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](167 * radius, 120 * radius);
                ctx[b[62]](196 * radius, 106 * radius, 207 * radius, 111 * radius, 199 * radius, 135 * radius);
                ctx[b[62]](185 * radius, 172 * radius, 166 * radius, 187 * radius, 145 * radius, 179 * radius);
                ctx[b[62]](118 * radius, 166 * radius, 127 * radius, 139 * radius, 166 * radius, 121 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](25 * radius, 64 * radius);
                ctx[b[62]](59 * radius, 96 * radius, 97 * radius, 128 * radius, 129 * radius, 151 * radius);
                ctx[b[62]](126 * radius, 163 * radius, 134 * radius, 174 * radius, 142 * radius, 180 * radius);
                ctx[b[62]](114 * radius, 170 * radius, 68 * radius, 134 * radius, 31 * radius, 85 * radius);
                ctx[b[62]](24 * radius, 71 * radius, 24 * radius, 70 * radius, 25 * radius, 65 * radius);
                ctx[b[238]]();
                equal(ctx, args[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](161 * radius, 141 * radius);
                ctx[b[62]](181 * radius, 131 * radius, 186 * radius, 135 * radius, 173 * radius, 152 * radius);
                ctx[b[62]](163 * radius, 163 * radius, 155 * radius, 161 * radius, 151 * radius, 150 * radius);
                ctx[b[62]](147 * radius, 140 * radius, 155 * radius, 131 * radius, 175 * radius, 125 * radius);
                ctx[b[62]](190 * radius, 120 * radius, 196 * radius, 121 * radius, 189 * radius, 143 * radius);
                ctx[b[62]](182 * radius, 167 * radius, 169 * radius, 174 * radius, 157 * radius, 174 * radius);
                ctx[b[62]](138 * radius, 172 * radius, 139 * radius, 162 * radius, 140 * radius, 156 * radius);
                equal(ctx, void 0, args[4], 4 * radius);
                return hash;
            }
        function processXYFeatures(a, renderFrequency, cartoLayer)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 290 * a;
                hash[b[236]] = 525 * a;
                c[b[277]] = renderFrequency ? 0.5 : 1;
                c[b[150]](20 * a, 20 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](111 * a, 351 * a);
                c[b[62]](128.5 * a, 218.5 * a, 128.5 * a, 218.5 * a, 146 * a, 86 * a);
                c[b[62]](166.5 * a, 66.5 * a, 166.5 * a, 66.5 * a, 187 * a, 47 * a);
                c[b[62]](201 * a, 71.5 * a, 201 * a, 71.5 * a, 215 * a, 96 * a);
                c[b[62]](193 * a, 228.5 * a, 193 * a, 228.5 * a, 171 * a, 361 * a);
                c[b[238]]();
                equal(c, cartoLayer[0]);
                c[b[33]]();
                c[b[150]](129.5 * a, 424 * a);
                c[b[65]](0.16);
                chroma(c, -15.5 * a, -63 * a, 31 * a, 126 * a, 10 * a);
                c[b[210]]();
                equal(c, cartoLayer[0]);
                callback(c, 121 * a, 480 * a, 20.396078054371138 * a);
                equal(c, cartoLayer[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](90 * a, 311 * a);
                c[b[62]](95 * a, 324 * a, 95 * a, 324 * a, 100 * a, 337 * a);
                c[b[62]](141.5 * a, 345.5 * a, 141.5 * a, 345.5 * a, 183 * a, 354 * a);
                c[b[62]](193.5 * a, 342.5 * a, 193.5 * a, 342.5 * a, 204 * a, 331 * a);
                c[b[62]](202 * a, 354 * a, 202 * a, 354 * a, 200 * a, 377 * a);
                c[b[62]](147 * a, 388 * a, 106 * a, 371 * a, 79 * a, 356 * a);
                c[b[238]]();
                equal(c, cartoLayer[0]);
                c[b[277]] = 1;
                c[b[150]](-20 * a, -20 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](111 * a, 351 * a);
                c[b[62]](128.5 * a, 218.5 * a, 128.5 * a, 218.5 * a, 146 * a, 86 * a);
                c[b[62]](166.5 * a, 66.5 * a, 166.5 * a, 66.5 * a, 187 * a, 47 * a);
                c[b[62]](201 * a, 71.5 * a, 201 * a, 71.5 * a, 215 * a, 96 * a);
                c[b[62]](193 * a, 228.5 * a, 193 * a, 228.5 * a, 171 * a, 361 * a);
                c[b[238]]();
                equal(c, cartoLayer[1], cartoLayer[2], 12.5 * a);
                c[b[33]]();
                c[b[150]](129.5 * a, 424 * a);
                c[b[65]](0.16);
                chroma(c, -15.5 * a, -63 * a, 31 * a, 126 * a, 10 * a);
                c[b[210]]();
                equal(c, cartoLayer[4], cartoLayer[5], 12.5 * a);
                callback(c, 121 * a, 480 * a, 20.396078054371138 * a);
                equal(c, cartoLayer[4], cartoLayer[5], 12.5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](90 * a, 311 * a);
                c[b[62]](95 * a, 324 * a, 95 * a, 324 * a, 100 * a, 337 * a);
                c[b[62]](141.5 * a, 345.5 * a, 141.5 * a, 345.5 * a, 183 * a, 354 * a);
                c[b[62]](193.5 * a, 342.5 * a, 193.5 * a, 342.5 * a, 204 * a, 331 * a);
                c[b[62]](202 * a, 354 * a, 202 * a, 354 * a, 200 * a, 377 * a);
                c[b[62]](147 * a, 388 * a, 106 * a, 371 * a, 79 * a, 356 * a);
                c[b[238]]();
                equal(c, cartoLayer[1], cartoLayer[2], 12.5 * a);
                return hash;
            }
        function set(a, score, item)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 290 * a;
                hash[b[236]] = 525 * a;
                c[b[277]] = score ? 0.5 : 1;
                c[b[150]](20 * a, 20 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](112 * a, 356 * a);
                c[b[62]](124 * a, 220.5 * a, 124 * a, 220.5 * a, 136 * a, 85 * a);
                c[b[62]](162.5 * a, 65.5 * a, 162.5 * a, 65.5 * a, 189 * a, 46 * a);
                c[b[62]](208.5 * a, 72.5 * a, 208.5 * a, 72.5 * a, 228 * a, 99 * a);
                c[b[62]](200 * a, 232 * a, 200 * a, 232 * a, 172 * a, 365 * a);
                c[b[238]]();
                equal(c, item[0]);
                c[b[33]]();
                c[b[150]](131 * a, 423 * a);
                c[b[65]](0.16);
                chroma(c, -14 * a, -53 * a, 28 * a, 106 * a, 10 * a);
                c[b[210]]();
                equal(c, item[0]);
                c[b[33]]();
                c[b[150]](122 * a, 480 * a);
                c[b[65]](1.72);
                get(c, 4, 26.476404589747453 * a, 10 * a);
                c[b[210]]();
                equal(c, item[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](210 * a, 387 * a);
                c[b[62]](138 * a, 376 * a, 138 * a, 376 * a, 66 * a, 365 * a);
                c[b[62]](76 * a, 355 * a, 76 * a, 355 * a, 86 * a, 345 * a);
                c[b[62]](99 * a, 346.5 * a, 99 * a, 346.5 * a, 112 * a, 348 * a);
                c[b[62]](128.5 * a, 344 * a, 128.5 * a, 344 * a, 145 * a, 340 * a);
                c[b[62]](158 * a, 348 * a, 158 * a, 348 * a, 171 * a, 356 * a);
                c[b[62]](184 * a, 358 * a, 184 * a, 358 * a, 197 * a, 360 * a);
                c[b[238]]();
                equal(c, item[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](129 * a, 338 * a);
                c[b[62]](137 * a, 336 * a, 137 * a, 336 * a, 145 * a, 334 * a);
                c[b[62]](152.5 * a, 338 * a, 152.5 * a, 338 * a, 160 * a, 342 * a);
                c[b[62]](184 * a, 224 * a, 184 * a, 224 * a, 208 * a, 106 * a);
                c[b[62]](197 * a, 88 * a, 187 * a, 70 * a, 186 * a, 70 * a);
                c[b[62]](169.5 * a, 83 * a, 169.5 * a, 83 * a, 153 * a, 96 * a);
                c[b[238]]();
                equal(c, item[0]);
                c[b[277]] = 1;
                c[b[150]](-20 * a, -20 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](112 * a, 356 * a);
                c[b[62]](124 * a, 220.5 * a, 124 * a, 220.5 * a, 136 * a, 85 * a);
                c[b[62]](162.5 * a, 65.5 * a, 162.5 * a, 65.5 * a, 189 * a, 46 * a);
                c[b[62]](208.5 * a, 72.5 * a, 208.5 * a, 72.5 * a, 228 * a, 99 * a);
                c[b[62]](200 * a, 232 * a, 200 * a, 232 * a, 172 * a, 365 * a);
                c[b[238]]();
                equal(c, item[1], item[2], 12.5 * a);
                c[b[33]]();
                c[b[150]](131 * a, 423 * a);
                c[b[65]](0.16);
                chroma(c, -14 * a, -53 * a, 28 * a, 106 * a, 10 * a);
                c[b[210]]();
                equal(c, item[4], item[5], 12.5 * a);
                c[b[33]]();
                c[b[150]](122 * a, 480 * a);
                c[b[65]](1.72);
                get(c, 4, 26.476404589747453 * a, 10 * a);
                c[b[210]]();
                equal(c, item[1], item[2], 12.5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](210 * a, 387 * a);
                c[b[62]](138 * a, 376 * a, 138 * a, 376 * a, 66 * a, 365 * a);
                c[b[62]](76 * a, 355 * a, 76 * a, 355 * a, 86 * a, 345 * a);
                c[b[62]](99 * a, 346.5 * a, 99 * a, 346.5 * a, 112 * a, 348 * a);
                c[b[62]](128.5 * a, 344 * a, 128.5 * a, 344 * a, 145 * a, 340 * a);
                c[b[62]](158 * a, 348 * a, 158 * a, 348 * a, 171 * a, 356 * a);
                c[b[62]](184 * a, 358 * a, 184 * a, 358 * a, 197 * a, 360 * a);
                c[b[238]]();
                equal(c, item[1], item[2], 12.5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](129 * a, 338 * a);
                c[b[62]](137 * a, 336 * a, 137 * a, 336 * a, 145 * a, 334 * a);
                c[b[62]](152.5 * a, 338 * a, 152.5 * a, 338 * a, 160 * a, 342 * a);
                c[b[62]](184 * a, 224 * a, 184 * a, 224 * a, 208 * a, 106 * a);
                c[b[62]](197 * a, 88 * a, 187 * a, 70 * a, 186 * a, 70 * a);
                c[b[62]](169.5 * a, 83 * a, 169.5 * a, 83 * a, 153 * a, 96 * a);
                c[b[238]]();
                equal(c, item[3]);
                return hash;
            }
        function isHex(a, val, color)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 290 * a;
                hash[b[236]] = 525 * a;
                c[b[277]] = val ? 0.5 : 1;
                c[b[150]](20 * a, 20 * a);
                c[b[150]](-20 * a, -20 * a);
                c[b[33]]();
                c[b[150]](132 * a, 423 * a);
                c[b[65]](0.16);
                chroma(c, -14 * a, -61 * a, 28 * a, 122 * a, 10 * a);
                c[b[210]]();
                equal(c, color[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](100 * a, 344 * a);
                c[b[62]](123 * a, 214 * a, 123 * a, 214 * a, 146 * a, 84 * a);
                c[b[62]](166.5 * a, 65 * a, 166.5 * a, 65 * a, 187 * a, 46 * a);
                c[b[62]](201 * a, 71 * a, 201 * a, 71 * a, 215 * a, 96 * a);
                c[b[62]](199.5 * a, 226.5 * a, 199.5 * a, 226.5 * a, 184 * a, 357 * a);
                c[b[62]](162.5 * a, 362.5 * a, 162.5 * a, 362.5 * a, 141 * a, 368 * a);
                c[b[238]]();
                equal(c, color[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](75 * a, 328 * a);
                c[b[62]](88 * a, 336.5 * a, 88 * a, 336.5 * a, 101 * a, 345 * a);
                c[b[62]](123.5 * a, 337.5 * a, 123.5 * a, 337.5 * a, 146 * a, 330 * a);
                c[b[62]](165 * a, 343.5 * a, 165 * a, 343.5 * a, 184 * a, 357 * a);
                c[b[62]](198.5 * a, 353 * a, 198.5 * a, 353 * a, 213 * a, 349 * a);
                c[b[62]](200.5 * a, 364.5 * a, 200.5 * a, 364.5 * a, 188 * a, 380 * a);
                c[b[62]](163 * a, 380.5 * a, 163 * a, 380.5 * a, 138 * a, 381 * a);
                c[b[62]](112 * a, 373.5 * a, 112 * a, 373.5 * a, 86 * a, 366 * a);
                c[b[238]]();
                equal(c, color[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](121 * a, 332 * a);
                c[b[62]](133.5 * a, 327.5 * a, 133.5 * a, 327.5 * a, 146 * a, 323 * a);
                c[b[62]](157 * a, 330.5 * a, 157 * a, 330.5 * a, 168 * a, 338 * a);
                c[b[62]](182.5 * a, 219.5 * a, 182.5 * a, 219.5 * a, 197 * a, 101 * a);
                c[b[62]](190 * a, 84.5 * a, 190 * a, 84.5 * a, 183 * a, 68 * a);
                c[b[62]](172.5 * a, 81 * a, 172.5 * a, 81 * a, 162 * a, 94 * a);
                c[b[238]]();
                equal(c, color[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](105 * a, 463 * a);
                c[b[62]](124.5 * a, 466 * a, 124.5 * a, 466 * a, 144 * a, 469 * a);
                c[b[62]](145.5 * a, 478.5 * a, 145.5 * a, 478.5 * a, 147 * a, 488 * a);
                c[b[62]](133.5 * a, 495.5 * a, 133.5 * a, 495.5 * a, 120 * a, 503 * a);
                c[b[62]](108.5 * a, 492 * a, 108.5 * a, 492 * a, 97 * a, 481 * a);
                c[b[238]]();
                equal(c, color[0]);
                c[b[277]] = 1;
                c[b[150]](-20 * a, -20 * a);
                c[b[33]]();
                c[b[150]](132 * a, 423 * a);
                c[b[65]](0.16);
                chroma(c, -14 * a, -61 * a, 28 * a, 122 * a, 10 * a);
                c[b[210]]();
                equal(c, color[4], color[5], 12.5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](100 * a, 344 * a);
                c[b[62]](123 * a, 214 * a, 123 * a, 214 * a, 146 * a, 84 * a);
                c[b[62]](166.5 * a, 65 * a, 166.5 * a, 65 * a, 187 * a, 46 * a);
                c[b[62]](201 * a, 71 * a, 201 * a, 71 * a, 215 * a, 96 * a);
                c[b[62]](199.5 * a, 226.5 * a, 199.5 * a, 226.5 * a, 184 * a, 357 * a);
                c[b[62]](162.5 * a, 362.5 * a, 162.5 * a, 362.5 * a, 141 * a, 368 * a);
                c[b[238]]();
                equal(c, color[1], color[2], 12.5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](75 * a, 328 * a);
                c[b[62]](88 * a, 336.5 * a, 88 * a, 336.5 * a, 101 * a, 345 * a);
                c[b[62]](123.5 * a, 337.5 * a, 123.5 * a, 337.5 * a, 146 * a, 330 * a);
                c[b[62]](165 * a, 343.5 * a, 165 * a, 343.5 * a, 184 * a, 357 * a);
                c[b[62]](198.5 * a, 353 * a, 198.5 * a, 353 * a, 213 * a, 349 * a);
                c[b[62]](200.5 * a, 364.5 * a, 200.5 * a, 364.5 * a, 188 * a, 380 * a);
                c[b[62]](163 * a, 380.5 * a, 163 * a, 380.5 * a, 138 * a, 381 * a);
                c[b[62]](112 * a, 373.5 * a, 112 * a, 373.5 * a, 86 * a, 366 * a);
                c[b[238]]();
                equal(c, color[1], color[2], 12.5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](121 * a, 332 * a);
                c[b[62]](133.5 * a, 327.5 * a, 133.5 * a, 327.5 * a, 146 * a, 323 * a);
                c[b[62]](157 * a, 330.5 * a, 157 * a, 330.5 * a, 168 * a, 338 * a);
                c[b[62]](182.5 * a, 219.5 * a, 182.5 * a, 219.5 * a, 197 * a, 101 * a);
                c[b[62]](190 * a, 84.5 * a, 190 * a, 84.5 * a, 183 * a, 68 * a);
                c[b[62]](172.5 * a, 81 * a, 172.5 * a, 81 * a, 162 * a, 94 * a);
                c[b[238]]();
                equal(c, color[3]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](105 * a, 463 * a);
                c[b[62]](124.5 * a, 466 * a, 124.5 * a, 466 * a, 144 * a, 469 * a);
                c[b[62]](145.5 * a, 478.5 * a, 145.5 * a, 478.5 * a, 147 * a, 488 * a);
                c[b[62]](133.5 * a, 495.5 * a, 133.5 * a, 495.5 * a, 120 * a, 503 * a);
                c[b[62]](108.5 * a, 492 * a, 108.5 * a, 492 * a, 97 * a, 481 * a);
                c[b[238]]();
                equal(c, color[1], color[2], 12.5 * a);
                c[b[277]] = 1;
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](143 * a, 346 * a);
                c[b[62]](125 * a, 352 * a, 125 * a, 352 * a, 107 * a, 358 * a);
                c[b[62]](124 * a, 363 * a, 140 * a, 368 * a, 141 * a, 368 * a);
                c[b[62]](156.5 * a, 367 * a, 156.5 * a, 367 * a, 172 * a, 366 * a);
                c[b[238]]();
                equal(c, color[3]);
                return hash;
            }
        function promiseFunctionToExplicitDeferred(radius, f, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 154 * radius;
                hash[b[236]] = 261 * radius;
                ctx[b[277]] = f ? 0.5 : 1;
                ctx[b[150]](0, 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](125 * radius, 69 * radius);
                ctx[b[62]](123.5 * radius, 141.5 * radius, 123.5 * radius, 141.5 * radius, 122 * radius, 214 * radius);
                ctx[b[62]](123 * radius, 228 * radius, 119 * radius, 239 * radius, 102 * radius, 239 * radius);
                ctx[b[62]](90 * radius, 238 * radius, 86 * radius, 225 * radius, 89 * radius, 197 * radius);
                ctx[b[62]](92 * radius, 159 * radius, 92 * radius, 141 * radius, 94 * radius, 84 * radius);
                ctx[b[62]](94 * radius, 58 * radius, 87 * radius, 50 * radius, 73 * radius, 52 * radius);
                ctx[b[62]](53 * radius, 54 * radius, 54 * radius, 92 * radius, 34 * radius, 87 * radius);
                ctx[b[62]](13 * radius, 85 * radius, 22 * radius, 58 * radius, 34 * radius, 40 * radius);
                ctx[b[62]](44 * radius, 24 * radius, 68 * radius, 17 * radius, 86 * radius, 21 * radius);
                ctx[b[62]](111 * radius, 23 * radius, 123 * radius, 39 * radius, 125 * radius, 67 * radius);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](125 * radius, 69 * radius);
                ctx[b[62]](123.5 * radius, 141.5 * radius, 123.5 * radius, 141.5 * radius, 122 * radius, 214 * radius);
                ctx[b[62]](123 * radius, 228 * radius, 119 * radius, 239 * radius, 102 * radius, 239 * radius);
                ctx[b[62]](90 * radius, 238 * radius, 86 * radius, 225 * radius, 89 * radius, 197 * radius);
                ctx[b[62]](92 * radius, 159 * radius, 92 * radius, 141 * radius, 94 * radius, 84 * radius);
                ctx[b[62]](94 * radius, 58 * radius, 87 * radius, 50 * radius, 73 * radius, 52 * radius);
                ctx[b[62]](53 * radius, 54 * radius, 54 * radius, 92 * radius, 34 * radius, 87 * radius);
                ctx[b[62]](13 * radius, 85 * radius, 22 * radius, 58 * radius, 34 * radius, 40 * radius);
                ctx[b[62]](44 * radius, 24 * radius, 68 * radius, 17 * radius, 86 * radius, 21 * radius);
                ctx[b[62]](111 * radius, 23 * radius, 123 * radius, 39 * radius, 125 * radius, 67 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](31 * radius, 43 * radius);
                ctx[b[62]](31 * radius, 61 * radius, 43 * radius, 70 * radius, 51 * radius, 75 * radius);
                ctx[b[62]](48 * radius, 84 * radius, 41 * radius, 89 * radius, 33 * radius, 86 * radius);
                ctx[b[62]](23 * radius, 88 * radius, 20 * radius, 76 * radius, 23 * radius, 62 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](45 * radius, 29 * radius);
                ctx[b[62]](49 * radius, 45 * radius, 61 * radius, 54 * radius, 64 * radius, 55 * radius);
                ctx[b[62]](67.5 * radius, 53 * radius, 67.5 * radius, 53 * radius, 71 * radius, 51 * radius);
                ctx[b[62]](80 * radius, 44 * radius, 83 * radius, 33 * radius, 82 * radius, 20 * radius);
                ctx[b[62]](59 * radius, 17 * radius, 51 * radius, 23 * radius, 45 * radius, 30 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](86 * radius, 56 * radius);
                ctx[b[62]](90 * radius, 33 * radius, 103 * radius, 25 * radius, 105 * radius, 27 * radius);
                ctx[b[62]](116 * radius, 31 * radius, 121 * radius, 45 * radius, 122 * radius, 50 * radius);
                ctx[b[62]](112 * radius, 62 * radius, 103 * radius, 63 * radius, 91 * radius, 62 * radius);
                ctx[b[62]](89 * radius, 59.5 * radius, 89 * radius, 59.5 * radius, 87 * radius, 57 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](93 * radius, 81 * radius);
                ctx[b[62]](109 * radius, 82 * radius, 123 * radius, 70 * radius, 124 * radius, 63 * radius);
                ctx[b[62]](124 * radius, 75.5 * radius, 124 * radius, 75.5 * radius, 124 * radius, 88 * radius);
                ctx[b[62]](119 * radius, 99 * radius, 103 * radius, 103 * radius, 94 * radius, 103 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](93 * radius, 124 * radius);
                ctx[b[62]](108 * radius, 125 * radius, 122 * radius, 113 * radius, 124 * radius, 106 * radius);
                ctx[b[62]](124 * radius, 119 * radius, 124 * radius, 129 * radius, 124 * radius, 132 * radius);
                ctx[b[62]](110 * radius, 147 * radius, 94 * radius, 148 * radius, 90 * radius, 147 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](90 * radius, 170 * radius);
                ctx[b[62]](104 * radius, 166 * radius, 122 * radius, 158 * radius, 122 * radius, 151 * radius);
                ctx[b[62]](122 * radius, 162.5 * radius, 122 * radius, 162.5 * radius, 122 * radius, 174 * radius);
                ctx[b[62]](111 * radius, 191 * radius, 97 * radius, 191 * radius, 89 * radius, 191 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](88 * radius, 208 * radius);
                ctx[b[62]](100 * radius, 209 * radius, 115 * radius, 205 * radius, 122 * radius, 193 * radius);
                ctx[b[62]](122 * radius, 205.5 * radius, 122 * radius, 205.5 * radius, 122 * radius, 218 * radius);
                ctx[b[62]](115 * radius, 229 * radius, 103 * radius, 235 * radius, 90 * radius, 228 * radius);
                ctx[b[62]](88 * radius, 224 * radius, 88 * radius, 217 * radius, 88 * radius, 211 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[277]] = 0.4;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](22 * radius, 81 * radius);
                ctx[b[62]](32 * radius, 84 * radius, 41 * radius, 81 * radius, 45 * radius, 68 * radius);
                ctx[b[62]](50 * radius, 50 * radius, 62 * radius, 40 * radius, 79 * radius, 43 * radius);
                ctx[b[62]](95 * radius, 45 * radius, 102 * radius, 58 * radius, 101 * radius, 81 * radius);
                ctx[b[62]](99.5 * radius, 120.5 * radius, 99.5 * radius, 120.5 * radius, 98 * radius, 160 * radius);
                ctx[b[62]](96.5 * radius, 191.5 * radius, 96.5 * radius, 191.5 * radius, 95 * radius, 223 * radius);
                ctx[b[62]](93 * radius, 232 * radius, 101 * radius, 235 * radius, 108 * radius, 238 * radius);
                ctx[b[62]](100 * radius, 240 * radius, 90 * radius, 233 * radius, 90 * radius, 224 * radius);
                ctx[b[62]](92 * radius, 157 * radius, 92 * radius, 157 * radius, 94 * radius, 90 * radius);
                ctx[b[62]](94 * radius, 56 * radius, 89 * radius, 53 * radius, 77 * radius, 51 * radius);
                ctx[b[62]](58 * radius, 50 * radius, 54 * radius, 59 * radius, 49 * radius, 75 * radius);
                ctx[b[62]](44 * radius, 91 * radius, 28 * radius, 90 * radius, 23 * radius, 81 * radius);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](82 * radius, 123 * radius);
                ctx[b[62]](88 * radius, 130 * radius, 88 * radius, 127 * radius, 94 * radius, 128 * radius);
                ctx[b[62]](91 * radius, 136 * radius, 94 * radius, 137 * radius, 99 * radius, 142 * radius);
                ctx[b[62]](97 * radius, 149 * radius, 99 * radius, 152 * radius, 105 * radius, 155 * radius);
                ctx[b[62]](107 * radius, 159 * radius, 113 * radius, 159 * radius, 120 * radius, 158 * radius);
                ctx[b[62]](121 * radius, 160 * radius, 125 * radius, 163 * radius, 132 * radius, 163 * radius);
                ctx[b[62]](133 * radius, 166 * radius, 136 * radius, 169 * radius, 138 * radius, 170 * radius);
                ctx[b[62]](133 * radius, 171 * radius, 132 * radius, 172 * radius, 129 * radius, 174 * radius);
                ctx[b[62]](122 * radius, 170 * radius, 120 * radius, 170 * radius, 116 * radius, 174 * radius);
                ctx[b[62]](108 * radius, 170.5 * radius, 108 * radius, 170.5 * radius, 100 * radius, 167 * radius);
                ctx[b[62]](95 * radius, 172 * radius, 94 * radius, 179 * radius, 95 * radius, 184 * radius);
                ctx[b[62]](87 * radius, 185 * radius, 87 * radius, 189 * radius, 88 * radius, 194 * radius);
                ctx[b[62]](82 * radius, 194 * radius, 81 * radius, 195 * radius, 79 * radius, 197 * radius);
                ctx[b[62]](78 * radius, 192 * radius, 78 * radius, 191 * radius, 77 * radius, 189 * radius);
                ctx[b[62]](81 * radius, 185 * radius, 82 * radius, 183 * radius, 80 * radius, 176 * radius);
                ctx[b[62]](89 * radius, 170 * radius, 92 * radius, 168 * radius, 95 * radius, 163 * radius);
                ctx[b[62]](91 * radius, 151 * radius, 88 * radius, 151 * radius, 82 * radius, 147 * radius);
                ctx[b[62]](85 * radius, 142 * radius, 85 * radius, 137 * radius, 81 * radius, 133 * radius);
                ctx[b[62]](84 * radius, 127 * radius, 84 * radius, 125 * radius, 82 * radius, 124 * radius);
                ctx[b[238]]();
                equal(ctx, args[4], args[5], 4 * radius);
                callback(ctx, 107 * radius, 152 * radius, 9 * radius);
                equal(ctx, args[6]);
                callback(ctx, 105 * radius, 173 * radius, 9 * radius);
                equal(ctx, args[6]);
                callback(ctx, 87 * radius, 161 * radius, 9 * radius);
                equal(ctx, args[6]);
                callback(ctx, 106 * radius, 147 * radius, 4 * radius);
                equal(ctx, args[7]);
                callback(ctx, 104 * radius, 167 * radius, 4 * radius);
                equal(ctx, args[7]);
                callback(ctx, 86 * radius, 154 * radius, 4 * radius);
                equal(ctx, args[7]);
                return hash;
            }
        function attachColors(ratio, data, test)
            /*Scope Closed:false | writes:true*/
            {
                data = document('canvas');
                var ctx = data[b[9]]('2d');
                data[b[187]] = 350 * ratio;
                data[b[236]] = 140 * ratio;
                ctx[b[150]](-50 * ratio, -150 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](184.5 * ratio, 222.0625 * ratio);
                ctx[b[62]](185.5 * ratio, 184.0625 * ratio, 302.5 * ratio, 171.0625 * ratio, 313.5 * ratio, 222.0625 * ratio);
                ctx[b[62]](330.5 * ratio, 263.0625 * ratio, 181.5 * ratio, 274.0625 * ratio, 184.5 * ratio, 223.0625 * ratio);
                ctx[b[238]]();
                equal(ctx, test[0], test[1], 8 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](131.5 * ratio, 241.0625 * ratio);
                ctx[b[62]](144.5 * ratio, 278.0625 * ratio, 270.5 * ratio, 209.0625 * ratio, 228.5 * ratio, 174.0625 * ratio);
                ctx[b[62]](196.5 * ratio, 147.0625 * ratio, 117.5 * ratio, 196.0625 * ratio, 131.5 * ratio, 240.0625 * ratio);
                ctx[b[238]]();
                equal(ctx, test[0], test[1], 8 * ratio);
                callback(ctx, 270.5 * ratio, 225.0625 * ratio, 15.811388300841896 * ratio);
                equal(ctx, test[2]);
                callback(ctx, 243.5 * ratio, 225.0625 * ratio, 6.082762530298219 * ratio);
                equal(ctx, test[2]);
                callback(ctx, 255.5 * ratio, 210.0625 * ratio, 10.816653826391969 * ratio);
                equal(ctx, test[2]);
                callback(ctx, 167.5 * ratio, 215.0625 * ratio, 15.297058540778355 * ratio);
                equal(ctx, test[2]);
                callback(ctx, 176.5 * ratio, 204.0625 * ratio, 7.280109889280518 * ratio);
                equal(ctx, test[2]);
                callback(ctx, 206.5 * ratio, 189.0625 * ratio, 7.280109889280518 * ratio);
                equal(ctx, test[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](151.5 * ratio, 212.0625 * ratio);
                ctx[b[62]](161.5 * ratio, 204.0625 * ratio, 173.5 * ratio, 214.0625 * ratio, 158.5 * ratio, 221.0625 * ratio);
                ctx[b[62]](145.5 * ratio, 228.0625 * ratio, 144.5 * ratio, 216.0625 * ratio, 151.5 * ratio, 212.0625 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 4 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](194.5 * ratio, 209.0625 * ratio);
                ctx[b[62]](205.5 * ratio, 202.0625 * ratio, 215.5 * ratio, 207.0625 * ratio, 199.5 * ratio, 217.0625 * ratio);
                ctx[b[62]](187.5 * ratio, 224.0625 * ratio, 182.5 * ratio, 217.0625 * ratio, 194.5 * ratio, 209.0625 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 4 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](188.5 * ratio, 183.0625 * ratio);
                ctx[b[62]](201.5 * ratio, 176.0625 * ratio, 213.5 * ratio, 187.0625 * ratio, 193.5 * ratio, 193.0625 * ratio);
                ctx[b[62]](185.5 * ratio, 194.0625 * ratio, 175.5 * ratio, 189.0625 * ratio, 188.5 * ratio, 183.0625 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 4 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](261.5 * ratio, 202.0625 * ratio);
                ctx[b[62]](274.5 * ratio, 201.0625 * ratio, 282.5 * ratio, 214.0625 * ratio, 261.5 * ratio, 215.0625 * ratio);
                ctx[b[62]](246.5 * ratio, 214.0625 * ratio, 248.5 * ratio, 203.0625 * ratio, 261.5 * ratio, 202.0625 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 4 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](240.5 * ratio, 231.0625 * ratio);
                ctx[b[62]](255.5 * ratio, 231.0625 * ratio, 254.5 * ratio, 243.0625 * ratio, 240.5 * ratio, 242.0625 * ratio);
                ctx[b[62]](225.5 * ratio, 239.0625 * ratio, 225.5 * ratio, 232.0625 * ratio, 240.5 * ratio, 231.0625 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 4 * ratio);
                return data;
            }
        function attachEbiId(radius, id, testCase)
            /*Scope Closed:false | writes:true*/
            {
                id = document('canvas');
                var ctx = id[b[9]]('2d');
                id[b[187]] = 217 * radius;
                id[b[236]] = 215 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](79 * radius, 113 * radius);
                ctx[b[62]](135 * radius, 98 * radius, 136 * radius, 96 * radius, 142 * radius, 97 * radius);
                ctx[b[62]](167 * radius, 106 * radius, 167 * radius, 106 * radius, 171 * radius, 109 * radius);
                ctx[b[62]](173 * radius, 120 * radius, 173 * radius, 134 * radius, 169 * radius, 141 * radius);
                ctx[b[62]](140 * radius, 149.5 * radius, 140 * radius, 149.5 * radius, 111 * radius, 158 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[1], testCase[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](154 * radius, 103 * radius);
                ctx[b[62]](167 * radius, 91 * radius, 175 * radius, 87 * radius, 176 * radius, 94 * radius);
                ctx[b[62]](175 * radius, 102 * radius, 176 * radius, 102 * radius, 186 * radius, 103 * radius);
                ctx[b[62]](191 * radius, 104 * radius, 192 * radius, 105 * radius, 185 * radius, 116 * radius);
                ctx[b[62]](183 * radius, 120 * radius, 191 * radius, 124 * radius, 189 * radius, 129 * radius);
                ctx[b[62]](185 * radius, 139 * radius, 178 * radius, 134 * radius, 166 * radius, 131 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[1], testCase[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](60 * radius, 46 * radius);
                ctx[b[62]](60 * radius, 34 * radius, 60 * radius, 29 * radius, 56 * radius, 19 * radius);
                ctx[b[62]](52 * radius, 12 * radius, 52 * radius, 16 * radius, 49 * radius, 24 * radius);
                ctx[b[62]](48 * radius, 27 * radius, 46 * radius, 28 * radius, 39 * radius, 27 * radius);
                ctx[b[62]](33 * radius, 26 * radius, 34 * radius, 31 * radius, 35 * radius, 37 * radius);
                ctx[b[62]](36 * radius, 41 * radius, 27 * radius, 46 * radius, 29 * radius, 52 * radius);
                ctx[b[62]](36 * radius, 55 * radius, 35 * radius, 56 * radius, 31 * radius, 59 * radius);
                ctx[b[62]](27 * radius, 65 * radius, 32 * radius, 64 * radius, 35 * radius, 62 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[4], testCase[5], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](46 * radius, 50 * radius);
                ctx[b[62]](51 * radius, 35 * radius, 70 * radius, 32 * radius, 78 * radius, 29 * radius);
                ctx[b[62]](84 * radius, 27 * radius, 113 * radius, 36 * radius, 127 * radius, 41 * radius);
                ctx[b[62]](140 * radius, 47 * radius, 147 * radius, 69 * radius, 137 * radius, 73 * radius);
                ctx[b[62]](124 * radius, 92 * radius, 117 * radius, 92 * radius, 109 * radius, 94 * radius);
                ctx[b[62]](101 * radius, 96 * radius, 89 * radius, 92 * radius, 65 * radius, 83 * radius);
                ctx[b[62]](54 * radius, 80 * radius, 46 * radius, 58 * radius, 46 * radius, 51 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[4], testCase[5], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](51 * radius, 40 * radius);
                ctx[b[62]](49 * radius, 34 * radius, 49 * radius, 34 * radius, 47 * radius, 28 * radius);
                ctx[b[62]](38 * radius, 28 * radius, 34 * radius, 27 * radius, 37 * radius, 37 * radius);
                ctx[b[62]](43 * radius, 40.5 * radius, 43 * radius, 40.5 * radius, 49 * radius, 44 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[7]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](29 * radius, 48 * radius);
                ctx[b[62]](38 * radius, 49 * radius, 38 * radius, 49 * radius, 47 * radius, 50 * radius);
                ctx[b[62]](46.5 * radius, 51.5 * radius, 46.5 * radius, 51.5 * radius, 46 * radius, 53 * radius);
                ctx[b[62]](40 * radius, 53.5 * radius, 40 * radius, 53.5 * radius, 34 * radius, 54 * radius);
                ctx[b[62]](29 * radius, 51 * radius, 32 * radius, 51.5 * radius, 30 * radius, 49 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[7]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](89 * radius, 61 * radius);
                ctx[b[62]](101 * radius, 70 * radius, 109 * radius, 90 * radius, 102 * radius, 90 * radius);
                ctx[b[62]](97 * radius, 91 * radius, 87 * radius, 91 * radius, 60 * radius, 80 * radius);
                ctx[b[62]](48 * radius, 65 * radius, 46 * radius, 56 * radius, 48 * radius, 53 * radius);
                ctx[b[62]](50 * radius, 52 * radius, 66 * radius, 56 * radius, 89 * radius, 61 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[7]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](99 * radius, 59 * radius);
                ctx[b[62]](115 * radius, 45 * radius, 125 * radius, 42 * radius, 129 * radius, 47 * radius);
                ctx[b[62]](138 * radius, 56 * radius, 140 * radius, 63 * radius, 138 * radius, 67 * radius);
                ctx[b[62]](131 * radius, 80 * radius, 122 * radius, 87 * radius, 114 * radius, 90 * radius);
                ctx[b[62]](105 * radius, 80 * radius, 95 * radius, 62 * radius, 98 * radius, 61 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[7]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](118 * radius, 62 * radius);
                ctx[b[62]](139 * radius, 45 * radius, 153 * radius, 40 * radius, 150 * radius, 48 * radius);
                ctx[b[62]](145 * radius, 57 * radius, 157 * radius, 63 * radius, 157 * radius, 70 * radius);
                ctx[b[62]](157 * radius, 74 * radius, 142 * radius, 77 * radius, 142 * radius, 85 * radius);
                ctx[b[62]](143 * radius, 91 * radius, 141 * radius, 92 * radius, 135 * radius, 90 * radius);
                ctx[b[62]](132 * radius, 90 * radius, 132 * radius, 96 * radius, 124 * radius, 99 * radius);
                ctx[b[62]](118 * radius, 93 * radius, 116 * radius, 77 * radius, 116 * radius, 64 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[4], testCase[5], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](90 * radius, 130 * radius);
                ctx[b[62]](157 * radius, 115 * radius, 165 * radius, 111 * radius, 167 * radius, 115 * radius);
                ctx[b[62]](170 * radius, 117 * radius, 171 * radius, 135 * radius, 167 * radius, 141 * radius);
                ctx[b[62]](135.5 * radius, 149.5 * radius, 135.5 * radius, 149.5 * radius, 104 * radius, 158 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](53 * radius, 119 * radius);
                ctx[b[62]](46 * radius, 120 * radius, 40 * radius, 118 * radius, 34 * radius, 116 * radius);
                ctx[b[62]](28 * radius, 111 * radius, 41 * radius, 112 * radius, 39 * radius, 108 * radius);
                ctx[b[62]](36 * radius, 100 * radius, 49 * radius, 102 * radius, 53 * radius, 95 * radius);
                ctx[b[62]](57 * radius, 84 * radius, 58 * radius, 85 * radius, 63 * radius, 93 * radius);
                ctx[b[62]](68 * radius, 96 * radius, 72 * radius, 94 * radius, 80 * radius, 88 * radius);
                ctx[b[62]](80 * radius, 96 * radius, 78 * radius, 107 * radius, 66 * radius, 115 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[9], testCase[10], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](118 * radius, 64 * radius);
                ctx[b[62]](133.5 * radius, 57 * radius, 133.5 * radius, 57 * radius, 149 * radius, 50 * radius);
                ctx[b[62]](145 * radius, 54 * radius, 154 * radius, 65 * radius, 157 * radius, 68 * radius);
                ctx[b[62]](138.5 * radius, 66.5 * radius, 138.5 * radius, 66.5 * radius, 120 * radius, 65 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](118 * radius, 65 * radius);
                ctx[b[62]](129 * radius, 77 * radius, 129 * radius, 77 * radius, 140 * radius, 89 * radius);
                ctx[b[62]](131 * radius, 89 * radius, 130 * radius, 92 * radius, 128 * radius, 96 * radius);
                ctx[b[62]](123.5 * radius, 82 * radius, 123.5 * radius, 82 * radius, 119 * radius, 68 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](51 * radius, 112 * radius);
                ctx[b[62]](63 * radius, 108 * radius, 78 * radius, 111 * radius, 88 * radius, 112 * radius);
                ctx[b[62]](98 * radius, 122 * radius, 117 * radius, 136 * radius, 125 * radius, 157 * radius);
                ctx[b[62]](123 * radius, 180 * radius, 123 * radius, 185 * radius, 118 * radius, 186 * radius);
                ctx[b[62]](101 * radius, 190 * radius, 89 * radius, 191 * radius, 79 * radius, 187 * radius);
                ctx[b[62]](53 * radius, 165 * radius, 50 * radius, 153 * radius, 47 * radius, 144 * radius);
                ctx[b[62]](46 * radius, 128 * radius, 46 * radius, 124 * radius, 50 * radius, 112 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[9], testCase[10], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](50 * radius, 114 * radius);
                ctx[b[62]](81 * radius, 149 * radius, 80 * radius, 147 * radius, 80 * radius, 149 * radius);
                ctx[b[62]](82 * radius, 155 * radius, 80 * radius, 182 * radius, 74 * radius, 182 * radius);
                ctx[b[62]](60 * radius, 172 * radius, 52 * radius, 157 * radius, 47 * radius, 144 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[11], testCase[11], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](85 * radius, 152 * radius);
                ctx[b[62]](99 * radius, 150 * radius, 109 * radius, 152 * radius, 119 * radius, 156 * radius);
                ctx[b[62]](122 * radius, 163 * radius, 122 * radius, 174 * radius, 117 * radius, 182 * radius);
                ctx[b[238]]();
                ctx[b[62]](93 * radius, 188 * radius, 82 * radius, 187 * radius, 83 * radius, 179 * radius);
                equal(ctx, testCase[11], testCase[11], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](104 * radius, 166 * radius);
                ctx[b[62]](133 * radius, 165 * radius, 142 * radius, 168 * radius, 137 * radius, 173 * radius);
                ctx[b[62]](127 * radius, 177 * radius, 137 * radius, 195 * radius, 126 * radius, 196 * radius);
                ctx[b[62]](112 * radius, 195 * radius, 112 * radius, 194 * radius, 109 * radius, 199 * radius);
                ctx[b[62]](105 * radius, 205 * radius, 102 * radius, 195 * radius, 96 * radius, 197 * radius);
                ctx[b[62]](84 * radius, 201 * radius, 88 * radius, 198 * radius, 90 * radius, 187 * radius);
                ctx[b[62]](96 * radius, 171 * radius, 97 * radius, 170 * radius, 103 * radius, 167 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[9], testCase[10], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](105 * radius, 168 * radius);
                ctx[b[62]](118 * radius, 172.5 * radius, 118 * radius, 172.5 * radius, 131 * radius, 177 * radius);
                ctx[b[62]](133 * radius, 190 * radius, 132 * radius, 199 * radius, 116 * radius, 194 * radius);
                ctx[b[62]](110 * radius, 182 * radius, 110 * radius, 182 * radius, 104 * radius, 170 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[10]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](102 * radius, 169 * radius);
                ctx[b[62]](100.5 * radius, 182 * radius, 100.5 * radius, 182 * radius, 99 * radius, 195 * radius);
                ctx[b[62]](93.5 * radius, 196.5 * radius, 93.5 * radius, 196.5 * radius, 88 * radius, 198 * radius);
                ctx[b[62]](94 * radius, 176 * radius, 96 * radius, 174 * radius, 101 * radius, 168 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[9], testCase[9], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](64 * radius, 107 * radius);
                ctx[b[62]](64 * radius, 101 * radius, 64 * radius, 101 * radius, 64 * radius, 95 * radius);
                ctx[b[62]](57 * radius, 86 * radius, 57 * radius, 84 * radius, 53 * radius, 97 * radius);
                ctx[b[62]](55 * radius, 103.5 * radius, 55 * radius, 103.5 * radius, 57 * radius, 110 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[11], testCase[11], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](40 * radius, 108 * radius);
                ctx[b[62]](46.5 * radius, 111 * radius, 46.5 * radius, 111 * radius, 53 * radius, 114 * radius);
                ctx[b[62]](50.5 * radius, 117 * radius, 50.5 * radius, 117 * radius, 48 * radius, 120 * radius);
                ctx[b[62]](40.5 * radius, 117.5 * radius, 40.5 * radius, 117.5 * radius, 33 * radius, 115 * radius);
                ctx[b[62]](36 * radius, 112 * radius, 36 * radius, 112 * radius, 39 * radius, 109 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[11], testCase[11], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](189 * radius, 106 * radius);
                ctx[b[62]](178.5 * radius, 110.5 * radius, 178.5 * radius, 110.5 * radius, 168 * radius, 115 * radius);
                ctx[b[62]](168.5 * radius, 119 * radius, 168.5 * radius, 119 * radius, 169 * radius, 123 * radius);
                ctx[b[62]](179 * radius, 124.5 * radius, 179 * radius, 124.5 * radius, 189 * radius, 126 * radius);
                ctx[b[62]](182 * radius, 118 * radius, 183 * radius, 115 * radius, 188 * radius, 106 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](69 * radius, 178 * radius);
                ctx[b[62]](69 * radius, 141 * radius, 70 * radius, 136 * radius, 77 * radius, 137 * radius);
                ctx[b[62]](88 * radius, 133 * radius, 101 * radius, 134 * radius, 108 * radius, 137 * radius);
                equal(ctx, void 0, testCase[3], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](55 * radius, 161 * radius);
                ctx[b[62]](54 * radius, 124 * radius, 55 * radius, 119 * radius, 62 * radius, 119 * radius);
                ctx[b[62]](74 * radius, 117 * radius, 85 * radius, 117 * radius, 93 * radius, 119 * radius);
                equal(ctx, void 0, testCase[3], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](91 * radius, 29 * radius);
                ctx[b[62]](74 * radius, 33 * radius, 62 * radius, 46 * radius, 57 * radius, 54 * radius);
                ctx[b[62]](57 * radius, 63 * radius, 68 * radius, 76 * radius, 77 * radius, 87 * radius);
                equal(ctx, void 0, testCase[6], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](107 * radius, 33 * radius);
                ctx[b[62]](82 * radius, 51 * radius, 80 * radius, 52 * radius, 79 * radius, 59 * radius);
                ctx[b[62]](78 * radius, 65 * radius, 93 * radius, 86 * radius, 101 * radius, 93 * radius);
                equal(ctx, void 0, testCase[6], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](130 * radius, 98 * radius);
                ctx[b[62]](126.5 * radius, 103 * radius, 126.5 * radius, 103 * radius, 123 * radius, 108 * radius);
                ctx[b[62]](133.5 * radius, 107 * radius, 133.5 * radius, 107 * radius, 144 * radius, 106 * radius);
                ctx[b[62]](138.5 * radius, 110 * radius, 138.5 * radius, 110 * radius, 133 * radius, 114 * radius);
                ctx[b[62]](142 * radius, 114 * radius, 142 * radius, 114 * radius, 151 * radius, 114 * radius);
                ctx[b[62]](146.5 * radius, 119.5 * radius, 146.5 * radius, 119.5 * radius, 142 * radius, 125 * radius);
                ctx[b[62]](146.5 * radius, 127 * radius, 146.5 * radius, 127 * radius, 151 * radius, 129 * radius);
                ctx[b[62]](147.5 * radius, 132 * radius, 147.5 * radius, 132 * radius, 144 * radius, 135 * radius);
                ctx[b[62]](148 * radius, 137 * radius, 148 * radius, 137 * radius, 152 * radius, 139 * radius);
                ctx[b[62]](149 * radius, 142.5 * radius, 149 * radius, 142.5 * radius, 146 * radius, 146 * radius);
                equal(ctx, void 0, testCase[3], 4 * radius);
                return id;
            }
        function pickPoints(ratio, data, test)
            /*Scope Closed:false | writes:true*/
            {
                data = document('canvas');
                var ctx = data[b[9]]('2d');
                data[b[187]] = 118 * ratio;
                data[b[236]] = 114 * ratio;
                ctx[b[150]](0, 10 * ratio);
                callback(ctx, 42 * ratio, 43 * ratio, 24.758836806279895 * ratio);
                equal(ctx, test[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](65 * ratio, 90 * ratio);
                ctx[b[62]](72 * ratio, 91 * ratio, 75 * ratio, 92 * ratio, 71 * ratio, 96 * ratio);
                ctx[b[62]](65 * ratio, 98 * ratio, 65 * ratio, 94 * ratio, 65 * ratio, 91 * ratio);
                ctx[b[238]]();
                equal(ctx, test[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](87 * ratio, 45 * ratio);
                ctx[b[62]](108 * ratio, 59 * ratio, 100 * ratio, 86 * ratio, 85 * ratio, 91 * ratio);
                ctx[b[62]](80 * ratio, 96 * ratio, 68 * ratio, 95 * ratio, 58 * ratio, 87 * ratio);
                ctx[b[62]](53 * ratio, 80 * ratio, 61 * ratio, 64 * ratio, 66 * ratio, 58 * ratio);
                ctx[b[62]](73 * ratio, 48 * ratio, 78 * ratio, 44 * ratio, 87 * ratio, 45 * ratio);
                ctx[b[238]]();
                equal(ctx, test[0]);
                ctx[b[150]](0, -10 * ratio);
                callback(ctx, 42 * ratio, 43 * ratio, 24.758836806279895 * ratio);
                equal(ctx, test[1], test[2], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](65 * ratio, 90 * ratio);
                ctx[b[62]](72 * ratio, 91 * ratio, 75 * ratio, 92 * ratio, 71 * ratio, 96 * ratio);
                ctx[b[62]](65 * ratio, 98 * ratio, 65 * ratio, 94 * ratio, 65 * ratio, 91 * ratio);
                ctx[b[238]]();
                equal(ctx, test[1], test[2], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](87 * ratio, 45 * ratio);
                ctx[b[62]](108 * ratio, 59 * ratio, 100 * ratio, 86 * ratio, 85 * ratio, 91 * ratio);
                ctx[b[62]](80 * ratio, 96 * ratio, 68 * ratio, 95 * ratio, 58 * ratio, 87 * ratio);
                ctx[b[62]](53 * ratio, 80 * ratio, 61 * ratio, 64 * ratio, 66 * ratio, 58 * ratio);
                ctx[b[62]](73 * ratio, 48 * ratio, 78 * ratio, 44 * ratio, 87 * ratio, 45 * ratio);
                ctx[b[238]]();
                equal(ctx, test[1], test[2], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](52 * ratio, 16 * ratio);
                ctx[b[62]](55 * ratio, 19 * ratio, 54 * ratio, 20 * ratio, 55 * ratio, 22 * ratio);
                ctx[b[62]](52 * ratio, 24.5 * ratio, 52 * ratio, 24.5 * ratio, 49 * ratio, 27 * ratio);
                ctx[b[62]](45 * ratio, 25 * ratio, 45 * ratio, 25 * ratio, 41 * ratio, 23 * ratio);
                ctx[b[62]](45 * ratio, 19 * ratio, 48 * ratio, 16 * ratio, 52 * ratio, 16 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](62 * ratio, 30 * ratio);
                ctx[b[62]](66 * ratio, 29 * ratio, 64 * ratio, 30 * ratio, 66 * ratio, 30 * ratio);
                ctx[b[62]](67 * ratio, 31 * ratio, 67 * ratio, 31 * ratio, 68 * ratio, 32 * ratio);
                ctx[b[62]](66.5 * ratio, 33.5 * ratio, 66.5 * ratio, 33.5 * ratio, 65 * ratio, 35 * ratio);
                ctx[b[62]](63.5 * ratio, 32.5 * ratio, 63.5 * ratio, 32.5 * ratio, 62 * ratio, 30 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](29 * ratio, 21 * ratio);
                ctx[b[62]](31 * ratio, 22 * ratio, 31 * ratio, 26 * ratio, 29 * ratio, 29 * ratio);
                ctx[b[62]](26 * ratio, 28.5 * ratio, 26 * ratio, 28.5 * ratio, 23 * ratio, 28 * ratio);
                ctx[b[62]](23 * ratio, 26.5 * ratio, 23 * ratio, 26.5 * ratio, 23 * ratio, 25 * ratio);
                ctx[b[62]](25 * ratio, 23 * ratio, 25 * ratio, 23 * ratio, 27 * ratio, 21 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](18 * ratio, 36 * ratio);
                ctx[b[62]](23 * ratio, 36 * ratio, 24 * ratio, 42 * ratio, 19 * ratio, 46 * ratio);
                ctx[b[62]](12 * ratio, 39 * ratio, 15 * ratio, 38 * ratio, 18 * ratio, 37 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](30 * ratio, 34 * ratio);
                ctx[b[62]](35 * ratio, 36 * ratio, 36 * ratio, 39 * ratio, 32 * ratio, 45 * ratio);
                ctx[b[62]](25 * ratio, 46 * ratio, 25 * ratio, 44 * ratio, 30 * ratio, 34 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](59 * ratio, 35 * ratio);
                ctx[b[62]](58 * ratio, 27 * ratio, 57 * ratio, 27 * ratio, 52 * ratio, 31 * ratio);
                ctx[b[62]](50 * ratio, 36 * ratio, 53 * ratio, 38 * ratio, 58 * ratio, 36 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](63 * ratio, 46 * ratio);
                ctx[b[62]](64.5 * ratio, 46.5 * ratio, 64.5 * ratio, 46.5 * ratio, 66 * ratio, 47 * ratio);
                ctx[b[62]](70 * ratio, 50 * ratio, 70 * ratio, 53 * ratio, 61 * ratio, 55 * ratio);
                ctx[b[62]](62 * ratio, 50.5 * ratio, 62 * ratio, 50.5 * ratio, 63 * ratio, 46 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](41 * ratio, 42 * ratio);
                ctx[b[62]](47 * ratio, 41 * ratio, 53 * ratio, 47 * ratio, 46 * ratio, 51 * ratio);
                ctx[b[62]](38 * ratio, 49 * ratio, 39 * ratio, 46 * ratio, 41 * ratio, 43 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](44 * ratio, 57 * ratio);
                ctx[b[62]](54 * ratio, 57 * ratio, 54 * ratio, 58 * ratio, 55 * ratio, 61 * ratio);
                ctx[b[62]](54 * ratio, 63 * ratio, 52 * ratio, 64 * ratio, 48 * ratio, 65 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](20 * ratio, 52 * ratio);
                ctx[b[62]](25 * ratio, 51 * ratio, 27 * ratio, 50 * ratio, 28 * ratio, 54 * ratio);
                ctx[b[62]](27 * ratio, 58 * ratio, 24 * ratio, 58 * ratio, 22 * ratio, 58 * ratio);
                ctx[b[62]](21 * ratio, 55.5 * ratio, 21 * ratio, 55.5 * ratio, 20 * ratio, 53 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](30 * ratio, 61 * ratio);
                ctx[b[62]](37 * ratio, 61 * ratio, 39 * ratio, 63 * ratio, 39 * ratio, 68 * ratio);
                ctx[b[62]](36 * ratio, 68.5 * ratio, 36 * ratio, 68.5 * ratio, 33 * ratio, 69 * ratio);
                ctx[b[62]](30.5 * ratio, 67.5 * ratio, 30.5 * ratio, 67.5 * ratio, 28 * ratio, 66 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](88 * ratio, 45 * ratio);
                ctx[b[62]](90 * ratio, 46.5 * ratio, 90 * ratio, 46.5 * ratio, 92 * ratio, 48 * ratio);
                ctx[b[62]](92 * ratio, 50 * ratio, 92 * ratio, 50 * ratio, 92 * ratio, 52 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](96 * ratio, 53 * ratio);
                ctx[b[62]](97.5 * ratio, 55 * ratio, 97.5 * ratio, 55 * ratio, 99 * ratio, 57 * ratio);
                ctx[b[62]](97.5 * ratio, 59.5 * ratio, 97.5 * ratio, 59.5 * ratio, 96 * ratio, 62 * ratio);
                ctx[b[62]](93.5 * ratio, 60.5 * ratio, 93.5 * ratio, 60.5 * ratio, 91 * ratio, 59 * ratio);
                ctx[b[62]](91.5 * ratio, 57 * ratio, 91.5 * ratio, 57 * ratio, 92 * ratio, 55 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](92 * ratio, 71 * ratio);
                ctx[b[62]](94.5 * ratio, 70.5 * ratio, 94.5 * ratio, 70.5 * ratio, 97 * ratio, 70 * ratio);
                ctx[b[62]](98.5 * ratio, 72.5 * ratio, 98.5 * ratio, 72.5 * ratio, 100 * ratio, 75 * ratio);
                ctx[b[62]](97 * ratio, 76.5 * ratio, 97 * ratio, 76.5 * ratio, 94 * ratio, 78 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](95 * ratio, 82 * ratio);
                ctx[b[62]](96 * ratio, 83 * ratio, 96 * ratio, 83 * ratio, 97 * ratio, 84 * ratio);
                ctx[b[62]](97 * ratio, 85.5 * ratio, 97 * ratio, 85.5 * ratio, 97 * ratio, 87 * ratio);
                ctx[b[62]](93.5 * ratio, 87.5 * ratio, 93.5 * ratio, 87.5 * ratio, 90 * ratio, 88 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](86 * ratio, 72 * ratio);
                ctx[b[62]](89 * ratio, 76 * ratio, 88 * ratio, 81 * ratio, 85 * ratio, 82 * ratio);
                ctx[b[62]](80 * ratio, 80 * ratio, 82 * ratio, 78 * ratio, 85 * ratio, 72 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](80 * ratio, 86 * ratio);
                ctx[b[62]](84 * ratio, 88 * ratio, 86 * ratio, 88 * ratio, 85 * ratio, 93 * ratio);
                ctx[b[62]](80 * ratio, 96 * ratio, 79 * ratio, 96 * ratio, 76 * ratio, 91 * ratio);
                ctx[b[238]]();
                equal(ctx, test[3], test[4], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](84 * ratio, 46 * ratio);
                ctx[b[62]](93 * ratio, 51 * ratio, 91 * ratio, 62 * ratio, 80 * ratio, 78 * ratio);
                ctx[b[62]](74 * ratio, 86 * ratio, 66 * ratio, 90 * ratio, 60 * ratio, 86 * ratio);
                ctx[b[62]](55 * ratio, 79 * ratio, 57 * ratio, 73 * ratio, 67 * ratio, 57 * ratio);
                ctx[b[62]](71 * ratio, 51 * ratio, 79 * ratio, 44 * ratio, 84 * ratio, 46 * ratio);
                ctx[b[238]]();
                equal(ctx, test[5], test[6], 5 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](76 * ratio, 60 * ratio);
                ctx[b[62]](80 * ratio, 66 * ratio, 75 * ratio, 74 * ratio, 68 * ratio, 74 * ratio);
                ctx[b[62]](60 * ratio, 64 * ratio, 68 * ratio, 59 * ratio, 76 * ratio, 59 * ratio);
                ctx[b[238]]();
                equal(ctx, test[7], test[8], 5 * ratio);
                return data;
            }
        function processItemLink(f, a, item)
            /*Scope Closed:false | writes:true*/
            {
                a = document('canvas');
                var c = a[b[9]]('2d');
                var o1 = 4 * f;
                var x = 5 * f;
                a[b[187]] = 70 * f;
                a[b[236]] = 90 * f;
                c[b[33]]();
                c[b[150]](-80 * f, -70 * f + 5 * f);
                c[b[277]] = 0.5;
                c[b[19]]();
                c[b[62]](130 * f, 79 * f, 132 * f, 86 * f, 130 * f, 93 * f);
                c[b[62]](128 * f, 100 * f, 121 * f, 107 * f, 120 * f, 107 * f);
                c[b[62]](120 * f, 107 * f, 115 * f, 98 * f, 115 * f, 92 * f);
                c[b[62]](115 * f, 86 * f, 119 * f, 76 * f, 127 * f, 73 * f);
                c[b[238]]();
                equal(c, '#0d1b1c');
                c[b[210]]();
                c[b[33]]();
                c[b[150]](-80 * f, -70 * f + 5 * f);
                c[b[277]] = 0.5;
                c[b[19]]();
                c[b[62]](112 * f, 109 * f, 111 * f, 100 * f, 106 * f, 93 * f);
                c[b[62]](104 * f, 90 * f, 91 * f, 87 * f, 91 * f, 87 * f);
                c[b[62]](91 * f, 88 * f, 91 * f, 96 * f, 94 * f, 102 * f);
                c[b[62]](97 * f, 108 * f, 106 * f, 112 * f, 113 * f, 112 * f);
                c[b[238]]();
                equal(c, '#0d1b1c');
                c[b[210]]();
                c[b[33]]();
                c[b[150]](-80 * f, -70 * f + 5 * f);
                c[b[277]] = 0.5;
                c[b[19]]();
                c[b[62]](108 * f, 120 * f, 100 * f, 119 * f, 91 * f, 127 * f);
                c[b[62]](83 * f, 134 * f, 82 * f, 146 * f, 83 * f, 146 * f);
                c[b[62]](84 * f, 146 * f, 98 * f, 142 * f, 103 * f, 138 * f);
                c[b[62]](107 * f, 135 * f, 110 * f, 130 * f, 112 * f, 121 * f);
                c[b[238]]();
                equal(c, '#0d1b1c');
                c[b[210]]();
                c[b[33]]();
                c[b[150]](3 * f, -93 * f + 5 * f);
                c[b[65]](Math[b[46]] / 5);
                c[b[277]] = 0.5;
                c[b[19]]();
                c[b[62]](130 * f, 79 * f, 132 * f, 86 * f, 130 * f, 93 * f);
                c[b[62]](128 * f, 100 * f, 121 * f, 107 * f, 120 * f, 107 * f);
                c[b[62]](120 * f, 107 * f, 115 * f, 98 * f, 115 * f, 92 * f);
                c[b[62]](115 * f, 86 * f, 119 * f, 76 * f, 127 * f, 73 * f);
                c[b[238]]();
                equal(c, '#0d1b1c');
                c[b[210]]();
                c[b[33]]();
                c[b[150]](-80 * f, -70 * f);
                c[b[277]] = 1;
                c[b[19]]();
                c[b[62]](130 * f, 79 * f, 132 * f, 86 * f, 130 * f, 93 * f);
                c[b[62]](128 * f, 100 * f, 121 * f, 107 * f, 120 * f, 107 * f);
                c[b[62]](120 * f, 107 * f, 115 * f, 98 * f, 115 * f, 92 * f);
                c[b[62]](115 * f, 86 * f, 119 * f, 76 * f, 127 * f, 73 * f);
                c[b[238]]();
                equal(c, item[0], item[1], o1);
                c[b[210]]();
                c[b[33]]();
                c[b[150]](-80 * f, -70 * f);
                c[b[277]] = 1;
                c[b[19]]();
                c[b[62]](112 * f, 109 * f, 111 * f, 100 * f, 106 * f, 93 * f);
                c[b[62]](104 * f, 90 * f, 91 * f, 87 * f, 91 * f, 87 * f);
                c[b[62]](91 * f, 88 * f, 91 * f, 96 * f, 94 * f, 102 * f);
                c[b[62]](97 * f, 108 * f, 106 * f, 112 * f, 113 * f, 112 * f);
                c[b[238]]();
                equal(c, item[0], item[1], o1);
                c[b[210]]();
                c[b[33]]();
                c[b[150]](-80 * f, -70 * f);
                c[b[277]] = 1;
                c[b[19]]();
                c[b[62]](108 * f, 120 * f, 100 * f, 119 * f, 91 * f, 127 * f);
                c[b[62]](83 * f, 134 * f, 82 * f, 146 * f, 83 * f, 146 * f);
                c[b[62]](84 * f, 146 * f, 98 * f, 142 * f, 103 * f, 138 * f);
                c[b[62]](107 * f, 135 * f, 110 * f, 130 * f, 112 * f, 121 * f);
                c[b[238]]();
                equal(c, item[0], item[1], o1);
                c[b[210]]();
                c[b[33]]();
                c[b[150]](3 * f, -93 * f);
                c[b[65]](Math[b[46]] / 5);
                c[b[277]] = 1;
                c[b[19]]();
                c[b[62]](130 * f, 79 * f, 132 * f, 86 * f, 130 * f, 93 * f);
                c[b[62]](128 * f, 100 * f, 121 * f, 107 * f, 120 * f, 107 * f);
                c[b[62]](120 * f, 107 * f, 115 * f, 98 * f, 115 * f, 92 * f);
                c[b[62]](115 * f, 86 * f, 119 * f, 76 * f, 127 * f, 73 * f);
                c[b[238]]();
                equal(c, item[0], item[1], o1);
                c[b[210]]();
                return a;
            }
        function constructor(step, data, factor, value, p, w, r, val, a, f, i)
            /*Scope Closed:false | writes:true*/
            {
                if (void 0 === i) {
                    i = 0;
                }
                var ret = document('canvas');
                var c = ret[b[9]]('2d');
                w = w ? w * step : 0;
                var d = Math(step * factor);
                c[b[237]] = Math(step * factor) + 'px Baloo Paaji';
                c[b[4]] = 'round';
                val = val * step;
                var t = r ? 2 * val : 0;
                a = a ? Math(c[b[268]](data)[b[187]] + 2 * step + (r ? 2 * val : 0), a) : c[b[268]](data)[b[187]] + 2 * step + (r ? 2 * val : 0) + 0 * step * 2;
                d = (d + (w ? w * step : 0) + 0) * step + (r ? 2 * val : 0);
                ret[b[187]] = a;
                ret[b[236]] = d;
                if (r) {
                    c[b[219]] = r;
                    chroma(c, 0, 0, a, d, 2 * val);
                    c[b[175]]();
                    c[b[150]](val, val);
                }
                c[b[244]] = 'middle';
                c[b[237]] = factor + 'px Baloo Paaji';
                c[b[4]] = 'round';
                if (p) {
                    c[b[19]]();
                    c[b[219]] = p;
                    c[b[67]](data, 0, d / 2 + (w ? w * step : 0) - t / 2, a);
                }
                c[b[19]]();
                if (f) {
                    c[b[165]] = f;
                    c[b[148]] = 0;
                    c[b[188]](data, i, (d - t) / 2, a);
                }
                c[b[219]] = value;
                c[b[67]](data, i, (d - t) / 2, a);
                return ret;
            }
        function compileSlide(d, data, options)
            /*Scope Closed:false | writes:true*/
            {
                data = document('canvas');
                var c = data[b[9]]('2d');
                var ad = 220 * d;
                var w = 230 * d;
                var x = 100 * d;
                var pct = x / 4;
                d = d * 20;
                data[b[187]] = ad;
                data[b[236]] = w;
                c[b[150]](ad / 2, w / 2 + d * 20);
                c[b[277]] = 0.5;
                get(c, 7, x, pct);
                equal(c, options[0]);
                c[b[277]] = 1;
                c[b[150]](0, -(d * 20));
                get(c, 7, x, pct);
                equal(c, options[1]);
                get(c, 6, 0.65 * x, 0.65 * pct);
                equal(c, options[2]);
                return data;
            }
        function go(ratio, callback, options, mode)
            /*Scope Closed:false | writes:true*/
            {
                var output = document('canvas');
                var ctx = output[b[9]]('2d');
                var g = 220 * ratio;
                var left = 220 * ratio;
                var x = 100 * ratio;
                var pct = x / 4;
                output[b[187]] = g;
                output[b[236]] = left;
                ctx[b[150]](g / 2, left / 2);
                ctx[b[277]] = callback ? 0.5 : 1;
                if (!callback) {
                    ctx[b[150]](0 * ratio, -8 * ratio);
                }
                get(ctx, 7, x, pct);
                if (callback) {
                    equal(ctx, options[0]);
                } else {
                    equal(ctx, options[1]);
                }
                ctx[b[277]] = 1;
                if (0 == mode) {
                    get(ctx, 6, 0.65 * x, 0.65 * pct);
                    equal(ctx, options[2]);
                } else {
                    if (1 == mode) {
                        ctx[b[150]](20 * ratio, 20 * ratio);
                        get(ctx, 6, 0.45 * x, 0.4 * pct);
                        equal(ctx, options[2]);
                    }
                }
                return output;
            }
        function process(i, data, options)
            /*Scope Closed:false | writes:true*/
            {
                data = document('canvas');
                var c = data[b[9]]('2d');
                var width = 120 * i;
                var tr = 150 * i;
                var x = 60 * i;
                var pct = x / 4;
                var shift = 15 * i;
                data[b[187]] = width;
                data[b[236]] = tr;
                c[b[33]]();
                c[b[150]](width / 2 + 0 * i, tr / 2 + 0 * i + 15 * i);
                c[b[65]](Math[b[46]] / 3);
                c[b[277]] = 0.5;
                get(c, 8, x, pct);
                equal(c, options[0]);
                c[b[210]]();
                c[b[33]]();
                c[b[150]](width / 2 - 11 * i, tr / 2 + 12 * i);
                c[b[277]] = 1;
                c[b[65]](Math[b[46]] / 3);
                c[b[150]](0, -(15 * i));
                get(c, 8, x, pct);
                equal(c, options[1]);
                c[b[210]]();
                c[b[33]]();
                c[b[150]](width / 2 - 9 * i, tr / 2 - 12 * i);
                c[b[65]](Math[b[46]] / 2.8);
                get(c, 5, 0.5 * x, 0.4 * pct);
                equal(c, options[2]);
                c[b[210]]();
                c[b[33]]();
                c[b[150]](width / 2 + 19 * i, tr / 2 + 5 * i);
                c[b[65]](Math[b[46]] / 1);
                get(c, 5, 0.5 * x, 0.4 * pct);
                equal(c, options[2]);
                c[b[210]]();
                c[b[33]]();
                c[b[150]](width / 2 - 8 * i, tr / 2 + 20 * i);
                c[b[65]](Math[b[46]] / 2.25);
                get(c, 5, 0.5 * x, 0.4 * pct);
                equal(c, options[2]);
                c[b[210]]();
                return data;
            }
        function compare(s, result, expected)
            /*Scope Closed:false | writes:true*/
            {
                result = document('canvas');
                var ctx = result[b[9]]('2d');
                var height = 180 * s;
                var width = 210 * s;
                var x = 60 * s;
                var r = x / 4;
                var t = 20 * s;
                result[b[187]] = height;
                result[b[236]] = width;
                ctx[b[33]]();
                ctx[b[150]](height / 2 - 0 * s, width / 2 - 35 * s + 20 * s);
                ctx[b[65]](Math[b[46]] / -1.8);
                ctx[b[277]] = 0.5;
                ctx[b[150]](0 * s, -20 * s);
                get(ctx, 5, x, r);
                equal(ctx, expected[0]);
                ctx[b[210]]();
                ctx[b[33]]();
                ctx[b[150]](height / 2 + 10 * s, width / 2 + 15 * s + 20 * s);
                ctx[b[65]](Math[b[46]] / 2);
                ctx[b[277]] = 0.5;
                ctx[b[150]](0 * s, -20 * s);
                get(ctx, 5, x, r);
                equal(ctx, expected[0]);
                ctx[b[210]]();
                ctx[b[33]]();
                ctx[b[150]](height / 2 - 50 * s, width / 2 + 40 * s + 20 * s);
                ctx[b[65]](Math[b[46]] / 3);
                ctx[b[277]] = 0.5;
                ctx[b[150]](0, -20 * s);
                get(ctx, 5, x, r);
                equal(ctx, expected[0]);
                ctx[b[210]]();
                ctx[b[33]]();
                ctx[b[150]](height / 2 - 0 * s, width / 2 - 35 * s);
                ctx[b[65]](Math[b[46]] / -1.8);
                ctx[b[277]] = 1;
                ctx[b[150]](0 * s, -20 * s);
                get(ctx, 5, x, r);
                equal(ctx, expected[1]);
                ctx[b[210]]();
                ctx[b[33]]();
                ctx[b[150]](height / 2 + 10 * s, width / 2 + 15 * s);
                ctx[b[65]](Math[b[46]] / 2);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -20 * s);
                get(ctx, 5, x, r);
                equal(ctx, expected[1]);
                ctx[b[210]]();
                ctx[b[33]]();
                ctx[b[150]](height / 2 - 50 * s, width / 2 + 40 * s);
                ctx[b[65]](Math[b[46]] / 3);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -20 * s);
                get(ctx, 5, x, r);
                equal(ctx, expected[1]);
                ctx[b[210]]();
                x = 30 * s;
                r = x / 4;
                ctx[b[33]]();
                ctx[b[150]](height / 2 + 5 * s, width / 2 - 20 * s);
                ctx[b[65]](Math[b[46]] / -1.8);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -20 * s);
                get(ctx, 5, x, r);
                equal(ctx, expected[2]);
                ctx[b[210]]();
                ctx[b[33]]();
                ctx[b[150]](height / 2 + 0 * s, width / 2 + 10 * s);
                ctx[b[65]](Math[b[46]] / 2);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -20 * s);
                get(ctx, 5, x, r);
                equal(ctx, expected[2]);
                ctx[b[210]]();
                ctx[b[33]]();
                ctx[b[150]](height / 2 - 45 * s, width / 2 + 35 * s);
                ctx[b[65]](Math[b[46]] / 3);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -20 * s);
                get(ctx, 5, x, r);
                equal(ctx, expected[2]);
                ctx[b[210]]();
                callback(ctx, height / 2 - 7 * s, width / 2 + 7 * s, 5);
                equal(ctx, expected[2]);
                return result;
            }
        function exp(ratio, r, args)
            /*Scope Closed:false | writes:true*/
            {
                var canvasData = document('canvas');
                var ctx = canvasData[b[9]]('2d');
                var offset = 10 * ratio;
                var gutterWidth = 4 * ratio;
                canvasData[b[187]] = 140 * ratio;
                canvasData[b[236]] = 150 * ratio;
                ctx[b[150]](-50 * ratio, -38 * ratio + 10 * ratio);
                ctx[b[277]] = r ? 0.5 : 1;
                ctx[b[19]]();
                ctx[b[62]](160 * ratio, 65 * ratio, 160 * ratio, 85 * ratio, 152 * ratio, 95 * ratio);
                ctx[b[62]](152 * ratio, 95 * ratio, 173 * ratio, 94 * ratio, 187 * ratio, 102 * ratio);
                ctx[b[62]](187 * ratio, 102 * ratio, 180 * ratio, 120 * ratio, 155 * ratio, 126 * ratio);
                ctx[b[62]](154 * ratio, 126 * ratio, 166 * ratio, 138 * ratio, 169 * ratio, 148 * ratio);
                ctx[b[62]](169 * ratio, 148 * ratio, 148 * ratio, 152 * ratio, 133 * ratio, 140 * ratio);
                ctx[b[62]](133 * ratio, 140 * ratio, 134 * ratio, 160 * ratio, 122 * ratio, 175 * ratio);
                ctx[b[62]](122 * ratio, 175 * ratio, 107 * ratio, 162 * ratio, 107 * ratio, 144 * ratio);
                ctx[b[62]](107 * ratio, 144 * ratio, 98 * ratio, 164 * ratio, 73 * ratio, 167 * ratio);
                ctx[b[62]](73 * ratio, 167 * ratio, 72 * ratio, 134 * ratio, 90 * ratio, 127 * ratio);
                ctx[b[62]](90 * ratio, 127 * ratio, 70 * ratio, 134 * ratio, 55 * ratio, 123 * ratio);
                ctx[b[62]](55 * ratio, 123 * ratio, 58 * ratio, 115 * ratio, 75 * ratio, 104 * ratio);
                ctx[b[62]](75 * ratio, 104 * ratio, 66 * ratio, 96 * ratio, 61 * ratio, 77 * ratio);
                ctx[b[62]](61 * ratio, 77 * ratio, 83 * ratio, 74 * ratio, 102 * ratio, 89 * ratio);
                ctx[b[62]](102 * ratio, 89 * ratio, 92 * ratio, 66 * ratio, 110 * ratio, 41 * ratio);
                ctx[b[62]](111 * ratio, 40 * ratio, 130 * ratio, 54 * ratio, 130 * ratio, 82 * ratio);
                ctx[b[62]](130 * ratio, 82 * ratio, 143 * ratio, 67 * ratio, 159 * ratio, 65 * ratio);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[150]](0, 0 - offset);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[62]](160 * ratio, 65 * ratio, 160 * ratio, 85 * ratio, 152 * ratio, 95 * ratio);
                ctx[b[62]](152 * ratio, 95 * ratio, 173 * ratio, 94 * ratio, 187 * ratio, 102 * ratio);
                ctx[b[62]](187 * ratio, 102 * ratio, 180 * ratio, 120 * ratio, 155 * ratio, 126 * ratio);
                ctx[b[62]](154 * ratio, 126 * ratio, 166 * ratio, 138 * ratio, 169 * ratio, 148 * ratio);
                ctx[b[62]](169 * ratio, 148 * ratio, 148 * ratio, 152 * ratio, 133 * ratio, 140 * ratio);
                ctx[b[62]](133 * ratio, 140 * ratio, 134 * ratio, 160 * ratio, 122 * ratio, 175 * ratio);
                ctx[b[62]](122 * ratio, 175 * ratio, 107 * ratio, 162 * ratio, 107 * ratio, 144 * ratio);
                ctx[b[62]](107 * ratio, 144 * ratio, 98 * ratio, 164 * ratio, 73 * ratio, 167 * ratio);
                ctx[b[62]](73 * ratio, 167 * ratio, 72 * ratio, 134 * ratio, 90 * ratio, 127 * ratio);
                ctx[b[62]](90 * ratio, 127 * ratio, 70 * ratio, 134 * ratio, 55 * ratio, 123 * ratio);
                ctx[b[62]](55 * ratio, 123 * ratio, 58 * ratio, 115 * ratio, 75 * ratio, 104 * ratio);
                ctx[b[62]](75 * ratio, 104 * ratio, 66 * ratio, 96 * ratio, 61 * ratio, 77 * ratio);
                ctx[b[62]](61 * ratio, 77 * ratio, 83 * ratio, 74 * ratio, 102 * ratio, 89 * ratio);
                ctx[b[62]](102 * ratio, 89 * ratio, 92 * ratio, 66 * ratio, 110 * ratio, 41 * ratio);
                ctx[b[62]](111 * ratio, 40 * ratio, 130 * ratio, 54 * ratio, 130 * ratio, 82 * ratio);
                ctx[b[62]](130 * ratio, 82 * ratio, 143 * ratio, 67 * ratio, 159 * ratio, 65 * ratio);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], gutterWidth);
                return canvasData;
            }
        function log(i, data, values)
            /*Scope Closed:false | writes:true*/
            {
                data = document('canvas');
                var a = data[b[9]]('2d');
                data[b[187]] = 18 * i;
                data[b[236]] = 18 * i;
                var x = 9 * i;
                var t = 9 * i;
                var j = 8 * i;
                a[b[33]]();
                a[b[150]](x, t);
                a[b[277]] = 1;
                callback(a, 0, 0, j);
                equal(a, values[0]);
                j = 3 * i;
                a[b[150]](0, -3 * i);
                a[b[277]] = 1;
                callback(a, 0, 0, j);
                equal(a, values[1]);
                a[b[210]]();
                return data;
            }
        function parseObjText(txt, flipYUV)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 80 * txt;
                hash[b[236]] = 100 * txt;
                c[b[228]](0.5, 0.5);
                c[b[150]](10, 15);
                c[b[277]] = 0.5;
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](47 * txt, 5 * txt);
                c[b[62]](19 * txt, 30 * txt, 12 * txt, 42 * txt, 10 * txt, 55 * txt);
                c[b[62]](11 * txt, 75 * txt, 27 * txt, 76 * txt, 36 * txt, 72 * txt);
                c[b[62]](52 * txt, 60 * txt, 53 * txt, 46 * txt, 54 * txt, 31 * txt);
                c[b[62]](53 * txt, 14 * txt, 50 * txt, 9 * txt, 48 * txt, 6 * txt);
                c[b[238]]();
                equal(c, flipYUV[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](17 * txt, 70 * txt);
                c[b[62]](18 * txt, 77 * txt, 10 * txt, 83 * txt, 4 * txt, 87 * txt);
                equal(c, void 0, flipYUV[0], 10 * txt);
                c[b[150]](0, -10);
                c[b[277]] = 1;
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](47 * txt, 5 * txt);
                c[b[62]](19 * txt, 30 * txt, 12 * txt, 42 * txt, 10 * txt, 55 * txt);
                c[b[62]](11 * txt, 75 * txt, 27 * txt, 76 * txt, 36 * txt, 72 * txt);
                c[b[62]](52 * txt, 60 * txt, 53 * txt, 46 * txt, 54 * txt, 31 * txt);
                c[b[62]](53 * txt, 14 * txt, 50 * txt, 9 * txt, 48 * txt, 6 * txt);
                c[b[238]]();
                equal(c, flipYUV[1], flipYUV[2], 8 * txt);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](17 * txt, 70 * txt);
                c[b[62]](18 * txt, 77 * txt, 10 * txt, 83 * txt, 4 * txt, 87 * txt);
                equal(c, void 0, flipYUV[2], 8 * txt);
                c[b[277]] = 0.5;
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](17 * txt, 70 * txt);
                c[b[62]](33 * txt, 52 * txt, 39 * txt, 33 * txt, 48 * txt, 7 * txt);
                equal(c, void 0, flipYUV[2], 8 * txt);
                return hash;
            }
        function parseObjText(txt, flipYUV)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 234 * txt;
                hash[b[236]] = 183 * txt;
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](76 * txt, 25 * txt);
                c[b[62]](150 * txt, 3 * txt, 181 * txt, 22 * txt, 203 * txt, 41 * txt);
                c[b[62]](225 * txt, 63 * txt, 225 * txt, 105 * txt, 198 * txt, 133 * txt);
                c[b[62]](179 * txt, 157 * txt, 134 * txt, 178 * txt, 81 * txt, 164 * txt);
                c[b[62]](19 * txt, 148 * txt, 6 * txt, 95 * txt, 21 * txt, 66 * txt);
                c[b[62]](34 * txt, 39 * txt, 52 * txt, 33 * txt, 75 * txt, 25 * txt);
                c[b[238]]();
                equal(c, flipYUV[0], flipYUV[0], 4 * txt);
                return hash;
            }
        function buildAttraction(logAttr, distributedAttr, hlvals, adjustBySize, c)
            /*Scope Closed:false | writes:true*/
            {
                distributedAttr = document('canvas');
                c = distributedAttr[b[9]]('2d');
                if (0 == adjustBySize) {
                    distributedAttr[b[187]] = 270 * logAttr;
                    distributedAttr[b[236]] = 250 * logAttr;
                    c[b[19]]();
                    c[b[224]](140 * logAttr, 3 * logAttr);
                    c[b[150]](-25 * logAttr, -20 * logAttr);
                    c[b[62]](218 * logAttr, 31 * logAttr, 251 * logAttr, 61 * logAttr, 265 * logAttr, 85 * logAttr);
                    c[b[62]](278 * logAttr, 108 * logAttr, 295 * logAttr, 160 * logAttr, 285 * logAttr, 195 * logAttr);
                    c[b[62]](271 * logAttr, 242 * logAttr, 213 * logAttr, 268 * logAttr, 188 * logAttr, 266 * logAttr);
                    c[b[62]](139 * logAttr, 262 * logAttr, 70 * logAttr, 244 * logAttr, 47 * logAttr, 204 * logAttr);
                    c[b[62]](20 * logAttr, 158 * logAttr, 35 * logAttr, 78 * logAttr, 59 * logAttr, 56 * logAttr);
                    c[b[62]](90 * logAttr, 28 * logAttr, 124 * logAttr, 23 * logAttr, 140 * logAttr, 23 * logAttr);
                    c[b[238]]();
                    equal(c, hlvals[0]);
                } else {
                    if (1 == adjustBySize) {
                        distributedAttr[b[187]] = 430 * logAttr;
                        distributedAttr[b[236]] = 350 * logAttr;
                        c[b[19]]();
                        c[b[224]](180 * logAttr, 5 * logAttr);
                        c[b[150]](-30 * logAttr, -60 * logAttr);
                        c[b[62]](283 * logAttr, 60 * logAttr, 265 * logAttr, 163 * logAttr, 335 * logAttr, 206 * logAttr);
                        c[b[62]](376 * logAttr, 231 * logAttr, 492 * logAttr, 299 * logAttr, 434 * logAttr, 357 * logAttr);
                        c[b[62]](371 * logAttr, 421 * logAttr, 289 * logAttr, 394 * logAttr, 255 * logAttr, 386 * logAttr);
                        c[b[62]](218 * logAttr, 377 * logAttr, 91 * logAttr, 359 * logAttr, 50 * logAttr, 272 * logAttr);
                        c[b[62]](12 * logAttr, 192 * logAttr, 107 * logAttr, 75 * logAttr, 178 * logAttr, 69 * logAttr);
                        c[b[238]]();
                        equal(c, hlvals[0]);
                    } else {
                        if (2 == adjustBySize) {
                            distributedAttr[b[187]] = 400 * logAttr;
                            distributedAttr[b[236]] = 300 * logAttr;
                            c[b[19]]();
                            c[b[224]](80 * logAttr, 52 * logAttr);
                            c[b[150]](-40 * logAttr, -30 * logAttr);
                            c[b[62]](124 * logAttr, 77 * logAttr, 241 * logAttr, 22 * logAttr, 311 * logAttr, 65 * logAttr);
                            c[b[62]](352 * logAttr, 90 * logAttr, 404 * logAttr, 176 * logAttr, 346 * logAttr, 234 * logAttr);
                            c[b[62]](283 * logAttr, 298 * logAttr, 179 * logAttr, 299 * logAttr, 145 * logAttr, 291 * logAttr);
                            c[b[62]](108 * logAttr, 282 * logAttr, 100 * logAttr, 239 * logAttr, 63 * logAttr, 205 * logAttr);
                            c[b[62]](37 * logAttr, 181 * logAttr, 45 * logAttr, 131 * logAttr, 80 * logAttr, 107 * logAttr);
                            c[b[238]]();
                            equal(c, hlvals[0]);
                        }
                    }
                }
                return distributedAttr;
            }
        function makeComparator(fields, sort, data)
            /*Scope Closed:false | writes:true*/
            {
                var cmp = document('canvas');
                var a = cmp[b[9]]('2d');
                var expected = fields * sort * 2;
                var got = fields * sort * 2;
                cmp[b[187]] = expected;
                cmp[b[236]] = got;
                a[b[150]](expected / 2, got / 2);
                callback(a, 0, 0, sort * fields, 0);
                equal(a, data);
                return cmp;
            }
        function draw(a, fn, args)
            /*Scope Closed:false | writes:true*/
            {
                var buffer = document('canvas');
                var ret = buffer[b[9]]('2d');
                buffer[b[187]] = 373 * a;
                buffer[b[236]] = 314 * a;
                ret[b[277]] = fn ? 0.5 : 1;
                ret[b[150]](5 * a, 5 * a);
                ret[b[33]]();
                ret[b[150]](184.048583984375 * a, 69.1805419921875 * a);
                chroma(ret, -40 * a, -28.5 * a, 80 * a, 57 * a, 10 * a);
                ret[b[210]]();
                equal(ret, args[1], args[2], 4 * a);
                ret[b[19]]();
                ret[b[253]] = 'round';
                ret[b[4]] = 'round';
                ret[b[224]](185.048583984375 * a, 61.6805419921875 * a);
                ret[b[62]](145.048583984375 * a, 59.6805419921875 * a, 138.048583984375 * a, 41.6805419921875 * a, 148.048583984375 * a, 33.6805419921875 * a);
                ret[b[62]](169.048583984375 * a, 17.6805419921875 * a, 194.048583984375 * a, 20.6805419921875 * a, 210.048583984375 * a, 27.6805419921875 * a);
                ret[b[62]](234.048583984375 * a, 40.6805419921875 * a, 225.048583984375 * a, 57.6805419921875 * a, 186.048583984375 * a, 61.6805419921875 * a);
                ret[b[238]]();
                equal(ret, args[0], args[0], 6 * a);
                ret[b[19]]();
                ret[b[253]] = 'round';
                ret[b[4]] = 'round';
                ret[b[224]](224.048583984375 * a, 56.6805419921875 * a);
                ret[b[62]](326.048583984375 * a, 69.6805419921875 * a, 363.048583984375 * a, 148.6805419921875 * a, 349.048583984375 * a, 206.6805419921875 * a);
                ret[b[62]](329.048583984375 * a, 278.6805419921875 * a, 252.048583984375 * a, 283.6805419921875 * a, 206.048583984375 * a, 275.6805419921875 * a);
                ret[b[62]](206.548583984375 * a, 266.6805419921875 * a, 206.548583984375 * a, 266.6805419921875 * a, 207.048583984375 * a, 257.6805419921875 * a);
                ret[b[62]](276.048583984375 * a, 268.6805419921875 * a, 308.048583984375 * a, 239.6805419921875 * a, 323.048583984375 * a, 208.6805419921875 * a);
                ret[b[62]](352.048583984375 * a, 145.6805419921875 * a, 292.048583984375 * a, 86.6805419921875 * a, 223.048583984375 * a, 74.6805419921875 * a);
                ret[b[238]]();
                equal(ret, args[0], args[0], 6 * a);
                ret[b[33]]();
                ret[b[150]](183.548583984375 * a, 119.6805419921875 * a);
                chroma(ret, -121.5 * a, -45 * a, 243 * a, 90 * a, 40 * a);
                ret[b[210]]();
                equal(ret, args[0], args[0], 6 * a);
                ret[b[33]]();
                ret[b[150]](183.048583984375 * a, 155.6805419921875 * a);
                chroma(ret, -121 * a, -52 * a, 242 * a, 104 * a, 40 * a);
                ret[b[210]]();
                equal(ret, args[0], args[0], 6 * a);
                ret[b[33]]();
                ret[b[150]](183.048583984375 * a, 205.1805419921875 * a);
                chroma(ret, -121 * a, -50.5 * a, 242 * a, 101 * a, 40 * a);
                ret[b[210]]();
                equal(ret, args[0], args[0], 6 * a);
                ret[b[33]]();
                ret[b[150]](185.048583984375 * a, 204.1805419921875 * a);
                chroma(ret, -100 * a, -34.5 * a, 200 * a, 69 * a, 40 * a);
                ret[b[210]]();
                equal(ret, args[0], args[0], 6 * a);
                callback(ret, 185.048583984375 * a, 257.6805419921875 * a, 27.018512172212592 * a);
                equal(ret, args[0], args[0], 6 * a);
                ret[b[277]] = 1;
                ret[b[150]](-5 * a, -5 * a);
                ret[b[19]]();
                ret[b[253]] = 'round';
                ret[b[4]] = 'round';
                ret[b[224]](224.048583984375 * a, 56.6805419921875 * a);
                ret[b[62]](326.048583984375 * a, 69.6805419921875 * a, 363.048583984375 * a, 148.6805419921875 * a, 349.048583984375 * a, 206.6805419921875 * a);
                ret[b[62]](329.048583984375 * a, 278.6805419921875 * a, 252.048583984375 * a, 283.6805419921875 * a, 206.048583984375 * a, 275.6805419921875 * a);
                ret[b[62]](206.548583984375 * a, 266.6805419921875 * a, 206.548583984375 * a, 266.6805419921875 * a, 207.048583984375 * a, 257.6805419921875 * a);
                ret[b[62]](276.048583984375 * a, 268.6805419921875 * a, 308.048583984375 * a, 239.6805419921875 * a, 323.048583984375 * a, 208.6805419921875 * a);
                ret[b[62]](352.048583984375 * a, 145.6805419921875 * a, 292.048583984375 * a, 86.6805419921875 * a, 223.048583984375 * a, 74.6805419921875 * a);
                ret[b[238]]();
                equal(ret, args[3], args[4], 6 * a);
                ret[b[33]]();
                ret[b[150]](184.048583984375 * a, 69.1805419921875 * a);
                chroma(ret, -40 * a, -28.5 * a, 80 * a, 57 * a, 10 * a);
                ret[b[210]]();
                equal(ret, args[1], args[2], 4 * a);
                ret[b[19]]();
                ret[b[253]] = 'round';
                ret[b[4]] = 'round';
                ret[b[224]](185.048583984375 * a, 61.6805419921875 * a);
                ret[b[62]](145.048583984375 * a, 59.6805419921875 * a, 138.048583984375 * a, 41.6805419921875 * a, 148.048583984375 * a, 33.6805419921875 * a);
                ret[b[62]](169.048583984375 * a, 17.6805419921875 * a, 194.048583984375 * a, 20.6805419921875 * a, 210.048583984375 * a, 27.6805419921875 * a);
                ret[b[62]](234.048583984375 * a, 40.6805419921875 * a, 225.048583984375 * a, 57.6805419921875 * a, 186.048583984375 * a, 61.6805419921875 * a);
                ret[b[238]]();
                equal(ret, args[1], args[2], 6 * a);
                ret[b[33]]();
                ret[b[150]](183.548583984375 * a, 119.6805419921875 * a);
                chroma(ret, -121.5 * a, -45 * a, 243 * a, 90 * a, 40 * a);
                ret[b[210]]();
                equal(ret, args[5], args[4], 6 * a);
                ret[b[33]]();
                ret[b[150]](183.048583984375 * a, 155.6805419921875 * a);
                chroma(ret, -121 * a, -52 * a, 242 * a, 104 * a, 40 * a);
                ret[b[210]]();
                equal(ret, args[3], args[4], 6 * a);
                ret[b[33]]();
                ret[b[150]](183.048583984375 * a, 205.1805419921875 * a);
                chroma(ret, -121 * a, -50.5 * a, 242 * a, 101 * a, 40 * a);
                ret[b[210]]();
                equal(ret, args[6], args[4], 6 * a);
                ret[b[7]] = 'destination-out';
                ret[b[33]]();
                ret[b[150]](185.048583984375 * a, 204.1805419921875 * a);
                chroma(ret, -100 * a, -34.5 * a, 200 * a, 69 * a, 40 * a);
                ret[b[210]]();
                equal(ret, args[7], args[8], 6 * a);
                ret[b[7]] = 'source-over';
                ret[b[277]] = 0.5;
                ret[b[33]]();
                ret[b[150]](185.048583984375 * a, 204.1805419921875 * a);
                chroma(ret, -100 * a, -34.5 * a, 200 * a, 69 * a, 40 * a);
                ret[b[210]]();
                equal(ret, args[7], args[8], 6 * a);
                ret[b[277]] = 1;
                ret[b[33]]();
                callback(ret, 185.048583984375 * a, 257.6805419921875 * a, 27.018512172212592 * a);
                equal(ret, args[3], args[4], 6 * a);
                ret[b[210]]();
                return buffer;
            }
        function horde_makeCanvas(hidden, id, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var canvas = document('canvas');
                var clone = canvas[b[9]]('2d');
                canvas[b[187]] = 220 * hidden;
                canvas[b[236]] = 180 * hidden;
                clone[b[277]] = id ? 0.5 : 1;
                clone[b[150]](-90 * hidden, -150 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](104 * hidden, 237.8000030517578 * hidden);
                clone[b[62]](110 * hidden, 237.8000030517578 * hidden, 110 * hidden, 237.8000030517578 * hidden, 116 * hidden, 237.8000030517578 * hidden);
                clone[b[62]](116 * hidden, 241.8000030517578 * hidden, 116 * hidden, 241.8000030517578 * hidden, 116 * hidden, 245.8000030517578 * hidden);
                clone[b[62]](115 * hidden, 245.3000030517578 * hidden, 115 * hidden, 245.3000030517578 * hidden, 114 * hidden, 244.8000030517578 * hidden);
                clone[b[62]](109.5 * hidden, 244.8000030517578 * hidden, 109.5 * hidden, 244.8000030517578 * hidden, 105 * hidden, 244.8000030517578 * hidden);
                clone[b[238]]();
                equal(clone, testCase[5], testCase[5], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](115 * hidden, 211.20000457763672 * hidden);
                clone[b[62]](106 * hidden, 216.20000457763672 * hidden, 101 * hidden, 234.20000457763672 * hidden, 102 * hidden, 241.20000457763672 * hidden);
                clone[b[62]](102 * hidden, 260.2000045776367 * hidden, 115 * hidden, 269.2000045776367 * hidden, 115 * hidden, 269.2000045776367 * hidden);
                clone[b[62]](116 * hidden, 265.2000045776367 * hidden, 115.5 * hidden, 265.2000045776367 * hidden, 116 * hidden, 261.2000045776367 * hidden);
                clone[b[62]](112 * hidden, 264 * hidden, 108 * hidden, 254 * hidden, 106 * hidden, 242 * hidden);
                clone[b[62]](105 * hidden, 232 * hidden, 110 * hidden, 222 * hidden, 115 * hidden, 218 * hidden);
                clone[b[62]](116 * hidden, 216.75 * hidden, 115.5 * hidden, 217.375 * hidden, 116 * hidden, 216.75 * hidden);
                clone[b[238]]();
                equal(clone, testCase[5], testCase[5], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](120 * hidden, 207 * hidden);
                clone[b[62]](115 * hidden, 206 * hidden, 114 * hidden, 209 * hidden, 114 * hidden, 211 * hidden);
                clone[b[62]](114 * hidden, 268 * hidden, 114 * hidden, 241 * hidden, 114 * hidden, 271 * hidden);
                clone[b[62]](115 * hidden, 276 * hidden, 118 * hidden, 276 * hidden, 120 * hidden, 276 * hidden);
                clone[b[62]](122 * hidden, 273 * hidden, 120.5 * hidden, 274.5 * hidden, 121 * hidden, 273 * hidden);
                clone[b[62]](121 * hidden, 241 * hidden, 121 * hidden, 241 * hidden, 121 * hidden, 209 * hidden);
                clone[b[238]]();
                equal(clone, testCase[4], testCase[4], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](284 * hidden, 238 * hidden);
                clone[b[62]](289.5 * hidden, 238 * hidden, 289.5 * hidden, 238 * hidden, 295 * hidden, 238 * hidden);
                clone[b[62]](295 * hidden, 241.5 * hidden, 295 * hidden, 241.5 * hidden, 295 * hidden, 245 * hidden);
                clone[b[62]](289.5 * hidden, 245 * hidden, 289.5 * hidden, 245 * hidden, 284 * hidden, 245 * hidden);
                clone[b[238]]();
                equal(clone, testCase[4], testCase[4], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](283 * hidden, 211 * hidden);
                clone[b[62]](293 * hidden, 216 * hidden, 297 * hidden, 231 * hidden, 297 * hidden, 241 * hidden);
                clone[b[62]](298 * hidden, 254 * hidden, 290 * hidden, 265 * hidden, 284 * hidden, 269 * hidden);
                clone[b[62]](283 * hidden, 266 * hidden, 283.5 * hidden, 266 * hidden, 283 * hidden, 263 * hidden);
                clone[b[62]](290 * hidden, 260 * hidden, 292 * hidden, 251 * hidden, 293 * hidden, 242 * hidden);
                clone[b[62]](292 * hidden, 223 * hidden, 289 * hidden, 224 * hidden, 284 * hidden, 218 * hidden);
                clone[b[238]]();
                equal(clone, testCase[4], testCase[4], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](280 * hidden, 206 * hidden);
                clone[b[62]](284 * hidden, 206 * hidden, 285 * hidden, 208 * hidden, 285 * hidden, 211 * hidden);
                clone[b[62]](285 * hidden, 241.5 * hidden, 285 * hidden, 241.5 * hidden, 285 * hidden, 272 * hidden);
                clone[b[62]](284 * hidden, 275 * hidden, 284 * hidden, 275 * hidden, 280 * hidden, 275 * hidden);
                clone[b[62]](279 * hidden, 273.5 * hidden, 279 * hidden, 273.5 * hidden, 278 * hidden, 272 * hidden);
                clone[b[62]](278 * hidden, 240.5 * hidden, 278 * hidden, 240.5 * hidden, 278 * hidden, 209 * hidden);
                clone[b[238]]();
                equal(clone, testCase[4], testCase[4], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](138 * hidden, 298.40000915527344 * hidden);
                clone[b[62]](141 * hidden, 311.40000915527344 * hidden, 151 * hidden, 314.40000915527344 * hidden, 162 * hidden, 316.40000915527344 * hidden);
                clone[b[62]](224 * hidden, 316.40000915527344 * hidden, 200 * hidden, 315.90000915527344 * hidden, 238 * hidden, 315.40000915527344 * hidden);
                clone[b[62]](254 * hidden, 316.40000915527344 * hidden, 261 * hidden, 306.40000915527344 * hidden, 264 * hidden, 298.40000915527344 * hidden);
                clone[b[62]](255 * hidden, 304.40000915527344 * hidden, 250 * hidden, 306.40000915527344 * hidden, 244 * hidden, 306.40000915527344 * hidden);
                clone[b[62]](201 * hidden, 306.90000915527344 * hidden, 201 * hidden, 306.90000915527344 * hidden, 158 * hidden, 307.40000915527344 * hidden);
                clone[b[62]](150 * hidden, 306.40000915527344 * hidden, 148 * hidden, 306.40000915527344 * hidden, 139 * hidden, 300.40000915527344 * hidden);
                clone[b[238]]();
                equal(clone, testCase[4], testCase[4], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](161 * hidden, 177.5999984741211 * hidden);
                clone[b[62]](130 * hidden, 175.5999984741211 * hidden, 123 * hidden, 190.5999984741211 * hidden, 122 * hidden, 205.5999984741211 * hidden);
                clone[b[62]](121 * hidden, 277.5999984741211 * hidden, 122 * hidden, 242.5999984741211 * hidden, 122 * hidden, 279.5999984741211 * hidden);
                clone[b[62]](128 * hidden, 297.5999984741211 * hidden, 137 * hidden, 299.5999984741211 * hidden, 143 * hidden, 300.5999984741211 * hidden);
                clone[b[62]](163 * hidden, 301.0999984741211 * hidden, 163 * hidden, 301.0999984741211 * hidden, 183 * hidden, 301.5999984741211 * hidden);
                clone[b[62]](150 * hidden, 300.5999984741211 * hidden, 135 * hidden, 290.5999984741211 * hidden, 134 * hidden, 267.5999984741211 * hidden);
                clone[b[62]](133 * hidden, 245.5999984741211 * hidden, 146 * hidden, 235.5999984741211 * hidden, 164 * hidden, 235.5999984741211 * hidden);
                clone[b[62]](206 * hidden, 236.0999984741211 * hidden, 206 * hidden, 236.0999984741211 * hidden, 248 * hidden, 236.5999984741211 * hidden);
                clone[b[62]](266 * hidden, 243.5999984741211 * hidden, 268 * hidden, 259.5999984741211 * hidden, 267 * hidden, 266.5999984741211 * hidden);
                clone[b[62]](266 * hidden, 288.5999984741211 * hidden, 251 * hidden, 294.5999984741211 * hidden, 244 * hidden, 297.5999984741211 * hidden);
                clone[b[62]](228.5 * hidden, 299.5999984741211 * hidden, 228.5 * hidden, 299.5999984741211 * hidden, 213 * hidden, 301.5999984741211 * hidden);
                clone[b[62]](236 * hidden, 301.0999984741211 * hidden, 236 * hidden, 301.0999984741211 * hidden, 259 * hidden, 300.5999984741211 * hidden);
                clone[b[62]](272 * hidden, 295.5999984741211 * hidden, 277 * hidden, 288.5999984741211 * hidden, 278 * hidden, 271.5999984741211 * hidden);
                clone[b[62]](277.5 * hidden, 236.5999984741211 * hidden, 277.5 * hidden, 236.5999984741211 * hidden, 277 * hidden, 201.5999984741211 * hidden);
                clone[b[62]](276 * hidden, 186.5999984741211 * hidden, 265 * hidden, 178.5999984741211 * hidden, 254 * hidden, 177.5999984741211 * hidden);
                clone[b[62]](247.5 * hidden, 177.5999984741211 * hidden, 247.5 * hidden, 177.5999984741211 * hidden, 241 * hidden, 177.5999984741211 * hidden);
                clone[b[62]](255 * hidden, 202.5999984741211 * hidden, 214 * hidden, 217.5999984741211 * hidden, 201 * hidden, 215.5999984741211 * hidden);
                clone[b[62]](170 * hidden, 215.5999984741211 * hidden, 152 * hidden, 197.5999984741211 * hidden, 161 * hidden, 178.5999984741211 * hidden);
                clone[b[238]]();
                equal(clone, testCase[4], testCase[4], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](162 * hidden, 175.5999984741211 * hidden);
                clone[b[62]](153 * hidden, 176.0999984741211 * hidden, 153 * hidden, 176.0999984741211 * hidden, 144 * hidden, 176.5999984741211 * hidden);
                clone[b[62]](125 * hidden, 178.5999984741211 * hidden, 121 * hidden, 196.5999984741211 * hidden, 121 * hidden, 207.5999984741211 * hidden);
                clone[b[62]](121 * hidden, 243.20000076293945 * hidden, 121 * hidden, 243.20000076293945 * hidden, 121 * hidden, 278.8000030517578 * hidden);
                clone[b[62]](126 * hidden, 298.8000030517578 * hidden, 137 * hidden, 300.8000030517578 * hidden, 146 * hidden, 302.8000030517578 * hidden);
                clone[b[62]](200.5 * hidden, 302.8000030517578 * hidden, 200.5 * hidden, 302.8000030517578 * hidden, 255 * hidden, 302.8000030517578 * hidden);
                clone[b[62]](271 * hidden, 301.8000030517578 * hidden, 279 * hidden, 288.8000030517578 * hidden, 279 * hidden, 273.8000030517578 * hidden);
                clone[b[62]](279 * hidden, 236.8000030517578 * hidden, 279 * hidden, 236.8000030517578 * hidden, 279 * hidden, 199.8000030517578 * hidden);
                clone[b[62]](274 * hidden, 178.8000030517578 * hidden, 263 * hidden, 177.8000030517578 * hidden, 255 * hidden, 175.8000030517578 * hidden);
                clone[b[62]](248 * hidden, 175.8000030517578 * hidden, 248 * hidden, 175.8000030517578 * hidden, 241 * hidden, 175.8000030517578 * hidden);
                clone[b[62]](240 * hidden, 175.8000030517578 * hidden, 240 * hidden, 175.8000030517578 * hidden, 239 * hidden, 175.8000030517578 * hidden);
                clone[b[62]](254 * hidden, 200.8000030517578 * hidden, 222 * hidden, 211.8000030517578 * hidden, 202 * hidden, 212.8000030517578 * hidden);
                clone[b[62]](168 * hidden, 213.8000030517578 * hidden, 151 * hidden, 190.8000030517578 * hidden, 163 * hidden, 176.8000030517578 * hidden);
                clone[b[238]]();
                equal(clone, void 0, testCase[4], 6 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](198 * hidden, 161.4000015258789 * hidden);
                clone[b[62]](198 * hidden, 186.9000015258789 * hidden, 198 * hidden, 186.9000015258789 * hidden, 198 * hidden, 212.4000015258789 * hidden);
                clone[b[62]](201 * hidden, 212.4000015258789 * hidden, 201 * hidden, 212.4000015258789 * hidden, 204 * hidden, 212.4000015258789 * hidden);
                clone[b[62]](204 * hidden, 186.9000015258789 * hidden, 204 * hidden, 186.9000015258789 * hidden, 204 * hidden, 161.4000015258789 * hidden);
                clone[b[238]]();
                equal(clone, testCase[4], testCase[4], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](161 * hidden, 194 * hidden);
                clone[b[62]](188 * hidden, 169 * hidden, 231 * hidden, 179 * hidden, 241 * hidden, 194 * hidden);
                clone[b[62]](239.5 * hidden, 196 * hidden, 239.5 * hidden, 196 * hidden, 238 * hidden, 198 * hidden);
                clone[b[62]](221 * hidden, 179 * hidden, 182 * hidden, 182 * hidden, 165 * hidden, 198 * hidden);
                clone[b[238]]();
                equal(clone, testCase[4], testCase[4], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](157 * hidden, 188.80000019073486 * hidden);
                clone[b[62]](162 * hidden, 150.80000019073486 * hidden, 241 * hidden, 150.80000019073486 * hidden, 245 * hidden, 188.80000019073486 * hidden);
                clone[b[62]](242 * hidden, 224.80000019073486 * hidden, 162 * hidden, 228.80000019073486 * hidden, 157 * hidden, 188.80000019073486 * hidden);
                clone[b[62]](159 * hidden, 188.80000019073486 * hidden, 159 * hidden, 188.80000019073486 * hidden, 161 * hidden, 188.80000019073486 * hidden);
                clone[b[62]](168 * hidden, 216.80000019073486 * hidden, 231 * hidden, 218.80000019073486 * hidden, 241 * hidden, 188.80000019073486 * hidden);
                clone[b[62]](236 * hidden, 156.80000019073486 * hidden, 169 * hidden, 152.80000019073486 * hidden, 161 * hidden, 188.80000019073486 * hidden);
                clone[b[238]]();
                equal(clone, testCase[4], testCase[4], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](156 * hidden, 188 * hidden);
                clone[b[62]](160 * hidden, 164 * hidden, 183 * hidden, 159 * hidden, 201 * hidden, 158 * hidden);
                clone[b[62]](232 * hidden, 159 * hidden, 244 * hidden, 174 * hidden, 246 * hidden, 188 * hidden);
                clone[b[62]](245 * hidden, 212 * hidden, 213 * hidden, 219 * hidden, 201 * hidden, 218 * hidden);
                clone[b[62]](181 * hidden, 221 * hidden, 158 * hidden, 207 * hidden, 156 * hidden, 190 * hidden);
                clone[b[238]]();
                equal(clone, void 0, testCase[4], 6 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](162 * hidden, 189 * hidden);
                clone[b[62]](166 * hidden, 170 * hidden, 185 * hidden, 165 * hidden, 201 * hidden, 164 * hidden);
                clone[b[62]](227 * hidden, 165 * hidden, 240 * hidden, 178 * hidden, 239 * hidden, 188 * hidden);
                clone[b[62]](239 * hidden, 204 * hidden, 210 * hidden, 210 * hidden, 201 * hidden, 210 * hidden);
                clone[b[62]](182 * hidden, 211 * hidden, 166 * hidden, 200 * hidden, 162 * hidden, 190 * hidden);
                clone[b[238]]();
                equal(clone, void 0, testCase[4], 6 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](131 * hidden, 262 * hidden);
                clone[b[62]](136 * hidden, 241 * hidden, 144 * hidden, 236 * hidden, 158 * hidden, 233 * hidden);
                clone[b[62]](200.5 * hidden, 233 * hidden, 229 * hidden, 232 * hidden, 243 * hidden, 233 * hidden);
                clone[b[62]](259 * hidden, 235 * hidden, 267 * hidden, 248 * hidden, 269 * hidden, 260 * hidden);
                clone[b[62]](269 * hidden, 266.5 * hidden, 269 * hidden, 266.5 * hidden, 269 * hidden, 273 * hidden);
                clone[b[62]](265 * hidden, 290 * hidden, 251 * hidden, 297 * hidden, 242 * hidden, 298 * hidden);
                clone[b[62]](202 * hidden, 298 * hidden, 202 * hidden, 298 * hidden, 162 * hidden, 298 * hidden);
                clone[b[62]](148 * hidden, 298 * hidden, 136 * hidden, 289 * hidden, 132 * hidden, 273 * hidden);
                clone[b[62]](131.5 * hidden, 268 * hidden, 131.5 * hidden, 268 * hidden, 131 * hidden, 263 * hidden);
                clone[b[62]](135 * hidden, 263 * hidden, 135 * hidden, 263 * hidden, 139 * hidden, 263 * hidden);
                clone[b[62]](139 * hidden, 281 * hidden, 151 * hidden, 287 * hidden, 160 * hidden, 290 * hidden);
                clone[b[62]](200.5 * hidden, 290 * hidden, 200.5 * hidden, 290 * hidden, 241 * hidden, 290 * hidden);
                clone[b[62]](252 * hidden, 290 * hidden, 257 * hidden, 281 * hidden, 262 * hidden, 271 * hidden);
                clone[b[62]](261.5 * hidden, 267 * hidden, 261.5 * hidden, 267 * hidden, 261 * hidden, 263 * hidden);
                clone[b[62]](260 * hidden, 249 * hidden, 251 * hidden, 242 * hidden, 241 * hidden, 241 * hidden);
                clone[b[62]](240.5 * hidden, 240.5 * hidden, 240.5 * hidden, 240.5 * hidden, 240 * hidden, 240 * hidden);
                clone[b[62]](200 * hidden, 240 * hidden, 200 * hidden, 240 * hidden, 160 * hidden, 240 * hidden);
                clone[b[62]](145 * hidden, 244 * hidden, 142 * hidden, 250 * hidden, 139 * hidden, 264 * hidden);
                clone[b[238]]();
                equal(clone, testCase[4], testCase[4], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](130 * hidden, 264 * hidden);
                clone[b[62]](132 * hidden, 244 * hidden, 144 * hidden, 235 * hidden, 157 * hidden, 232 * hidden);
                clone[b[62]](245 * hidden, 232 * hidden, 201 * hidden, 232 * hidden, 245 * hidden, 232 * hidden);
                clone[b[62]](264 * hidden, 235 * hidden, 269 * hidden, 251 * hidden, 270 * hidden, 264 * hidden);
                clone[b[62]](272 * hidden, 291 * hidden, 248 * hidden, 299 * hidden, 242 * hidden, 299 * hidden);
                clone[b[62]](200 * hidden, 299 * hidden, 200 * hidden, 299 * hidden, 158 * hidden, 299 * hidden);
                clone[b[62]](139 * hidden, 298 * hidden, 130 * hidden, 276 * hidden, 130 * hidden, 265 * hidden);
                clone[b[238]]();
                equal(clone, void 0, testCase[4], 6 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](140 * hidden, 265.33333587646484 * hidden);
                clone[b[62]](141 * hidden, 250.33333587646484 * hidden, 148 * hidden, 244.33333587646484 * hidden, 160 * hidden, 241.33333587646484 * hidden);
                clone[b[62]](200 * hidden, 241.33333587646484 * hidden, 200 * hidden, 241.33333587646484 * hidden, 240 * hidden, 241.33333587646484 * hidden);
                clone[b[62]](256 * hidden, 243.33333587646484 * hidden, 260 * hidden, 255.33333587646484 * hidden, 260 * hidden, 265.33333587646484 * hidden);
                clone[b[62]](261 * hidden, 281.33333587646484 * hidden, 247 * hidden, 289.33333587646484 * hidden, 240 * hidden, 289.33333587646484 * hidden);
                clone[b[62]](161 * hidden, 289.33333587646484 * hidden, 200.5 * hidden, 289.33333587646484 * hidden, 161 * hidden, 289.33333587646484 * hidden);
                clone[b[62]](149 * hidden, 288.33333587646484 * hidden, 142 * hidden, 278.33333587646484 * hidden, 140 * hidden, 266.33333587646484 * hidden);
                clone[b[238]]();
                equal(clone, void 0, testCase[4], 6 * hidden);
                clone[b[277]] = 0.5;
                clone[b[228]](1, 1);
                clone[b[150]](105 * hidden, 155 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](59.27557373046875 * hidden, 20.406280517578125 * hidden);
                clone[b[62]](74.27557373046875 * hidden, 5.406280517578125 * hidden, 90.27557373046875 * hidden, 6.406280517578125 * hidden, 99.27557373046875 * hidden, 5.406280517578125 * hidden);
                clone[b[62]](120.27557373046875 * hidden, 5.406280517578125 * hidden, 126.27557373046875 * hidden, 10.406280517578125 * hidden, 136.27557373046875 * hidden, 20.406280517578125 * hidden);
                clone[b[62]](157.77557373046875 * hidden, 37.906280517578125 * hidden, 157.77557373046875 * hidden, 37.906280517578125 * hidden, 179.27557373046875 * hidden, 55.406280517578125 * hidden);
                clone[b[62]](190.27557373046875 * hidden, 63.406280517578125 * hidden, 192.27557373046875 * hidden, 77.40628051757812 * hidden, 189.27557373046875 * hidden, 91.40628051757812 * hidden);
                clone[b[62]](183.27557373046875 * hidden, 108.40628051757812 * hidden, 176.27557373046875 * hidden, 110.40628051757812 * hidden, 169.27557373046875 * hidden, 118.40628051757812 * hidden);
                clone[b[62]](152.27557373046875 * hidden, 133.40628051757812 * hidden, 152.27557373046875 * hidden, 133.40628051757812 * hidden, 135.27557373046875 * hidden, 148.40628051757812 * hidden);
                clone[b[62]](87.27557373046875 * hidden, 143.40628051757812 * hidden, 87.27557373046875 * hidden, 143.40628051757812 * hidden, 39.27557373046875 * hidden, 138.40628051757812 * hidden);
                clone[b[62]](26.77557373046875 * hidden, 123.40628051757812 * hidden, 26.77557373046875 * hidden, 123.40628051757812 * hidden, 14.27557373046875 * hidden, 108.40628051757812 * hidden);
                clone[b[62]](2.27557373046875 * hidden, 95.40628051757812 * hidden, 2.27557373046875 * hidden, 92.40628051757812 * hidden, 3.27557373046875 * hidden, 83.40628051757812 * hidden);
                clone[b[62]](4.27557373046875 * hidden, 63.406280517578125 * hidden, 12.27557373046875 * hidden, 60.406280517578125 * hidden, 24.27557373046875 * hidden, 40.406280517578125 * hidden);
                clone[b[238]]();
                equal(clone, testCase[5], testCase[5], 4 * hidden);
                clone[b[277]] = 1;
                clone[b[150]](-110 * hidden, -155 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](104 * hidden, 237.8000030517578 * hidden);
                clone[b[62]](110 * hidden, 237.8000030517578 * hidden, 110 * hidden, 237.8000030517578 * hidden, 116 * hidden, 237.8000030517578 * hidden);
                clone[b[62]](116 * hidden, 241.8000030517578 * hidden, 116 * hidden, 241.8000030517578 * hidden, 116 * hidden, 245.8000030517578 * hidden);
                clone[b[62]](115 * hidden, 245.3000030517578 * hidden, 115 * hidden, 245.3000030517578 * hidden, 114 * hidden, 244.8000030517578 * hidden);
                clone[b[62]](109.5 * hidden, 244.8000030517578 * hidden, 109.5 * hidden, 244.8000030517578 * hidden, 105 * hidden, 244.8000030517578 * hidden);
                clone[b[238]]();
                equal(clone, testCase[0], testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](115 * hidden, 211.20000457763672 * hidden);
                clone[b[62]](106 * hidden, 216.20000457763672 * hidden, 101 * hidden, 234.20000457763672 * hidden, 102 * hidden, 241.20000457763672 * hidden);
                clone[b[62]](102 * hidden, 260.2000045776367 * hidden, 115 * hidden, 269.2000045776367 * hidden, 115 * hidden, 269.2000045776367 * hidden);
                clone[b[62]](116 * hidden, 265.2000045776367 * hidden, 115.5 * hidden, 265.2000045776367 * hidden, 116 * hidden, 261.2000045776367 * hidden);
                clone[b[62]](112 * hidden, 264 * hidden, 108 * hidden, 254 * hidden, 106 * hidden, 242 * hidden);
                clone[b[62]](105 * hidden, 232 * hidden, 110 * hidden, 222 * hidden, 115 * hidden, 218 * hidden);
                clone[b[62]](116 * hidden, 216.75 * hidden, 115.5 * hidden, 217.375 * hidden, 116 * hidden, 216.75 * hidden);
                clone[b[238]]();
                equal(clone, testCase[0], testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](120 * hidden, 207 * hidden);
                clone[b[62]](115 * hidden, 206 * hidden, 114 * hidden, 209 * hidden, 114 * hidden, 211 * hidden);
                clone[b[62]](114 * hidden, 268 * hidden, 114 * hidden, 241 * hidden, 114 * hidden, 271 * hidden);
                clone[b[62]](115 * hidden, 276 * hidden, 118 * hidden, 276 * hidden, 120 * hidden, 276 * hidden);
                clone[b[62]](122 * hidden, 273 * hidden, 120.5 * hidden, 274.5 * hidden, 121 * hidden, 273 * hidden);
                clone[b[62]](121 * hidden, 241 * hidden, 121 * hidden, 241 * hidden, 121 * hidden, 209 * hidden);
                clone[b[238]]();
                equal(clone, testCase[0], testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](284 * hidden, 238 * hidden);
                clone[b[62]](289.5 * hidden, 238 * hidden, 289.5 * hidden, 238 * hidden, 295 * hidden, 238 * hidden);
                clone[b[62]](295 * hidden, 241.5 * hidden, 295 * hidden, 241.5 * hidden, 295 * hidden, 245 * hidden);
                clone[b[62]](289.5 * hidden, 245 * hidden, 289.5 * hidden, 245 * hidden, 284 * hidden, 245 * hidden);
                clone[b[238]]();
                equal(clone, testCase[0], testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](283 * hidden, 211 * hidden);
                clone[b[62]](293 * hidden, 216 * hidden, 297 * hidden, 231 * hidden, 297 * hidden, 241 * hidden);
                clone[b[62]](298 * hidden, 254 * hidden, 290 * hidden, 265 * hidden, 284 * hidden, 269 * hidden);
                clone[b[62]](283 * hidden, 266 * hidden, 283.5 * hidden, 266 * hidden, 283 * hidden, 263 * hidden);
                clone[b[62]](290 * hidden, 260 * hidden, 292 * hidden, 251 * hidden, 293 * hidden, 242 * hidden);
                clone[b[62]](292 * hidden, 223 * hidden, 289 * hidden, 224 * hidden, 284 * hidden, 218 * hidden);
                clone[b[238]]();
                equal(clone, testCase[0], testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](280 * hidden, 206 * hidden);
                clone[b[62]](284 * hidden, 206 * hidden, 285 * hidden, 208 * hidden, 285 * hidden, 211 * hidden);
                clone[b[62]](285 * hidden, 241.5 * hidden, 285 * hidden, 241.5 * hidden, 285 * hidden, 272 * hidden);
                clone[b[62]](284 * hidden, 275 * hidden, 284 * hidden, 275 * hidden, 280 * hidden, 275 * hidden);
                clone[b[62]](279 * hidden, 273.5 * hidden, 279 * hidden, 273.5 * hidden, 278 * hidden, 272 * hidden);
                clone[b[62]](278 * hidden, 240.5 * hidden, 278 * hidden, 240.5 * hidden, 278 * hidden, 209 * hidden);
                clone[b[238]]();
                equal(clone, testCase[0], testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](138 * hidden, 298.40000915527344 * hidden);
                clone[b[62]](141 * hidden, 311.40000915527344 * hidden, 151 * hidden, 314.40000915527344 * hidden, 162 * hidden, 316.40000915527344 * hidden);
                clone[b[62]](224 * hidden, 316.40000915527344 * hidden, 200 * hidden, 315.90000915527344 * hidden, 238 * hidden, 315.40000915527344 * hidden);
                clone[b[62]](254 * hidden, 316.40000915527344 * hidden, 261 * hidden, 306.40000915527344 * hidden, 264 * hidden, 298.40000915527344 * hidden);
                clone[b[62]](255 * hidden, 304.40000915527344 * hidden, 250 * hidden, 306.40000915527344 * hidden, 244 * hidden, 306.40000915527344 * hidden);
                clone[b[62]](201 * hidden, 306.90000915527344 * hidden, 201 * hidden, 306.90000915527344 * hidden, 158 * hidden, 307.40000915527344 * hidden);
                clone[b[62]](150 * hidden, 306.40000915527344 * hidden, 148 * hidden, 306.40000915527344 * hidden, 139 * hidden, 300.40000915527344 * hidden);
                clone[b[238]]();
                equal(clone, testCase[0], testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](161 * hidden, 177.5999984741211 * hidden);
                clone[b[62]](130 * hidden, 175.5999984741211 * hidden, 123 * hidden, 190.5999984741211 * hidden, 122 * hidden, 205.5999984741211 * hidden);
                clone[b[62]](121 * hidden, 277.5999984741211 * hidden, 122 * hidden, 242.5999984741211 * hidden, 122 * hidden, 279.5999984741211 * hidden);
                clone[b[62]](128 * hidden, 297.5999984741211 * hidden, 137 * hidden, 299.5999984741211 * hidden, 143 * hidden, 300.5999984741211 * hidden);
                clone[b[62]](163 * hidden, 301.0999984741211 * hidden, 163 * hidden, 301.0999984741211 * hidden, 183 * hidden, 301.5999984741211 * hidden);
                clone[b[62]](150 * hidden, 300.5999984741211 * hidden, 135 * hidden, 290.5999984741211 * hidden, 134 * hidden, 267.5999984741211 * hidden);
                clone[b[62]](133 * hidden, 245.5999984741211 * hidden, 146 * hidden, 235.5999984741211 * hidden, 164 * hidden, 235.5999984741211 * hidden);
                clone[b[62]](206 * hidden, 236.0999984741211 * hidden, 206 * hidden, 236.0999984741211 * hidden, 248 * hidden, 236.5999984741211 * hidden);
                clone[b[62]](266 * hidden, 243.5999984741211 * hidden, 268 * hidden, 259.5999984741211 * hidden, 267 * hidden, 266.5999984741211 * hidden);
                clone[b[62]](266 * hidden, 288.5999984741211 * hidden, 251 * hidden, 294.5999984741211 * hidden, 244 * hidden, 297.5999984741211 * hidden);
                clone[b[62]](228.5 * hidden, 299.5999984741211 * hidden, 228.5 * hidden, 299.5999984741211 * hidden, 213 * hidden, 301.5999984741211 * hidden);
                clone[b[62]](236 * hidden, 301.0999984741211 * hidden, 236 * hidden, 301.0999984741211 * hidden, 259 * hidden, 300.5999984741211 * hidden);
                clone[b[62]](272 * hidden, 295.5999984741211 * hidden, 277 * hidden, 288.5999984741211 * hidden, 278 * hidden, 271.5999984741211 * hidden);
                clone[b[62]](277.5 * hidden, 236.5999984741211 * hidden, 277.5 * hidden, 236.5999984741211 * hidden, 277 * hidden, 201.5999984741211 * hidden);
                clone[b[62]](276 * hidden, 186.5999984741211 * hidden, 265 * hidden, 178.5999984741211 * hidden, 254 * hidden, 177.5999984741211 * hidden);
                clone[b[62]](247.5 * hidden, 177.5999984741211 * hidden, 247.5 * hidden, 177.5999984741211 * hidden, 241 * hidden, 177.5999984741211 * hidden);
                clone[b[62]](255 * hidden, 202.5999984741211 * hidden, 214 * hidden, 217.5999984741211 * hidden, 201 * hidden, 215.5999984741211 * hidden);
                clone[b[62]](170 * hidden, 215.5999984741211 * hidden, 152 * hidden, 197.5999984741211 * hidden, 161 * hidden, 178.5999984741211 * hidden);
                clone[b[238]]();
                equal(clone, testCase[2], testCase[2], 4 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](162 * hidden, 175.5999984741211 * hidden);
                clone[b[62]](153 * hidden, 176.0999984741211 * hidden, 153 * hidden, 176.0999984741211 * hidden, 144 * hidden, 176.5999984741211 * hidden);
                clone[b[62]](125 * hidden, 178.5999984741211 * hidden, 121 * hidden, 196.5999984741211 * hidden, 121 * hidden, 207.5999984741211 * hidden);
                clone[b[62]](121 * hidden, 243.20000076293945 * hidden, 121 * hidden, 243.20000076293945 * hidden, 121 * hidden, 278.8000030517578 * hidden);
                clone[b[62]](126 * hidden, 298.8000030517578 * hidden, 137 * hidden, 300.8000030517578 * hidden, 146 * hidden, 302.8000030517578 * hidden);
                clone[b[62]](200.5 * hidden, 302.8000030517578 * hidden, 200.5 * hidden, 302.8000030517578 * hidden, 255 * hidden, 302.8000030517578 * hidden);
                clone[b[62]](271 * hidden, 301.8000030517578 * hidden, 279 * hidden, 288.8000030517578 * hidden, 279 * hidden, 273.8000030517578 * hidden);
                clone[b[62]](279 * hidden, 236.8000030517578 * hidden, 279 * hidden, 236.8000030517578 * hidden, 279 * hidden, 199.8000030517578 * hidden);
                clone[b[62]](274 * hidden, 178.8000030517578 * hidden, 263 * hidden, 177.8000030517578 * hidden, 255 * hidden, 175.8000030517578 * hidden);
                clone[b[62]](248 * hidden, 175.8000030517578 * hidden, 248 * hidden, 175.8000030517578 * hidden, 241 * hidden, 175.8000030517578 * hidden);
                clone[b[62]](240 * hidden, 175.8000030517578 * hidden, 240 * hidden, 175.8000030517578 * hidden, 239 * hidden, 175.8000030517578 * hidden);
                clone[b[62]](254 * hidden, 200.8000030517578 * hidden, 222 * hidden, 211.8000030517578 * hidden, 202 * hidden, 212.8000030517578 * hidden);
                clone[b[62]](168 * hidden, 213.8000030517578 * hidden, 151 * hidden, 190.8000030517578 * hidden, 163 * hidden, 176.8000030517578 * hidden);
                clone[b[238]]();
                equal(clone, void 0, testCase[3], 6 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](198 * hidden, 161.4000015258789 * hidden);
                clone[b[62]](198 * hidden, 186.9000015258789 * hidden, 198 * hidden, 186.9000015258789 * hidden, 198 * hidden, 212.4000015258789 * hidden);
                clone[b[62]](201 * hidden, 212.4000015258789 * hidden, 201 * hidden, 212.4000015258789 * hidden, 204 * hidden, 212.4000015258789 * hidden);
                clone[b[62]](204 * hidden, 186.9000015258789 * hidden, 204 * hidden, 186.9000015258789 * hidden, 204 * hidden, 161.4000015258789 * hidden);
                clone[b[238]]();
                equal(clone, testCase[0], testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](161 * hidden, 194 * hidden);
                clone[b[62]](188 * hidden, 169 * hidden, 231 * hidden, 179 * hidden, 241 * hidden, 194 * hidden);
                clone[b[62]](239.5 * hidden, 196 * hidden, 239.5 * hidden, 196 * hidden, 238 * hidden, 198 * hidden);
                clone[b[62]](221 * hidden, 179 * hidden, 182 * hidden, 182 * hidden, 165 * hidden, 198 * hidden);
                clone[b[238]]();
                equal(clone, testCase[0], testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](157 * hidden, 188.80000019073486 * hidden);
                clone[b[62]](162 * hidden, 150.80000019073486 * hidden, 241 * hidden, 150.80000019073486 * hidden, 245 * hidden, 188.80000019073486 * hidden);
                clone[b[62]](242 * hidden, 224.80000019073486 * hidden, 162 * hidden, 228.80000019073486 * hidden, 157 * hidden, 188.80000019073486 * hidden);
                clone[b[62]](159 * hidden, 188.80000019073486 * hidden, 159 * hidden, 188.80000019073486 * hidden, 161 * hidden, 188.80000019073486 * hidden);
                clone[b[62]](168 * hidden, 216.80000019073486 * hidden, 231 * hidden, 218.80000019073486 * hidden, 241 * hidden, 188.80000019073486 * hidden);
                clone[b[62]](236 * hidden, 156.80000019073486 * hidden, 169 * hidden, 152.80000019073486 * hidden, 161 * hidden, 188.80000019073486 * hidden);
                clone[b[238]]();
                equal(clone, testCase[0], testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](156 * hidden, 188 * hidden);
                clone[b[62]](160 * hidden, 164 * hidden, 183 * hidden, 159 * hidden, 201 * hidden, 158 * hidden);
                clone[b[62]](232 * hidden, 159 * hidden, 244 * hidden, 174 * hidden, 246 * hidden, 188 * hidden);
                clone[b[62]](245 * hidden, 212 * hidden, 213 * hidden, 219 * hidden, 201 * hidden, 218 * hidden);
                clone[b[62]](181 * hidden, 221 * hidden, 158 * hidden, 207 * hidden, 156 * hidden, 190 * hidden);
                clone[b[238]]();
                equal(clone, void 0, testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](162 * hidden, 189 * hidden);
                clone[b[62]](166 * hidden, 170 * hidden, 185 * hidden, 165 * hidden, 201 * hidden, 164 * hidden);
                clone[b[62]](227 * hidden, 165 * hidden, 240 * hidden, 178 * hidden, 239 * hidden, 188 * hidden);
                clone[b[62]](239 * hidden, 204 * hidden, 210 * hidden, 210 * hidden, 201 * hidden, 210 * hidden);
                clone[b[62]](182 * hidden, 211 * hidden, 166 * hidden, 200 * hidden, 162 * hidden, 190 * hidden);
                clone[b[238]]();
                equal(clone, void 0, testCase[1], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](131 * hidden, 262 * hidden);
                clone[b[62]](136 * hidden, 241 * hidden, 144 * hidden, 236 * hidden, 158 * hidden, 233 * hidden);
                clone[b[62]](200.5 * hidden, 233 * hidden, 229 * hidden, 232 * hidden, 243 * hidden, 233 * hidden);
                clone[b[62]](259 * hidden, 235 * hidden, 267 * hidden, 248 * hidden, 269 * hidden, 260 * hidden);
                clone[b[62]](269 * hidden, 266.5 * hidden, 269 * hidden, 266.5 * hidden, 269 * hidden, 273 * hidden);
                clone[b[62]](265 * hidden, 290 * hidden, 251 * hidden, 297 * hidden, 242 * hidden, 298 * hidden);
                clone[b[62]](202 * hidden, 298 * hidden, 202 * hidden, 298 * hidden, 162 * hidden, 298 * hidden);
                clone[b[62]](148 * hidden, 298 * hidden, 136 * hidden, 289 * hidden, 132 * hidden, 273 * hidden);
                clone[b[62]](131.5 * hidden, 268 * hidden, 131.5 * hidden, 268 * hidden, 131 * hidden, 263 * hidden);
                clone[b[62]](135 * hidden, 263 * hidden, 135 * hidden, 263 * hidden, 139 * hidden, 263 * hidden);
                clone[b[62]](139 * hidden, 281 * hidden, 151 * hidden, 287 * hidden, 160 * hidden, 290 * hidden);
                clone[b[62]](200.5 * hidden, 290 * hidden, 200.5 * hidden, 290 * hidden, 241 * hidden, 290 * hidden);
                clone[b[62]](252 * hidden, 290 * hidden, 257 * hidden, 281 * hidden, 262 * hidden, 271 * hidden);
                clone[b[62]](261.5 * hidden, 267 * hidden, 261.5 * hidden, 267 * hidden, 261 * hidden, 263 * hidden);
                clone[b[62]](260 * hidden, 249 * hidden, 251 * hidden, 242 * hidden, 241 * hidden, 241 * hidden);
                clone[b[62]](240.5 * hidden, 240.5 * hidden, 240.5 * hidden, 240.5 * hidden, 240 * hidden, 240 * hidden);
                clone[b[62]](200 * hidden, 240 * hidden, 200 * hidden, 240 * hidden, 160 * hidden, 240 * hidden);
                clone[b[62]](145 * hidden, 244 * hidden, 142 * hidden, 250 * hidden, 139 * hidden, 264 * hidden);
                clone[b[238]]();
                equal(clone, testCase[0], testCase[0], 2 * hidden);
                clone[b[19]]();
                clone[b[253]] = 'round';
                clone[b[4]] = 'round';
                clone[b[224]](130 * hidden, 264 * hidden);
                clone[b[62]](132 * hidden, 244 * hidden, 144 * hidden, 235 * hidden, 157 * hidden, 232 * hidden);
                clone[b[62]](245 * hidden, 232 * hidden, 201 * hidden, 232 * hidden, 245 * hidden, 232 * hidden);
                clone[b[62]](264 * hidden, 235 * hidden, 269 * hidden, 251 * hidden, 270 * hidden, 264 * hidden);
                clone[b[62]](272 * hidden, 291 * hidden, 248 * hidden, 299 * hidden, 242 * hidden, 299 * hidden);
                clone[b[62]](200 * hidden, 299 * hidden, 200 * hidden, 299 * hidden, 158 * hidden, 299 * hidden);
                clone[b[62]](139 * hidden, 298 * hidden, 130 * hidden, 276 * hidden, 130 * hidden, 265 * hidden);
                clone[b[238]]();
                equal(clone, void 0, testCase[1], 2 * hidden);
                return canvas;
            }
        function createArrow(a, item)
            /*Scope Closed:false | writes:true*/
            {
                var canvas = document('canvas');
                var c = canvas[b[9]]('2d');
                canvas[b[187]] = 243 * a;
                canvas[b[236]] = 172 * a;
                callback(c, 119.5 * a, 140.125 * a, 19 * a);
                equal(c, void 0, item[1], 5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](36.5 * a, 20.125 * a);
                c[b[62]](119.5 * a, 20.625 * a, 119.5 * a, 20.625 * a, 202.5 * a, 21.125 * a);
                c[b[62]](214.5 * a, 22.125 * a, 216.5 * a, 26.125 * a, 217.5 * a, 35.125 * a);
                c[b[62]](221 * a, 76.125 * a, 221 * a, 76.125 * a, 224.5 * a, 117.125 * a);
                c[b[62]](225.5 * a, 127.125 * a, 221.5 * a, 131.125 * a, 210.5 * a, 132.125 * a);
                c[b[62]](117.5 * a, 132.125 * a, 117.5 * a, 132.125 * a, 24.5 * a, 132.125 * a);
                c[b[62]](14.5 * a, 131.125 * a, 13.5 * a, 126.125 * a, 16.5 * a, 111.125 * a);
                c[b[62]](19.5 * a, 73.125 * a, 19.5 * a, 73.125 * a, 22.5 * a, 35.125 * a);
                c[b[62]](23.5 * a, 23.125 * a, 29.5 * a, 21.125 * a, 36.5 * a, 20.125 * a);
                c[b[238]]();
                equal(c, item[0], item[1], 4 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](15.5 * a, 138.625 * a);
                c[b[62]](120 * a, 138.625 * a, 120 * a, 138.625 * a, 224.5 * a, 138.625 * a);
                c[b[238]]();
                equal(c, void 0, item[2], 10 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](13.5 * a, 131.625 * a);
                c[b[62]](119.5 * a, 131.625 * a, 119.5 * a, 131.625 * a, 225.5 * a, 131.625 * a);
                c[b[238]]();
                equal(c, void 0, item[3], 10 * a);
                callback(c, 119.5 * a, 140.125 * a, 14.866068747318506 * a);
                equal(c, item[4], item[5], 4 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](106.5 * a, 146.625 * a);
                c[b[62]](116.5 * a, 137.625 * a, 118.5 * a, 136.625 * a, 123.5 * a, 138.625 * a);
                c[b[62]](131.5 * a, 145.625 * a, 133.5 * a, 148.625 * a, 127.5 * a, 152.625 * a);
                c[b[62]](115.5 * a, 158.625 * a, 111.5 * a, 153.625 * a, 106.5 * a, 147.625 * a);
                c[b[238]]();
                equal(c, item[6], item[7], 2 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](105.5 * a, 146.625 * a);
                c[b[62]](116.5 * a, 159.625 * a, 124.5 * a, 156.625 * a, 132.5 * a, 146.625 * a);
                equal(c, void 0, item[8], 5 * a);
                c[b[33]]();
                c[b[150]](75.5 * a, 80.125 * a);
                chroma(c, -39 * a, -40 * a, 78 * a, 78 * a, 10 * a);
                c[b[210]]();
                equal(c, item[9]);
                c[b[33]]();
                c[b[150]](167 * a, 80.125 * a);
                chroma(c, -38.5 * a, -39 * a, 78 * a, 78 * a, 10 * a);
                c[b[210]]();
                equal(c, item[9]);
                return canvas;
            }
        function runCase(n, data, options)
            /*Scope Closed:false | writes:true*/
            {
                data = document('canvas');
                var a = data[b[9]]('2d');
                data[b[187]] = 400 * n;
                data[b[236]] = 400 * n;
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](96.5 * n, 277.34375 * n);
                a[b[62]](197.5 * n, 259.84375 * n, 197.5 * n, 259.84375 * n, 298.5 * n, 242.34375 * n);
                a[b[62]](311.5 * n, 231.34375 * n, 307.5 * n, 168.34375 * n, 298.5 * n, 150.34375 * n);
                a[b[62]](198 * n, 170.34375 * n, 198 * n, 170.34375 * n, 97.5 * n, 190.34375 * n);
                a[b[238]]();
                equal(a, options[1], options[2], 12 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](98.5 * n, 214.34375 * n);
                a[b[62]](199 * n, 196.34375 * n, 199 * n, 196.34375 * n, 299.5 * n, 178.34375 * n);
                a[b[238]]();
                equal(a, void 0, options[2], 12 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](98.5 * n, 247.34375 * n);
                a[b[62]](201.5 * n, 229.34375 * n, 201.5 * n, 229.34375 * n, 304.5 * n, 211.34375 * n);
                a[b[238]]();
                equal(a, void 0, options[2], 12 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](97.5 * n, 189.34375 * n);
                a[b[62]](97 * n, 199.84375 * n, 97 * n, 199.84375 * n, 96.5 * n, 210.34375 * n);
                a[b[62]](110.5 * n, 204.34375 * n, 110.5 * n, 204.34375 * n, 124.5 * n, 198.34375 * n);
                a[b[62]](137.5 * n, 203.84375 * n, 137.5 * n, 203.84375 * n, 150.5 * n, 209.34375 * n);
                a[b[62]](172 * n, 197.84375 * n, 172 * n, 197.84375 * n, 193.5 * n, 186.34375 * n);
                a[b[62]](211.5 * n, 189.84375 * n, 211.5 * n, 189.84375 * n, 229.5 * n, 193.34375 * n);
                a[b[62]](240.5 * n, 193.34375 * n, 240.5 * n, 193.34375 * n, 251.5 * n, 193.34375 * n);
                a[b[62]](261 * n, 182.84375 * n, 261 * n, 182.84375 * n, 270.5 * n, 172.34375 * n);
                a[b[62]](287.5 * n, 169.34375 * n, 287.5 * n, 169.34375 * n, 304.5 * n, 166.34375 * n);
                a[b[62]](304.5 * n, 156.34375 * n, 300.5 * n, 145.34375 * n, 298.5 * n, 147.34375 * n);
                a[b[238]]();
                equal(a, options[3], options[4], 12 * n);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](300.5 * n, 147.34375 * n);
                a[b[62]](293.5 * n, 121.34375 * n, 278.5 * n, 106.34375 * n, 256.5 * n, 101.34375 * n);
                a[b[62]](176.5 * n, 145.34375 * n, 176.5 * n, 145.34375 * n, 96.5 * n, 189.34375 * n);
                a[b[238]]();
                equal(a, options[5], options[6], 12 * n);
                callback(a, 252.5 * n, 129.34375 * n, 18.027756377319946 * n);
                equal(a, options[7]);
                callback(a, 248.5 * n, 121.34375 * n, 8.246211251235321 * n);
                equal(a, options[8]);
                return data;
            }
        function isconnect(radius, x, y)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 400 * radius;
                hash[b[236]] = 400 * radius;
                ctx[b[277]] = x ? 0.5 : 1;
                ctx[b[150]](10 * radius, 5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](100.5 * radius, 126.34375 * radius);
                ctx[b[62]](151.5 * radius, 104.34375 * radius, 279.5 * radius, 188.34375 * radius, 297.5 * radius, 292.34375 * radius);
                ctx[b[62]](222.5 * radius, 307.34375 * radius, 106.5 * radius, 196.34375 * radius, 100.5 * radius, 127.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[0], y[0], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](106.5 * radius, 131.34375 * radius);
                ctx[b[62]](140.5 * radius, 142.34375 * radius, 225.5 * radius, 184.34375 * radius, 290.5 * radius, 287.34375 * radius);
                ctx[b[62]](270.5 * radius, 188.34375 * radius, 152.5 * radius, 118.34375 * radius, 107.5 * radius, 131.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](157.5 * radius, 137.34375 * radius);
                ctx[b[62]](161.5 * radius, 138.34375 * radius, 164.5 * radius, 140.34375 * radius, 168.5 * radius, 142.34375 * radius);
                ctx[b[62]](165.5 * radius, 156.34375 * radius, 141.5 * radius, 176.34375 * radius, 126.5 * radius, 179.34375 * radius);
                ctx[b[62]](123.5 * radius, 173.34375 * radius, 120.5 * radius, 169.34375 * radius, 120.5 * radius, 169.34375 * radius);
                ctx[b[62]](141.5 * radius, 161.34375 * radius, 156.5 * radius, 145.34375 * radius, 155.5 * radius, 136.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](196.5 * radius, 151.34375 * radius);
                ctx[b[62]](211.5 * radius, 158.34375 * radius, 224.5 * radius, 171.34375 * radius, 229.5 * radius, 176.34375 * radius);
                ctx[b[62]](246.5 * radius, 163.34375 * radius, 259.5 * radius, 166.34375 * radius, 272.5 * radius, 168.34375 * radius);
                ctx[b[62]](254.5 * radius, 146.34375 * radius, 214.5 * radius, 145.34375 * radius, 198.5 * radius, 151.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[0], y[0], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](154.5 * radius, 222.34375 * radius);
                ctx[b[62]](164.5 * radius, 234.34375 * radius, 173.5 * radius, 242.34375 * radius, 178.5 * radius, 245.34375 * radius);
                ctx[b[62]](174.5 * radius, 265.34375 * radius, 180.5 * radius, 274.34375 * radius, 186.5 * radius, 283.34375 * radius);
                ctx[b[62]](165.5 * radius, 277.34375 * radius, 151.5 * radius, 245.34375 * radius, 155.5 * radius, 224.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[0], y[0], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](279.5 * radius, 294.34375 * radius);
                ctx[b[62]](286.5 * radius, 285.84375 * radius, 286.5 * radius, 285.84375 * radius, 293.5 * radius, 277.34375 * radius);
                ctx[b[62]](315.5 * radius, 280.34375 * radius, 315.5 * radius, 280.34375 * radius, 337.5 * radius, 283.34375 * radius);
                ctx[b[62]](340.5 * radius, 311.34375 * radius, 317.5 * radius, 326.34375 * radius, 307.5 * radius, 331.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[0], y[0], 12 * radius);
                ctx[b[277]] = 1;
                ctx[b[150]](-10 * radius, -5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](100.5 * radius, 126.34375 * radius);
                ctx[b[62]](151.5 * radius, 104.34375 * radius, 279.5 * radius, 188.34375 * radius, 297.5 * radius, 292.34375 * radius);
                ctx[b[62]](222.5 * radius, 307.34375 * radius, 106.5 * radius, 196.34375 * radius, 100.5 * radius, 127.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[1], y[2], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](106.5 * radius, 131.34375 * radius);
                ctx[b[62]](140.5 * radius, 142.34375 * radius, 225.5 * radius, 184.34375 * radius, 290.5 * radius, 287.34375 * radius);
                ctx[b[62]](270.5 * radius, 188.34375 * radius, 152.5 * radius, 118.34375 * radius, 107.5 * radius, 131.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](157.5 * radius, 137.34375 * radius);
                ctx[b[62]](161.5 * radius, 138.34375 * radius, 164.5 * radius, 140.34375 * radius, 168.5 * radius, 142.34375 * radius);
                ctx[b[62]](165.5 * radius, 156.34375 * radius, 141.5 * radius, 176.34375 * radius, 126.5 * radius, 179.34375 * radius);
                ctx[b[62]](123.5 * radius, 173.34375 * radius, 120.5 * radius, 169.34375 * radius, 120.5 * radius, 169.34375 * radius);
                ctx[b[62]](141.5 * radius, 161.34375 * radius, 156.5 * radius, 145.34375 * radius, 155.5 * radius, 136.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[4]);
                callback(ctx, 125.5 * radius, 140.34375 * radius, 11.180339887498949 * radius);
                equal(ctx, y[5]);
                callback(ctx, 122.5 * radius, 135.34375 * radius, 5.0990195135927845 * radius);
                equal(ctx, y[6]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](196.5 * radius, 151.34375 * radius);
                ctx[b[62]](211.5 * radius, 158.34375 * radius, 224.5 * radius, 171.34375 * radius, 229.5 * radius, 176.34375 * radius);
                ctx[b[62]](246.5 * radius, 163.34375 * radius, 259.5 * radius, 166.34375 * radius, 272.5 * radius, 168.34375 * radius);
                ctx[b[62]](254.5 * radius, 146.34375 * radius, 214.5 * radius, 145.34375 * radius, 198.5 * radius, 151.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[7], y[8], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](154.5 * radius, 222.34375 * radius);
                ctx[b[62]](164.5 * radius, 234.34375 * radius, 173.5 * radius, 242.34375 * radius, 178.5 * radius, 245.34375 * radius);
                ctx[b[62]](174.5 * radius, 265.34375 * radius, 180.5 * radius, 274.34375 * radius, 186.5 * radius, 283.34375 * radius);
                ctx[b[62]](165.5 * radius, 277.34375 * radius, 151.5 * radius, 245.34375 * radius, 155.5 * radius, 224.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[7], y[8], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](279.5 * radius, 294.34375 * radius);
                ctx[b[62]](286.5 * radius, 285.84375 * radius, 286.5 * radius, 285.84375 * radius, 293.5 * radius, 277.34375 * radius);
                ctx[b[62]](315.5 * radius, 280.34375 * radius, 315.5 * radius, 280.34375 * radius, 337.5 * radius, 283.34375 * radius);
                ctx[b[62]](340.5 * radius, 311.34375 * radius, 317.5 * radius, 326.34375 * radius, 307.5 * radius, 331.34375 * radius);
                ctx[b[238]]();
                equal(ctx, y[7], y[8], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](296.5 * radius, 287.34375 * radius);
                ctx[b[62]](311.5 * radius, 291.34375 * radius, 311.5 * radius, 291.34375 * radius, 326.5 * radius, 295.34375 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, y[9], 6 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](294.5 * radius, 289.34375 * radius);
                ctx[b[62]](308.5 * radius, 297.34375 * radius, 308.5 * radius, 297.34375 * radius, 322.5 * radius, 305.34375 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, y[9], 6 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](294.5 * radius, 291.34375 * radius);
                ctx[b[62]](304 * radius, 303.34375 * radius, 304 * radius, 303.34375 * radius, 313.5 * radius, 315.34375 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, y[9], 6 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](226.5 * radius, 161.34375 * radius);
                ctx[b[62]](230.5 * radius, 160.34375 * radius, 236.5 * radius, 158.34375 * radius, 238.5 * radius, 161.34375 * radius);
                ctx[b[62]](238.5 * radius, 157.34375 * radius, 228.5 * radius, 159.34375 * radius, 227.5 * radius, 161.34375 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, y[9], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](167.5 * radius, 248.34375 * radius);
                ctx[b[62]](165.5 * radius, 251.34375 * radius, 168.5 * radius, 256.34375 * radius, 168.5 * radius, 253.34375 * radius);
                ctx[b[62]](166.5 * radius, 252.34375 * radius, 168.5 * radius, 246.34375 * radius, 166.5 * radius, 247.34375 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, y[9], 3 * radius);
                return hash;
            }
        function species2sourceDB_mapping(radius, length, args)
            /*Scope Closed:false | writes:true*/
            {
                var url = document('canvas');
                var ctx = url[b[9]]('2d');
                url[b[187]] = 309 * radius;
                url[b[236]] = 287 * radius;
                ctx[b[277]] = length ? 0.5 : 1;
                ctx[b[150]](10 * radius, 5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](34.5 * radius, 38.53125 * radius);
                ctx[b[62]](91.5 * radius, 30.53125 * radius, 138.5 * radius, 68.53125 * radius, 169.5 * radius, 93.53125 * radius);
                ctx[b[62]](208.5 * radius, 128.53125 * radius, 226.5 * radius, 157.53125 * radius, 233.5 * radius, 209.53125 * radius);
                ctx[b[62]](195.5 * radius, 218.53125 * radius, 138.5 * radius, 191.53125 * radius, 105.5 * radius, 157.53125 * radius);
                ctx[b[62]](54.5 * radius, 112.53125 * radius, 41.5 * radius, 80.53125 * radius, 33.5 * radius, 38.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](143.5 * radius, 74.53125 * radius);
                ctx[b[62]](164.5 * radius, 73.53125 * radius, 159 * radius, 74.53125 * radius, 174.5 * radius, 74.53125 * radius);
                ctx[b[62]](186 * radius, 86.53125 * radius, 186 * radius, 86.53125 * radius, 197.5 * radius, 98.53125 * radius);
                ctx[b[62]](186 * radius, 97.03125 * radius, 186 * radius, 97.03125 * radius, 174.5 * radius, 95.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](87.5 * radius, 142.53125 * radius);
                ctx[b[62]](92 * radius, 160.03125 * radius, 92 * radius, 160.03125 * radius, 96.5 * radius, 177.53125 * radius);
                ctx[b[62]](108 * radius, 181.53125 * radius, 108 * radius, 181.53125 * radius, 119.5 * radius, 185.53125 * radius);
                ctx[b[62]](116.5 * radius, 175.53125 * radius, 116.5 * radius, 175.53125 * radius, 113.5 * radius, 165.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](236.5 * radius, 189.53125 * radius);
                ctx[b[62]](274.5 * radius, 197.53125 * radius, 255.5 * radius, 194.03125 * radius, 274.5 * radius, 198.53125 * radius);
                ctx[b[62]](272.5 * radius, 236.53125 * radius, 261.5 * radius, 237.53125 * radius, 242.5 * radius, 248.53125 * radius);
                ctx[b[62]](230.5 * radius, 231.03125 * radius, 230.5 * radius, 231.03125 * radius, 218.5 * radius, 213.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[0], args[0], 10 * radius);
                ctx[b[277]] = 1;
                ctx[b[150]](-10 * radius, -5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](34.5 * radius, 38.53125 * radius);
                ctx[b[62]](91.5 * radius, 30.53125 * radius, 138.5 * radius, 68.53125 * radius, 169.5 * radius, 93.53125 * radius);
                ctx[b[62]](208.5 * radius, 128.53125 * radius, 226.5 * radius, 157.53125 * radius, 233.5 * radius, 209.53125 * radius);
                ctx[b[62]](195.5 * radius, 218.53125 * radius, 138.5 * radius, 191.53125 * radius, 105.5 * radius, 157.53125 * radius);
                ctx[b[62]](54.5 * radius, 112.53125 * radius, 41.5 * radius, 80.53125 * radius, 33.5 * radius, 38.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](143.5 * radius, 74.53125 * radius);
                ctx[b[62]](164.5 * radius, 73.53125 * radius, 159 * radius, 74.53125 * radius, 174.5 * radius, 74.53125 * radius);
                ctx[b[62]](186 * radius, 86.53125 * radius, 186 * radius, 86.53125 * radius, 197.5 * radius, 98.53125 * radius);
                ctx[b[62]](186 * radius, 97.03125 * radius, 186 * radius, 97.03125 * radius, 174.5 * radius, 95.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](87.5 * radius, 142.53125 * radius);
                ctx[b[62]](92 * radius, 160.03125 * radius, 92 * radius, 160.03125 * radius, 96.5 * radius, 177.53125 * radius);
                ctx[b[62]](108 * radius, 181.53125 * radius, 108 * radius, 181.53125 * radius, 119.5 * radius, 185.53125 * radius);
                ctx[b[62]](116.5 * radius, 175.53125 * radius, 116.5 * radius, 175.53125 * radius, 113.5 * radius, 165.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](236.5 * radius, 189.53125 * radius);
                ctx[b[62]](274.5 * radius, 197.53125 * radius, 255.5 * radius, 194.03125 * radius, 274.5 * radius, 198.53125 * radius);
                ctx[b[62]](272.5 * radius, 236.53125 * radius, 261.5 * radius, 237.53125 * radius, 242.5 * radius, 248.53125 * radius);
                ctx[b[62]](230.5 * radius, 231.03125 * radius, 230.5 * radius, 231.03125 * radius, 218.5 * radius, 213.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](109.5 * radius, 51.53125 * radius);
                ctx[b[62]](107.5 * radius, 92.53125 * radius, 91.5 * radius, 95.53125 * radius, 59.5 * radius, 101.53125 * radius);
                equal(ctx, args[1], args[2], 7 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](72.5 * radius, 51.53125 * radius);
                ctx[b[62]](71 * radius, 64.53125 * radius, 69.5 * radius, 76.53125 * radius, 69.5 * radius, 77.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 7 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](84.5 * radius, 63.53125 * radius);
                ctx[b[62]](70.5 * radius, 65.03125 * radius, 70.5 * radius, 65.03125 * radius, 56.5 * radius, 66.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 7 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](125.5 * radius, 84.53125 * radius);
                ctx[b[62]](125.5 * radius, 110.03125 * radius, 125.5 * radius, 110.03125 * radius, 125.5 * radius, 135.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 7 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](149.5 * radius, 108.53125 * radius);
                ctx[b[62]](150 * radius, 137.03125 * radius, 150 * radius, 137.03125 * radius, 150.5 * radius, 165.53125 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 7 * radius);
                return url;
            }
        function array_apply(a, f, args)
            /*Scope Closed:false | writes:true*/
            {
                var dst = document('canvas');
                var o = dst[b[9]]('2d');
                var w = 130 * a;
                var a2 = 142 * a;
                dst[b[187]] = w;
                dst[b[236]] = a2;
                o[b[150]](w / 2, a2 / 2 + 7 * a);
                o[b[277]] = f ? 0.5 : 1;
                callback(o, 0, 0, 60 * a);
                equal(o, args[0]);
                o[b[150]](0, -7 * a);
                o[b[277]] = 1;
                callback(o, 0, 0, 60 * a, 0);
                equal(o, args[1], args[2], 4 * a);
                callback(o, 0, 0, 40 * a);
                equal(o, args[3]);
                callback(o, 0, 0, 25 * a);
                equal(o, args[4], args[5], 8 * a);
                return dst;
            }
        function insert(d, test)
            /*Scope Closed:false | writes:true*/
            {
                var c = document('canvas');
                var a = c[b[9]]('2d');
                var r = 130 * d;
                var l = 142 * d;
                var p = r / 2;
                var index = l / 2;
                c[b[187]] = r;
                c[b[236]] = l;
                callback(a, p, index, 40 * d, 0);
                equal(a, void 0, test[0], 7 * d);
                callback(a, p, index, 30 * d, 0);
                equal(a, void 0, test[0], 7 * d);
                callback(a, p, index, 20 * d, 0);
                equal(a, test[0]);
                return c;
            }
        function check_map(ratio, data, test)
            /*Scope Closed:false | writes:true*/
            {
                var canvasData = document('canvas');
                var ctx = canvasData[b[9]]('2d');
                canvasData[b[187]] = 130 * ratio;
                canvasData[b[236]] = 142 * ratio;
                ctx[b[277]] = data ? 0.5 : 1;
                ctx[b[33]]();
                ctx[b[150]](65 * ratio, 80 * ratio);
                ctx[b[65]](0.2);
                get(ctx, 9, 60 * ratio, 10 * ratio);
                ctx[b[210]]();
                equal(ctx, test[0]);
                ctx[b[277]] = 1;
                ctx[b[33]]();
                ctx[b[150]](65 * ratio, 71 * ratio);
                ctx[b[65]](0.2);
                get(ctx, 9, 60 * ratio, 10 * ratio);
                equal(ctx, test[1], test[2], 4);
                ctx[b[65]](-0.32);
                get(ctx, 9, 38 * ratio, 10 * ratio);
                equal(ctx, test[3], test[4], 4);
                ctx[b[65]](0.68);
                get(ctx, 9, 20 * ratio, 8 * ratio);
                equal(ctx, test[5], test[6], 6);
                ctx[b[210]]();
                return canvasData;
            }
        function eraseOverlapIntervals(radius, args)
            /*Scope Closed:false | writes:true*/
            {
                var max = document('canvas');
                var ctx = max[b[9]]('2d');
                max[b[187]] = 372 * radius;
                max[b[236]] = 375 * radius;
                ctx[b[277]] = 0.5;
                ctx[b[150]](15 * radius, 15 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](313.0000305175781 * radius, 76.58523559570312 * radius);
                ctx[b[62]](308.0000305175781 * radius, 130.58523559570312 * radius, 279.0000305175781 * radius, 158.58523559570312 * radius, 254.00003051757812 * radius, 175.58523559570312 * radius);
                ctx[b[62]](287.0000305175781 * radius, 182.58523559570312 * radius, 274.0000305175781 * radius, 181.08523559570312 * radius, 294.0000305175781 * radius, 186.58523559570312 * radius);
                ctx[b[62]](293.5000305175781 * radius, 196.08523559570312 * radius, 293.5000305175781 * radius, 196.08523559570312 * radius, 293.0000305175781 * radius, 205.58523559570312 * radius);
                ctx[b[62]](304.0000305175781 * radius, 201.08523559570312 * radius, 304.0000305175781 * radius, 201.08523559570312 * radius, 315.0000305175781 * radius, 196.58523559570312 * radius);
                ctx[b[62]](350.0000305175781 * radius, 219.58523559570312 * radius, 343.0000305175781 * radius, 221.58523559570312 * radius, 351.0000305175781 * radius, 230.58523559570312 * radius);
                ctx[b[62]](296.0000305175781 * radius, 260.5852355957031 * radius, 264.0000305175781 * radius, 256.5852355957031 * radius, 220.00003051757812 * radius, 236.58523559570312 * radius);
                ctx[b[62]](233.00003051757812 * radius, 266.5852355957031 * radius, 232.00003051757812 * radius, 279.5852355957031 * radius, 231.00003051757812 * radius, 295.5852355957031 * radius);
                ctx[b[62]](222.00003051757812 * radius, 297.5852355957031 * radius, 222.00003051757812 * radius, 297.5852355957031 * radius, 213.00003051757812 * radius, 299.5852355957031 * radius);
                ctx[b[62]](219.50003051757812 * radius, 308.0852355957031 * radius, 219.50003051757812 * radius, 308.0852355957031 * radius, 226.00003051757812 * radius, 316.5852355957031 * radius);
                ctx[b[62]](223.00003051757812 * radius, 344.5852355957031 * radius, 216.00003051757812 * radius, 350.5852355957031 * radius, 209.00003051757812 * radius, 363.5852355957031 * radius);
                ctx[b[62]](154.00003051757812 * radius, 318.5852355957031 * radius, 156.00003051757812 * radius, 268.5852355957031 * radius, 160.00003051757812 * radius, 238.58523559570312 * radius);
                ctx[b[62]](135.00003051757812 * radius, 268.5852355957031 * radius, 125.00003051757812 * radius, 267.5852355957031 * radius, 112.00003051757812 * radius, 272.5852355957031 * radius);
                ctx[b[62]](104.50003051757812 * radius, 266.5852355957031 * radius, 104.50003051757812 * radius, 266.5852355957031 * radius, 97.00003051757812 * radius, 260.5852355957031 * radius);
                ctx[b[62]](93.00003051757812 * radius, 271.0852355957031 * radius, 93.00003051757812 * radius, 271.0852355957031 * radius, 89.00003051757812 * radius, 281.5852355957031 * radius);
                ctx[b[62]](66.00003051757812 * radius, 288.5852355957031 * radius, 59.000030517578125 * radius, 288.5852355957031 * radius, 39.000030517578125 * radius, 285.5852355957031 * radius);
                ctx[b[62]](56.000030517578125 * radius, 216.58523559570312 * radius, 91.00003051757812 * radius, 204.58523559570312 * radius, 129.00003051757812 * radius, 189.58523559570312 * radius);
                ctx[b[62]](90.00003051757812 * radius, 176.58523559570312 * radius, 89.00003051757812 * radius, 173.58523559570312 * radius, 79.00003051757812 * radius, 166.58523559570312 * radius);
                ctx[b[62]](82.00003051757812 * radius, 155.08523559570312 * radius, 82.00003051757812 * radius, 155.08523559570312 * radius, 85.00003051757812 * radius, 143.58523559570312 * radius);
                ctx[b[62]](75.50003051757812 * radius, 147.58523559570312 * radius, 75.50003051757812 * radius, 147.58523559570312 * radius, 66.00003051757812 * radius, 151.58523559570312 * radius);
                ctx[b[62]](44.000030517578125 * radius, 133.58523559570312 * radius, 41.000030517578125 * radius, 124.58523559570312 * radius, 34.000030517578125 * radius, 102.58523559570312 * radius);
                ctx[b[62]](100.00003051757812 * radius, 81.58523559570312 * radius, 134.00003051757812 * radius, 118.58523559570312 * radius, 150.00003051757812 * radius, 128.58523559570312 * radius);
                ctx[b[62]](144.00003051757812 * radius, 102.58523559570312 * radius, 147.00003051757812 * radius, 90.58523559570312 * radius, 150.00003051757812 * radius, 80.58523559570312 * radius);
                ctx[b[62]](159.50003051757812 * radius, 79.08523559570312 * radius, 159.50003051757812 * radius, 79.08523559570312 * radius, 169.00003051757812 * radius, 77.58523559570312 * radius);
                ctx[b[62]](163.00003051757812 * radius, 72.58523559570312 * radius, 163.00003051757812 * radius, 72.58523559570312 * radius, 157.00003051757812 * radius, 67.58523559570312 * radius);
                ctx[b[62]](162.00003051757812 * radius, 42.585235595703125 * radius, 169.00003051757812 * radius, 29.585235595703125 * radius, 182.00003051757812 * radius, 14.585235595703125 * radius);
                ctx[b[62]](219.00003051757812 * radius, 48.585235595703125 * radius, 222.00003051757812 * radius, 92.58523559570312 * radius, 218.00003051757812 * radius, 112.58523559570312 * radius);
                ctx[b[62]](239.00003051757812 * radius, 95.58523559570312 * radius, 242.00003051757812 * radius, 97.58523559570312 * radius, 249.00003051757812 * radius, 94.58523559570312 * radius);
                ctx[b[62]](255.00003051757812 * radius, 103.08523559570312 * radius, 255.00003051757812 * radius, 103.08523559570312 * radius, 261.0000305175781 * radius, 111.58523559570312 * radius);
                ctx[b[62]](261.5000305175781 * radius, 99.58523559570312 * radius, 261.5000305175781 * radius, 99.58523559570312 * radius, 262.0000305175781 * radius, 87.58523559570312 * radius);
                ctx[b[62]](282.0000305175781 * radius, 77.58523559570312 * radius, 301.0000305175781 * radius, 74.58523559570312 * radius, 314.0000305175781 * radius, 76.58523559570312 * radius);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](-15 * radius, -15 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](313.0000305175781 * radius, 76.58523559570312 * radius);
                ctx[b[62]](308.0000305175781 * radius, 130.58523559570312 * radius, 279.0000305175781 * radius, 158.58523559570312 * radius, 254.00003051757812 * radius, 175.58523559570312 * radius);
                ctx[b[62]](287.0000305175781 * radius, 182.58523559570312 * radius, 274.0000305175781 * radius, 181.08523559570312 * radius, 294.0000305175781 * radius, 186.58523559570312 * radius);
                ctx[b[62]](293.5000305175781 * radius, 196.08523559570312 * radius, 293.5000305175781 * radius, 196.08523559570312 * radius, 293.0000305175781 * radius, 205.58523559570312 * radius);
                ctx[b[62]](304.0000305175781 * radius, 201.08523559570312 * radius, 304.0000305175781 * radius, 201.08523559570312 * radius, 315.0000305175781 * radius, 196.58523559570312 * radius);
                ctx[b[62]](350.0000305175781 * radius, 219.58523559570312 * radius, 343.0000305175781 * radius, 221.58523559570312 * radius, 351.0000305175781 * radius, 230.58523559570312 * radius);
                ctx[b[62]](296.0000305175781 * radius, 260.5852355957031 * radius, 264.0000305175781 * radius, 256.5852355957031 * radius, 220.00003051757812 * radius, 236.58523559570312 * radius);
                ctx[b[62]](233.00003051757812 * radius, 266.5852355957031 * radius, 232.00003051757812 * radius, 279.5852355957031 * radius, 231.00003051757812 * radius, 295.5852355957031 * radius);
                ctx[b[62]](222.00003051757812 * radius, 297.5852355957031 * radius, 222.00003051757812 * radius, 297.5852355957031 * radius, 213.00003051757812 * radius, 299.5852355957031 * radius);
                ctx[b[62]](219.50003051757812 * radius, 308.0852355957031 * radius, 219.50003051757812 * radius, 308.0852355957031 * radius, 226.00003051757812 * radius, 316.5852355957031 * radius);
                ctx[b[62]](223.00003051757812 * radius, 344.5852355957031 * radius, 216.00003051757812 * radius, 350.5852355957031 * radius, 209.00003051757812 * radius, 363.5852355957031 * radius);
                ctx[b[62]](154.00003051757812 * radius, 318.5852355957031 * radius, 156.00003051757812 * radius, 268.5852355957031 * radius, 160.00003051757812 * radius, 238.58523559570312 * radius);
                ctx[b[62]](135.00003051757812 * radius, 268.5852355957031 * radius, 125.00003051757812 * radius, 267.5852355957031 * radius, 112.00003051757812 * radius, 272.5852355957031 * radius);
                ctx[b[62]](104.50003051757812 * radius, 266.5852355957031 * radius, 104.50003051757812 * radius, 266.5852355957031 * radius, 97.00003051757812 * radius, 260.5852355957031 * radius);
                ctx[b[62]](93.00003051757812 * radius, 271.0852355957031 * radius, 93.00003051757812 * radius, 271.0852355957031 * radius, 89.00003051757812 * radius, 281.5852355957031 * radius);
                ctx[b[62]](66.00003051757812 * radius, 288.5852355957031 * radius, 59.000030517578125 * radius, 288.5852355957031 * radius, 39.000030517578125 * radius, 285.5852355957031 * radius);
                ctx[b[62]](56.000030517578125 * radius, 216.58523559570312 * radius, 91.00003051757812 * radius, 204.58523559570312 * radius, 129.00003051757812 * radius, 189.58523559570312 * radius);
                ctx[b[62]](90.00003051757812 * radius, 176.58523559570312 * radius, 89.00003051757812 * radius, 173.58523559570312 * radius, 79.00003051757812 * radius, 166.58523559570312 * radius);
                ctx[b[62]](82.00003051757812 * radius, 155.08523559570312 * radius, 82.00003051757812 * radius, 155.08523559570312 * radius, 85.00003051757812 * radius, 143.58523559570312 * radius);
                ctx[b[62]](75.50003051757812 * radius, 147.58523559570312 * radius, 75.50003051757812 * radius, 147.58523559570312 * radius, 66.00003051757812 * radius, 151.58523559570312 * radius);
                ctx[b[62]](44.000030517578125 * radius, 133.58523559570312 * radius, 41.000030517578125 * radius, 124.58523559570312 * radius, 34.000030517578125 * radius, 102.58523559570312 * radius);
                ctx[b[62]](100.00003051757812 * radius, 81.58523559570312 * radius, 134.00003051757812 * radius, 118.58523559570312 * radius, 150.00003051757812 * radius, 128.58523559570312 * radius);
                ctx[b[62]](144.00003051757812 * radius, 102.58523559570312 * radius, 147.00003051757812 * radius, 90.58523559570312 * radius, 150.00003051757812 * radius, 80.58523559570312 * radius);
                ctx[b[62]](159.50003051757812 * radius, 79.08523559570312 * radius, 159.50003051757812 * radius, 79.08523559570312 * radius, 169.00003051757812 * radius, 77.58523559570312 * radius);
                ctx[b[62]](163.00003051757812 * radius, 72.58523559570312 * radius, 163.00003051757812 * radius, 72.58523559570312 * radius, 157.00003051757812 * radius, 67.58523559570312 * radius);
                ctx[b[62]](162.00003051757812 * radius, 42.585235595703125 * radius, 169.00003051757812 * radius, 29.585235595703125 * radius, 182.00003051757812 * radius, 14.585235595703125 * radius);
                ctx[b[62]](219.00003051757812 * radius, 48.585235595703125 * radius, 222.00003051757812 * radius, 92.58523559570312 * radius, 218.00003051757812 * radius, 112.58523559570312 * radius);
                ctx[b[62]](239.00003051757812 * radius, 95.58523559570312 * radius, 242.00003051757812 * radius, 97.58523559570312 * radius, 249.00003051757812 * radius, 94.58523559570312 * radius);
                ctx[b[62]](255.00003051757812 * radius, 103.08523559570312 * radius, 255.00003051757812 * radius, 103.08523559570312 * radius, 261.0000305175781 * radius, 111.58523559570312 * radius);
                ctx[b[62]](261.5000305175781 * radius, 99.58523559570312 * radius, 261.5000305175781 * radius, 99.58523559570312 * radius, 262.0000305175781 * radius, 87.58523559570312 * radius);
                ctx[b[62]](282.0000305175781 * radius, 77.58523559570312 * radius, 301.0000305175781 * radius, 74.58523559570312 * radius, 314.0000305175781 * radius, 76.58523559570312 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](186.00003051757812 * radius, 192.94886779785156 * radius);
                ctx[b[62]](185.00003051757812 * radius, 66.94886779785156 * radius, 184.50003051757812 * radius, 104.94886779785156 * radius, 183.00003051757812 * radius, 16.948867797851562 * radius);
                ctx[b[62]](216.00003051757812 * radius, 47.94886779785156 * radius, 219.00003051757812 * radius, 80.94886779785156 * radius, 218.00003051757812 * radius, 113.94886779785156 * radius);
                ctx[b[62]](209.00003051757812 * radius, 165.94886779785156 * radius, 200.00003051757812 * radius, 176.94886779785156 * radius, 189.00003051757812 * radius, 192.94886779785156 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[3], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](190.00003051757812 * radius, 191.94886779785156 * radius);
                ctx[b[62]](207.00003051757812 * radius, 348.94886779785156 * radius, 205.00003051757812 * radius, 323.94886779785156 * radius, 209.00003051757812 * radius, 358.94886779785156 * radius);
                ctx[b[62]](171.00003051757812 * radius, 334.94886779785156 * radius, 167.00003051757812 * radius, 302.94886779785156 * radius, 161.00003051757812 * radius, 268.94886779785156 * radius);
                ctx[b[62]](160.00003051757812 * radius, 218.94886779785156 * radius, 181.00003051757812 * radius, 191.94886779785156 * radius, 189.00003051757812 * radius, 186.94886779785156 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[3], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](194.00003051757812 * radius, 195.94886779785156 * radius);
                ctx[b[62]](116.00003051757812 * radius, 150.94886779785156 * radius, 116.00003051757812 * radius, 150.94886779785156 * radius, 38.000030517578125 * radius, 105.94886779785156 * radius);
                ctx[b[62]](67.00003051757812 * radius, 90.94886779785156 * radius, 96.00003051757812 * radius, 99.94886779785156 * radius, 123.00003051757812 * radius, 111.94886779785156 * radius);
                ctx[b[62]](183.00003051757812 * radius, 152.94886779785156 * radius, 179.00003051757812 * radius, 180.94886779785156 * radius, 193.00003051757812 * radius, 194.94886779785156 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[3], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](189.00003051757812 * radius, 190.94886779785156 * radius);
                ctx[b[62]](250.00003051757812 * radius, 133.94886779785156 * radius, 311.0000305175781 * radius, 78.94886779785156 * radius, 311.0000305175781 * radius, 76.94886779785156 * radius);
                ctx[b[62]](306.0000305175781 * radius, 127.94886779785156 * radius, 283.0000305175781 * radius, 148.94886779785156 * radius, 261.0000305175781 * radius, 166.94886779785156 * radius);
                ctx[b[62]](220.00003051757812 * radius, 197.94886779785156 * radius, 191.00003051757812 * radius, 194.94886779785156 * radius, 189.00003051757812 * radius, 195.94886779785156 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[3], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](189.00003051757812 * radius, 194.94886779785156 * radius);
                ctx[b[62]](268.5000305175781 * radius, 211.94886779785156 * radius, 268.5000305175781 * radius, 211.94886779785156 * radius, 348.0000305175781 * radius, 228.94886779785156 * radius);
                ctx[b[62]](316.0000305175781 * radius, 247.94886779785156 * radius, 298.0000305175781 * radius, 256.94886779785156 * radius, 250.00003051757812 * radius, 246.94886779785156 * radius);
                ctx[b[62]](197.00003051757812 * radius, 229.94886779785156 * radius, 189.00003051757812 * radius, 202.94886779785156 * radius, 188.00003051757812 * radius, 199.94886779785156 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[3], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](192.00003051757812 * radius, 191.94886779785156 * radius);
                ctx[b[62]](116.50003051757812 * radius, 238.44886779785156 * radius, 116.50003051757812 * radius, 238.44886779785156 * radius, 41.000030517578125 * radius, 284.94886779785156 * radius);
                ctx[b[62]](49.000030517578125 * radius, 252.94886779785156 * radius, 56.000030517578125 * radius, 242.94886779785156 * radius, 80.00003051757812 * radius, 215.94886779785156 * radius);
                ctx[b[62]](125.00003051757812 * radius, 181.94886779785156 * radius, 174.00003051757812 * radius, 183.94886779785156 * radius, 192.00003051757812 * radius, 191.94886779785156 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[3], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](313.0000305175781 * radius, 76.58523559570312 * radius);
                ctx[b[62]](308.0000305175781 * radius, 130.58523559570312 * radius, 279.0000305175781 * radius, 158.58523559570312 * radius, 254.00003051757812 * radius, 175.58523559570312 * radius);
                ctx[b[62]](287.0000305175781 * radius, 182.58523559570312 * radius, 274.0000305175781 * radius, 181.08523559570312 * radius, 294.0000305175781 * radius, 186.58523559570312 * radius);
                ctx[b[62]](293.5000305175781 * radius, 196.08523559570312 * radius, 293.5000305175781 * radius, 196.08523559570312 * radius, 293.0000305175781 * radius, 205.58523559570312 * radius);
                ctx[b[62]](304.0000305175781 * radius, 201.08523559570312 * radius, 304.0000305175781 * radius, 201.08523559570312 * radius, 315.0000305175781 * radius, 196.58523559570312 * radius);
                ctx[b[62]](350.0000305175781 * radius, 219.58523559570312 * radius, 343.0000305175781 * radius, 221.58523559570312 * radius, 351.0000305175781 * radius, 230.58523559570312 * radius);
                ctx[b[62]](296.0000305175781 * radius, 260.5852355957031 * radius, 264.0000305175781 * radius, 256.5852355957031 * radius, 220.00003051757812 * radius, 236.58523559570312 * radius);
                ctx[b[62]](233.00003051757812 * radius, 266.5852355957031 * radius, 232.00003051757812 * radius, 279.5852355957031 * radius, 231.00003051757812 * radius, 295.5852355957031 * radius);
                ctx[b[62]](222.00003051757812 * radius, 297.5852355957031 * radius, 222.00003051757812 * radius, 297.5852355957031 * radius, 213.00003051757812 * radius, 299.5852355957031 * radius);
                ctx[b[62]](219.50003051757812 * radius, 308.0852355957031 * radius, 219.50003051757812 * radius, 308.0852355957031 * radius, 226.00003051757812 * radius, 316.5852355957031 * radius);
                ctx[b[62]](223.00003051757812 * radius, 344.5852355957031 * radius, 216.00003051757812 * radius, 350.5852355957031 * radius, 209.00003051757812 * radius, 363.5852355957031 * radius);
                ctx[b[62]](154.00003051757812 * radius, 318.5852355957031 * radius, 156.00003051757812 * radius, 268.5852355957031 * radius, 160.00003051757812 * radius, 238.58523559570312 * radius);
                ctx[b[62]](135.00003051757812 * radius, 268.5852355957031 * radius, 125.00003051757812 * radius, 267.5852355957031 * radius, 112.00003051757812 * radius, 272.5852355957031 * radius);
                ctx[b[62]](104.50003051757812 * radius, 266.5852355957031 * radius, 104.50003051757812 * radius, 266.5852355957031 * radius, 97.00003051757812 * radius, 260.5852355957031 * radius);
                ctx[b[62]](93.00003051757812 * radius, 271.0852355957031 * radius, 93.00003051757812 * radius, 271.0852355957031 * radius, 89.00003051757812 * radius, 281.5852355957031 * radius);
                ctx[b[62]](66.00003051757812 * radius, 288.5852355957031 * radius, 59.000030517578125 * radius, 288.5852355957031 * radius, 39.000030517578125 * radius, 285.5852355957031 * radius);
                ctx[b[62]](56.000030517578125 * radius, 216.58523559570312 * radius, 91.00003051757812 * radius, 204.58523559570312 * radius, 129.00003051757812 * radius, 189.58523559570312 * radius);
                ctx[b[62]](90.00003051757812 * radius, 176.58523559570312 * radius, 89.00003051757812 * radius, 173.58523559570312 * radius, 79.00003051757812 * radius, 166.58523559570312 * radius);
                ctx[b[62]](82.00003051757812 * radius, 155.08523559570312 * radius, 82.00003051757812 * radius, 155.08523559570312 * radius, 85.00003051757812 * radius, 143.58523559570312 * radius);
                ctx[b[62]](75.50003051757812 * radius, 147.58523559570312 * radius, 75.50003051757812 * radius, 147.58523559570312 * radius, 66.00003051757812 * radius, 151.58523559570312 * radius);
                ctx[b[62]](44.000030517578125 * radius, 133.58523559570312 * radius, 41.000030517578125 * radius, 124.58523559570312 * radius, 34.000030517578125 * radius, 102.58523559570312 * radius);
                ctx[b[62]](100.00003051757812 * radius, 81.58523559570312 * radius, 134.00003051757812 * radius, 118.58523559570312 * radius, 150.00003051757812 * radius, 128.58523559570312 * radius);
                ctx[b[62]](144.00003051757812 * radius, 102.58523559570312 * radius, 147.00003051757812 * radius, 90.58523559570312 * radius, 150.00003051757812 * radius, 80.58523559570312 * radius);
                ctx[b[62]](159.50003051757812 * radius, 79.08523559570312 * radius, 159.50003051757812 * radius, 79.08523559570312 * radius, 169.00003051757812 * radius, 77.58523559570312 * radius);
                ctx[b[62]](163.00003051757812 * radius, 72.58523559570312 * radius, 163.00003051757812 * radius, 72.58523559570312 * radius, 157.00003051757812 * radius, 67.58523559570312 * radius);
                ctx[b[62]](162.00003051757812 * radius, 42.585235595703125 * radius, 169.00003051757812 * radius, 29.585235595703125 * radius, 182.00003051757812 * radius, 14.585235595703125 * radius);
                ctx[b[62]](219.00003051757812 * radius, 48.585235595703125 * radius, 222.00003051757812 * radius, 92.58523559570312 * radius, 218.00003051757812 * radius, 112.58523559570312 * radius);
                ctx[b[62]](239.00003051757812 * radius, 95.58523559570312 * radius, 242.00003051757812 * radius, 97.58523559570312 * radius, 249.00003051757812 * radius, 94.58523559570312 * radius);
                ctx[b[62]](255.00003051757812 * radius, 103.08523559570312 * radius, 255.00003051757812 * radius, 103.08523559570312 * radius, 261.0000305175781 * radius, 111.58523559570312 * radius);
                ctx[b[62]](261.5000305175781 * radius, 99.58523559570312 * radius, 261.5000305175781 * radius, 99.58523559570312 * radius, 262.0000305175781 * radius, 87.58523559570312 * radius);
                ctx[b[62]](282.0000305175781 * radius, 77.58523559570312 * radius, 301.0000305175781 * radius, 74.58523559570312 * radius, 314.0000305175781 * radius, 76.58523559570312 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, args[2], 4 * radius);
                return max;
            }
        function stringifyMongoId(radius, id, testCase)
            /*Scope Closed:false | writes:true*/
            {
                id = document('canvas');
                var ctx = id[b[9]]('2d');
                id[b[187]] = 248 * radius;
                id[b[236]] = 128 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](137 * radius, 7 * radius);
                ctx[b[62]](169 * radius, 14 * radius, 212 * radius, 9 * radius, 241 * radius, 5 * radius);
                ctx[b[62]](211 * radius, 63 * radius, 158 * radius, 92 * radius, 103 * radius, 109 * radius);
                ctx[b[62]](73 * radius, 126 * radius, 54 * radius, 124 * radius, 6 * radius, 99 * radius);
                ctx[b[62]](82 * radius, 63 * radius, 113 * radius, 35 * radius, 137 * radius, 8 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 14 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](73 * radius, 124 * radius);
                ctx[b[62]](111 * radius, 126 * radius, 162 * radius, 97 * radius, 203 * radius, 61 * radius);
                ctx[b[62]](156 * radius, 98 * radius, 131 * radius, 106 * radius, 105 * radius, 109 * radius);
                ctx[b[62]](99 * radius, 121 * radius, 87 * radius, 124 * radius, 72 * radius, 124 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[2], testCase[3], 1 * radius);
                return id;
            }
        function exports(radius, length, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 130 * radius;
                hash[b[236]] = 148 * radius;
                ctx[b[277]] = length ? 0.5 : 1;
                ctx[b[33]]();
                ctx[b[150]](65 * radius, 85 * radius);
                ctx[b[65]](1.4);
                get(ctx, 7, 60 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, args[0]);
                ctx[b[277]] = 1;
                ctx[b[33]]();
                ctx[b[150]](65 * radius, 74 * radius);
                ctx[b[65]](1.4);
                get(ctx, 7, 60 * radius, 10 * radius);
                equal(ctx, args[1], args[2], 4);
                ctx[b[65]](0.64);
                get(ctx, 7, 40 * radius, 10 * radius);
                equal(ctx, args[3], args[4], 4);
                ctx[b[65]](0.12);
                get(ctx, 7, 23 * radius, 5 * radius);
                ctx[b[210]]();
                equal(ctx, args[5]);
                return hash;
            }
        function checkWidths(radius, context, item)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 125 * radius;
                hash[b[236]] = 139 * radius;
                ctx[b[277]] = context ? 0.5 : 1;
                ctx[b[33]]();
                ctx[b[150]](63 * radius, 79 * radius);
                ctx[b[65]](1);
                get(ctx, 8, 60 * radius, 10 * radius);
                equal(ctx, item[0]);
                ctx[b[210]]();
                ctx[b[277]] = 1;
                ctx[b[33]]();
                ctx[b[150]](63 * radius, 69 * radius);
                ctx[b[65]](1);
                get(ctx, 8, 60 * radius, 10 * radius);
                equal(ctx, item[1], item[2], 4);
                ctx[b[65]](0.56);
                get(ctx, 8, 40 * radius, 10 * radius);
                equal(ctx, item[3], item[4], 4);
                ctx[b[65]](0.28);
                get(ctx, 8, 28 * radius, 8 * radius);
                equal(ctx, item[5]);
                ctx[b[210]]();
                return hash;
            }
        function FriendsListAssistant(a, ud, un)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 90 * a;
                hash[b[236]] = 101 * a;
                c[b[150]](0 * a, 5 * a);
                if (0 === xa) {
                    c[b[277]] = ud ? 0.5 : 1;
                    callback(c, 44 * a, 55 * a, 41 * a);
                    equal(c, un[0]);
                }
                c[b[277]] = 1;
                callback(c, 44 * a, 45 * a, 41 * a);
                equal(c, un[1], un[2], 4 * a);
                callback(c, 44 * a, 45 * a, 31 * a);
                equal(c, un[3]);
                c[b[33]]();
                c[b[150]](45 * a, 45 * a);
                chroma(c, -9 * a, -25.5 * a, 18 * a, 51 * a, 30 * a);
                c[b[210]]();
                equal(c, un[4], un[4], 2 * a);
                c[b[33]]();
                c[b[150]](45 * a, 45 * a);
                chroma(c, -26 * a, -9 * a, 52 * a, 18 * a, 30 * a);
                c[b[210]]();
                equal(c, un[4], un[4], 2 * a);
                callback(c, 45 * a, 29 * a, 7 * a);
                equal(c, un[5]);
                callback(c, 45 * a, 61 * a, 7 * a);
                equal(c, un[5]);
                callback(c, 28 * a, 45 * a, 7 * a);
                equal(c, un[5]);
                callback(c, 62 * a, 45 * a, 7 * a);
                equal(c, un[5]);
                return hash;
            }
        function P(a, f, args)
            /*Scope Closed:false | writes:true*/
            {
                var val = document('canvas');
                var c = val[b[9]]('2d');
                val[b[187]] = 90 * a;
                val[b[236]] = 98 * a;
                c[b[150]](0, 4 * a);
                if (0 === xa) {
                    c[b[277]] = f ? 0.5 : 1;
                    c[b[33]]();
                    c[b[150]](44 * a, 50 * a);
                    c[b[65]](1.4);
                    get(c, 7, 41 * a, 10 * a);
                    c[b[210]]();
                    equal(c, args[0]);
                }
                c[b[277]] = 1;
                c[b[33]]();
                c[b[150]](44 * a, 44 * a);
                c[b[65]](1.4);
                get(c, 7, 41 * a, 10 * a);
                equal(c, args[1], args[2], 4 * a);
                get(c, 7, 35 * a, 10 * a);
                equal(c, args[3], args[4], 4 * a);
                get(c, 7, 23 * a, 5 * a);
                c[b[210]]();
                equal(c, args[5]);
                c[b[33]]();
                c[b[150]](45 * a, 45 * a);
                c[b[65]](0);
                chroma(c, -9 * a, -25.5 * a, 18 * a, 51 * a, 30 * a);
                c[b[210]]();
                equal(c, args[4], args[4], 2 * a);
                c[b[33]]();
                c[b[150]](45 * a, 45 * a);
                c[b[65]](0);
                chroma(c, -26 * a, -9 * a, 52 * a, 18 * a, 30 * a);
                c[b[210]]();
                equal(c, args[4], args[4], 2 * a);
                callback(c, 45 * a, 29 * a, 7 * a);
                equal(c, args[5]);
                callback(c, 45 * a, 61 * a, 7 * a);
                equal(c, args[5]);
                callback(c, 28 * a, 45 * a, 7 * a);
                equal(c, args[5]);
                callback(c, 62 * a, 45 * a, 7 * a);
                equal(c, args[5]);
                return val;
            }
        function main(a, f, args)
            /*Scope Closed:false | writes:true*/
            {
                var c = document('canvas');
                var o = c[b[9]]('2d');
                c[b[187]] = 90 * a;
                c[b[236]] = 98 * a;
                o[b[150]](0, 4 * a);
                if (0 === xa) {
                    o[b[277]] = f ? 0.5 : 1;
                    o[b[33]]();
                    o[b[150]](44 * a, 50 * a);
                    o[b[65]](1);
                    get(o, 8, 41 * a, 10 * a);
                    equal(o, args[0]);
                    o[b[210]]();
                }
                o[b[277]] = 1;
                o[b[33]]();
                o[b[150]](44 * a, 44 * a);
                o[b[65]](1);
                get(o, 8, 41 * a, 10 * a);
                equal(o, args[1], args[2], 4 * a);
                o[b[65]](0.56);
                get(o, 8, 33 * a, 10 * a);
                equal(o, args[3], args[4], 4 * a);
                o[b[65]](0.28);
                get(o, 8, 24 * a, 8 * a);
                equal(o, args[5]);
                o[b[210]]();
                o[b[33]]();
                o[b[150]](45 * a, 45 * a);
                o[b[65]](0);
                chroma(o, -9 * a, -25.5 * a, 18 * a, 51 * a, 30 * a);
                o[b[210]]();
                equal(o, args[4], args[4], 2 * a);
                o[b[33]]();
                o[b[150]](45 * a, 45 * a);
                o[b[65]](0);
                chroma(o, -26 * a, -9 * a, 52 * a, 18 * a, 30 * a);
                o[b[210]]();
                equal(o, args[4], args[4], 2 * a);
                callback(o, 45 * a, 29 * a, 7 * a);
                equal(o, args[5]);
                callback(o, 45 * a, 61 * a, 7 * a);
                equal(o, args[5]);
                callback(o, 28 * a, 45 * a, 7 * a);
                equal(o, args[5]);
                callback(o, 62 * a, 45 * a, 7 * a);
                equal(o, args[5]);
                return c;
            }
        function verifyMetadata(radius, result, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 300 * radius;
                hash[b[236]] = 300 * radius;
                ctx[b[277]] = result ? 0.5 : 1;
                ctx[b[33]]();
                ctx[b[150]](150 * radius, 160 * radius);
                ctx[b[65]](6.28);
                get(ctx, 6, 146 * radius, 30 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[0]);
                ctx[b[277]] = 1;
                ctx[b[33]]();
                ctx[b[150]](150 * radius, 150 * radius);
                ctx[b[65]](6.28);
                get(ctx, 6, 146 * radius, 30 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[1], testCase[2], 8 * radius);
                ctx[b[33]]();
                ctx[b[150]](150 * radius, 150 * radius);
                ctx[b[65]](0);
                get(ctx, 6, 105 * radius, 30 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[3], testCase[3], 8 * radius);
                ctx[b[33]]();
                ctx[b[150]](150 * radius, 150 * radius);
                ctx[b[65]](0);
                get(ctx, 6, 66 * radius, 30 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[4], testCase[2], 8 * radius);
                ctx[b[33]]();
                ctx[b[150]](150 * radius, 150 * radius);
                ctx[b[65]](0);
                get(ctx, 6, 31 * radius, 30 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[5], testCase[6], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](150 * radius, 207 * radius);
                ctx[b[62]](150 * radius, 151 * radius, 150 * radius, 101 * radius, 150 * radius, 94 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, testCase[2], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](118 * radius, 100 * radius);
                ctx[b[62]](118 * radius, 205 * radius, 118 * radius, 207 * radius, 118 * radius, 200 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, testCase[2], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](183 * radius, 100 * radius);
                ctx[b[62]](183 * radius, 203 * radius, 183 * radius, 203 * radius, 183 * radius, 200 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, testCase[2], 8 * radius);
                return hash;
            }
        function setfrgb(ratio, r, a)
            /*Scope Closed:false | writes:true*/
            {
                var canvasData = document('canvas');
                var ctx = canvasData[b[9]]('2d');
                canvasData[b[187]] = 300 * ratio;
                canvasData[b[236]] = 300 * ratio;
                ctx[b[277]] = r ? 0.5 : 1;
                ctx[b[33]]();
                ctx[b[150]](150 * ratio, 160 * ratio);
                ctx[b[65]](6.28);
                get(ctx, 6, 146 * ratio, 30 * ratio);
                ctx[b[210]]();
                equal(ctx, a[0]);
                ctx[b[277]] = 1;
                ctx[b[33]]();
                ctx[b[150]](150 * ratio, 150 * ratio);
                ctx[b[65]](6.28);
                get(ctx, 6, 146 * ratio, 30 * ratio);
                ctx[b[210]]();
                equal(ctx, a[1], a[2], 8 * ratio);
                ctx[b[33]]();
                ctx[b[150]](150 * ratio, 150 * ratio);
                ctx[b[65]](0);
                get(ctx, 6, 105 * ratio, 30 * ratio);
                ctx[b[210]]();
                equal(ctx, a[3], a[3], 8 * ratio);
                ctx[b[33]]();
                ctx[b[150]](150 * ratio, 150 * ratio);
                ctx[b[65]](0);
                get(ctx, 6, 66 * ratio, 30 * ratio);
                ctx[b[210]]();
                equal(ctx, a[4], a[2], 8 * ratio);
                ctx[b[33]]();
                ctx[b[150]](131 * ratio, 116 * ratio);
                get(ctx, 7, 17 * ratio, 8 * ratio);
                ctx[b[210]]();
                equal(ctx, a[6]);
                ctx[b[33]]();
                ctx[b[150]](163 * ratio, 168 * ratio);
                get(ctx, 7, 25 * ratio, 8 * ratio);
                ctx[b[210]]();
                equal(ctx, a[6]);
                ctx[b[33]]();
                ctx[b[150]](117 * ratio, 151 * ratio);
                get(ctx, 7, 11 * ratio, 8 * ratio);
                ctx[b[210]]();
                equal(ctx, a[6]);
                ctx[b[33]]();
                ctx[b[150]](167 * ratio, 122 * ratio);
                get(ctx, 7, 12 * ratio, 8 * ratio);
                ctx[b[210]]();
                equal(ctx, a[6]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](150 * ratio, 207 * ratio);
                ctx[b[62]](150 * ratio, 151 * ratio, 150 * ratio, 101 * ratio, 150 * ratio, 94 * ratio);
                ctx[b[238]]();
                equal(ctx, void 0, a[2], 8 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](118 * ratio, 100 * ratio);
                ctx[b[62]](118 * ratio, 205 * ratio, 118 * ratio, 207 * ratio, 118 * ratio, 200 * ratio);
                ctx[b[238]]();
                equal(ctx, void 0, a[2], 8 * ratio);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](183 * ratio, 100 * ratio);
                ctx[b[62]](183 * ratio, 203 * ratio, 183 * ratio, 203 * ratio, 183 * ratio, 200 * ratio);
                ctx[b[238]]();
                equal(ctx, void 0, a[2], 8 * ratio);
                return canvasData;
            }
        function f(a, o, item)
            /*Scope Closed:false | writes:true*/
            {
                o = document('canvas');
                var c = o[b[9]]('2d');
                o[b[187]] = 118 * a;
                o[b[236]] = 129 * a;
                c[b[33]]();
                c[b[150]](90 * a, 90 * a);
                chroma(c, -86.5 * a, -86 * a, 110 * a, 110 * a, 15 * a);
                c[b[210]]();
                equal(c, item[0], item[1], 4);
                return o;
            }
        function update(a, fn, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 90 * a;
                hash[b[236]] = 98 * a;
                c[b[150]](0, 4 * a);
                if (0 === xa) {
                    c[b[277]] = fn ? 0.5 : 1;
                    c[b[33]]();
                    c[b[150]](44 * a, 50 * a);
                    c[b[65]](0.2);
                    get(c, 9, 41 * a, 10 * a);
                    c[b[210]]();
                    equal(c, args[0]);
                }
                c[b[277]] = 1;
                c[b[33]]();
                c[b[150]](44 * a, 44 * a);
                c[b[65]](0.2);
                get(c, 9, 41 * a, 10 * a);
                equal(c, args[1], args[2], 4 * a);
                c[b[65]](-0.32);
                get(c, 9, 32 * a, 10 * a);
                equal(c, args[3], args[4], 4 * a);
                c[b[65]](0.68);
                get(c, 9, 23 * a, 8 * a);
                equal(c, args[5], args[6], 6 * a);
                c[b[210]]();
                c[b[33]]();
                c[b[150]](45 * a, 45 * a);
                c[b[65]](0);
                chroma(c, -9 * a, -25.5 * a, 18 * a, 51 * a, 30 * a);
                c[b[210]]();
                equal(c, args[4], args[4], 2 * a);
                c[b[33]]();
                c[b[150]](45 * a, 45 * a);
                c[b[65]](0);
                chroma(c, -26 * a, -9 * a, 52 * a, 18 * a, 30 * a);
                c[b[210]]();
                equal(c, args[4], args[4], 2 * a);
                callback(c, 45 * a, 29 * a, 7 * a);
                equal(c, args[5]);
                callback(c, 45 * a, 61 * a, 7 * a);
                equal(c, args[5]);
                callback(c, 28 * a, 45 * a, 7 * a);
                equal(c, args[5]);
                callback(c, 62 * a, 45 * a, 7 * a);
                equal(c, args[5]);
                return hash;
            }
        function _getRootComponent(radius, cmp, testCase)
            /*Scope Closed:false | writes:true*/
            {
                cmp = document('canvas');
                var ctx = cmp[b[9]]('2d');
                cmp[b[187]] = 135 * radius;
                cmp[b[236]] = 120 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](3.5 * radius, 55.25 * radius);
                ctx[b[62]](3.5 * radius, 114.25 * radius, 2.5 * radius, 109.25 * radius, 3.5 * radius, 112.25 * radius);
                ctx[b[62]](5.5 * radius, 119.25 * radius, 8.5 * radius, 119.25 * radius, 11.5 * radius, 119.25 * radius);
                ctx[b[62]](15.5 * radius, 114.25 * radius, 13.5 * radius, 95.25 * radius, 14.5 * radius, 82.25 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 7 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](6.5 * radius, 43.25 * radius);
                ctx[b[62]](3.5 * radius, 27.25 * radius, 7.5 * radius, 20.25 * radius, 25.5 * radius, 11.25 * radius);
                ctx[b[62]](45.5 * radius, -0.75 * radius, 73.5 * radius, 1.25 * radius, 107.5 * radius, 10.25 * radius);
                ctx[b[62]](131.5 * radius, 21.25 * radius, 125.5 * radius, 34.25 * radius, 125.5 * radius, 36.25 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 7 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](120.5 * radius, 62.25 * radius);
                ctx[b[62]](121.5 * radius, 95.25 * radius, 120.5 * radius, 80.25 * radius, 120.5 * radius, 100.25 * radius);
                ctx[b[62]](118.5 * radius, 119.25 * radius, 123.5 * radius, 118.25 * radius, 129.5 * radius, 113.25 * radius);
                ctx[b[62]](133.5 * radius, 107.25 * radius, 130.5 * radius, 97.25 * radius, 130.5 * radius, 87.25 * radius);
                ctx[b[62]](129.5 * radius, 56.25 * radius, 130 * radius, 70.75 * radius, 129.5 * radius, 54.25 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 7 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](17.5 * radius, 27 * radius);
                ctx[b[62]](48.5 * radius, 5 * radius, 93.5 * radius, 14 * radius, 118.5 * radius, 26 * radius);
                ctx[b[62]](132.5 * radius, 35 * radius, 133.5 * radius, 52 * radius, 132.5 * radius, 68 * radius);
                ctx[b[62]](125.5 * radius, 87 * radius, 116.5 * radius, 84 * radius, 96.5 * radius, 75 * radius);
                ctx[b[62]](60.5 * radius, 66 * radius, 52.5 * radius, 74 * radius, 37.5 * radius, 78 * radius);
                ctx[b[62]](2.5 * radius, 86 * radius, 3.5 * radius, 78 * radius, 1.5 * radius, 61 * radius);
                ctx[b[62]](1.5 * radius, 37 * radius, 9.5 * radius, 32 * radius, 15.5 * radius, 28 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[2], testCase[3], 7 * radius);
                return cmp;
            }
        function verifyMapping(radius, result, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 501 * radius;
                hash[b[236]] = 309 * radius;
                ctx[b[150]](0, 6 * radius);
                ctx[b[277]] = result ? 0.5 : 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](126 * radius, 184 * radius);
                ctx[b[62]](169 * radius, 196 * radius, 194 * radius, 198 * radius, 227 * radius, 198 * radius);
                ctx[b[62]](235 * radius, 222 * radius, 236 * radius, 223 * radius, 241 * radius, 226 * radius);
                ctx[b[62]](245 * radius, 228 * radius, 257 * radius, 228 * radius, 263 * radius, 226 * radius);
                ctx[b[62]](267 * radius, 225 * radius, 270 * radius, 211 * radius, 275 * radius, 198 * radius);
                ctx[b[62]](332 * radius, 194 * radius, 347 * radius, 192 * radius, 372 * radius, 188 * radius);
                ctx[b[62]](366 * radius, 174.5 * radius, 366 * radius, 174.5 * radius, 360 * radius, 161 * radius);
                ctx[b[62]](253.5 * radius, 162 * radius, 253.5 * radius, 162 * radius, 147 * radius, 163 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -6 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](100 * radius, 116 * radius);
                ctx[b[62]](90 * radius, 101 * radius, 96 * radius, 89 * radius, 106 * radius, 83 * radius);
                ctx[b[62]](86 * radius, 79 * radius, 86 * radius, 52 * radius, 93 * radius, 38 * radius);
                ctx[b[62]](99 * radius, 51 * radius, 107 * radius, 57 * radius, 122 * radius, 63 * radius);
                ctx[b[62]](130 * radius, 53 * radius, 141 * radius, 46 * radius, 161 * radius, 46 * radius);
                ctx[b[62]](157 * radius, 31 * radius, 158 * radius, 20 * radius, 169 * radius, 6 * radius);
                ctx[b[62]](171 * radius, 24 * radius, 186 * radius, 33 * radius, 198 * radius, 45 * radius);
                ctx[b[62]](252 * radius, 45 * radius, 252 * radius, 45 * radius, 306 * radius, 45 * radius);
                ctx[b[62]](323 * radius, 33 * radius, 332 * radius, 21 * radius, 335 * radius, 7 * radius);
                ctx[b[62]](349 * radius, 21 * radius, 347 * radius, 36 * radius, 345 * radius, 46 * radius);
                ctx[b[62]](364 * radius, 46 * radius, 369 * radius, 48 * radius, 377 * radius, 63 * radius);
                ctx[b[62]](398 * radius, 58 * radius, 403 * radius, 49 * radius, 409 * radius, 40 * radius);
                ctx[b[62]](419 * radius, 57 * radius, 411 * radius, 79 * radius, 398 * radius, 85 * radius);
                ctx[b[62]](405 * radius, 100 * radius, 405 * radius, 106 * radius, 401 * radius, 118 * radius);
                ctx[b[62]](332.5 * radius, 128.5 * radius, 332.5 * radius, 128.5 * radius, 264 * radius, 139 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[1], testCase[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](122 * radius, 191 * radius);
                ctx[b[62]](123 * radius, 237 * radius, 135 * radius, 245 * radius, 153 * radius, 259 * radius);
                ctx[b[62]](167 * radius, 269 * radius, 158 * radius, 281 * radius, 118 * radius, 276 * radius);
                ctx[b[62]](104 * radius, 273 * radius, 98 * radius, 268 * radius, 93 * radius, 242 * radius);
                ctx[b[62]](89 * radius, 220 * radius, 92 * radius, 201 * radius, 102 * radius, 179 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3], testCase[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](403 * radius, 182 * radius);
                ctx[b[62]](414 * radius, 215 * radius, 412 * radius, 232 * radius, 403 * radius, 260 * radius);
                ctx[b[62]](395 * radius, 274 * radius, 375 * radius, 272 * radius, 356 * radius, 270 * radius);
                ctx[b[62]](345 * radius, 268 * radius, 339 * radius, 262 * radius, 354 * radius, 252 * radius);
                ctx[b[62]](370 * radius, 242 * radius, 380 * radius, 225 * radius, 384 * radius, 184 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3], testCase[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](155 * radius, 157 * radius);
                ctx[b[62]](146 * radius, 189 * radius, 137 * radius, 198 * radius, 114 * radius, 219 * radius);
                ctx[b[62]](104 * radius, 212 * radius, 98 * radius, 203 * radius, 89 * radius, 189 * radius);
                ctx[b[62]](82 * radius, 178 * radius, 91 * radius, 164 * radius, 93 * radius, 136 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[4], testCase[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](347 * radius, 162 * radius);
                ctx[b[62]](357 * radius, 195 * radius, 376 * radius, 209 * radius, 387 * radius, 217 * radius);
                ctx[b[62]](409 * radius, 201 * radius, 420 * radius, 181 * radius, 416 * radius, 166 * radius);
                ctx[b[62]](410 * radius, 150 * radius, 412 * radius, 149 * radius, 408 * radius, 130 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[4], testCase[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](86 * radius, 134 * radius);
                ctx[b[62]](79 * radius, 102 * radius, 92 * radius, 84 * radius, 108 * radius, 92 * radius);
                ctx[b[62]](149 * radius, 108 * radius, 184 * radius, 111 * radius, 242 * radius, 111 * radius);
                ctx[b[62]](294 * radius, 108 * radius, 341 * radius, 105 * radius, 386 * radius, 98 * radius);
                ctx[b[62]](412 * radius, 91 * radius, 417 * radius, 86 * radius, 415 * radius, 133 * radius);
                ctx[b[62]](413 * radius, 160 * radius, 413 * radius, 160 * radius, 368 * radius, 174 * radius);
                ctx[b[62]](308 * radius, 184 * radius, 291 * radius, 185 * radius, 270 * radius, 186 * radius);
                ctx[b[62]](264 * radius, 206 * radius, 262 * radius, 215 * radius, 253 * radius, 215 * radius);
                ctx[b[62]](239 * radius, 217 * radius, 239 * radius, 211 * radius, 231 * radius, 186 * radius);
                ctx[b[62]](178 * radius, 184 * radius, 156 * radius, 179 * radius, 112 * radius, 162 * radius);
                ctx[b[62]](87 * radius, 151 * radius, 90 * radius, 144 * radius, 87 * radius, 137 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[4], testCase[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](63 * radius, 98 * radius);
                ctx[b[62]](84 * radius, 121 * radius, 109 * radius, 102 * radius, 124 * radius, 117 * radius);
                ctx[b[62]](138 * radius, 136 * radius, 123 * radius, 165 * radius, 94 * radius, 150 * radius);
                ctx[b[62]](66 * radius, 131 * radius, 64 * radius, 115 * radius, 63 * radius, 99 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3], testCase[2], 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](449 * radius, 97 * radius);
                ctx[b[62]](446 * radius, 143 * radius, 415 * radius, 151 * radius, 402 * radius, 155 * radius);
                ctx[b[62]](386 * radius, 157 * radius, 373 * radius, 133 * radius, 391 * radius, 116 * radius);
                ctx[b[62]](402 * radius, 106 * radius, 432 * radius, 124 * radius, 449 * radius, 97 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3], testCase[2], 10 * radius);
                return hash;
            }
        function draw_success(radius, result, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 304 * radius;
                hash[b[236]] = 278 * radius;
                ctx[b[150]](10 * radius, 25 * radius);
                ctx[b[277]] = result ? 0.5 : 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](128 * radius, 137 * radius);
                ctx[b[62]](155 * radius, 144 * radius, 223 * radius, 143 * radius, 256 * radius, 122 * radius);
                ctx[b[62]](249 * radius, 180 * radius, 210 * radius, 227 * radius, 164 * radius, 242 * radius);
                ctx[b[62]](74 * radius, 213 * radius, 99 * radius, 166 * radius, 127 * radius, 138 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](284 * radius, 52 * radius);
                ctx[b[62]](126 * radius, 112 * radius, 89 * radius, 177 * radius, 170 * radius, 241 * radius);
                ctx[b[62]](103 * radius, 275 * radius, 20 * radius, 239 * radius, 12 * radius, 159 * radius);
                ctx[b[62]](5 * radius, 76 * radius, 75 * radius, 4 * radius, 165 * radius, 13 * radius);
                ctx[b[62]](233 * radius, 15 * radius, 260 * radius, 33 * radius, 284 * radius, 52 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[150]](-10 * radius, -25 * radius);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](128 * radius, 137 * radius);
                ctx[b[62]](155 * radius, 144 * radius, 223 * radius, 143 * radius, 256 * radius, 122 * radius);
                ctx[b[62]](249 * radius, 180 * radius, 210 * radius, 227 * radius, 164 * radius, 242 * radius);
                ctx[b[62]](74 * radius, 213 * radius, 99 * radius, 166 * radius, 127 * radius, 138 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[1], testCase[2], 15 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](284 * radius, 52 * radius);
                ctx[b[62]](126 * radius, 112 * radius, 89 * radius, 177 * radius, 170 * radius, 241 * radius);
                ctx[b[62]](103 * radius, 275 * radius, 20 * radius, 239 * radius, 12 * radius, 159 * radius);
                ctx[b[62]](5 * radius, 76 * radius, 75 * radius, 4 * radius, 165 * radius, 13 * radius);
                ctx[b[62]](233 * radius, 15 * radius, 260 * radius, 33 * radius, 284 * radius, 52 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3], testCase[4], 15 * radius);
                return hash;
            }
        function scale(a, out, args)
            /*Scope Closed:false | writes:true*/
            {
                out = document('canvas');
                var c = out[b[9]]('2d');
                out[b[187]] = 175 * a;
                out[b[236]] = 169 * a;
                c[b[277]] = 0.5;
                c[b[150]](0, 3 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](19 * a, 139 * a);
                c[b[62]](18 * a, 163 * a, 22 * a, 156 * a, 53 * a, 157 * a);
                c[b[62]](97.5 * a, 157 * a, 97.5 * a, 157 * a, 142 * a, 157 * a);
                c[b[62]](150 * a, 157 * a, 153 * a, 156 * a, 154 * a, 142 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[277]] = 1;
                c[b[150]](0, -3 * a);
                c[b[33]]();
                c[b[150]](86.5 * a, 81.5 * a);
                chroma(c, -66.5 * a, -65.5 * a, 133 * a, 131 * a, 10 * a);
                c[b[210]]();
                equal(c, args[1], args[2], 5 * a);
                c[b[33]]();
                c[b[150]](84.5 * a, 79 * a);
                chroma(c, -50.5 * a, -49 * a, 101 * a, 98 * a, 10 * a);
                c[b[210]]();
                equal(c, args[3], args[2], 5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](42 * a, 54 * a);
                c[b[62]](37 * a, 48 * a, 39 * a, 44 * a, 38 * a, 41 * a);
                c[b[62]](42 * a, 40 * a, 45 * a, 40 * a, 50 * a, 41 * a);
                c[b[62]](85 * a, 36 * a, 98 * a, 37 * a, 116 * a, 42 * a);
                c[b[62]](132 * a, 39 * a, 132 * a, 39 * a, 133 * a, 56 * a);
                c[b[62]](136 * a, 73 * a, 136 * a, 84 * a, 132 * a, 106 * a);
                c[b[62]](47 * a, 113 * a, 85.5 * a, 106 * a, 39 * a, 106 * a);
                c[b[62]](32 * a, 81 * a, 38 * a, 60 * a, 42 * a, 55 * a);
                c[b[238]]();
                equal(c, args[4], args[5], 5 * a);
                c[b[33]]();
                c[b[150]](28 * a, 24 * a);
                c[b[65]](0);
                chroma(c, -14 * a, -14 * a, 28 * a, 28 * a, 4 * a);
                c[b[210]]();
                equal(c, args[1], args[2], 5 * a);
                c[b[33]]();
                c[b[150]](143 * a, 23 * a);
                c[b[65]](0);
                chroma(c, -14 * a, -14 * a, 28 * a, 28 * a, 4 * a);
                c[b[210]]();
                equal(c, args[1], args[2], 5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](55 * a, 80 * a);
                c[b[62]](73 * a, 78 * a, 84 * a, 74 * a, 100 * a, 64 * a);
                c[b[62]](111 * a, 57 * a, 125 * a, 67 * a, 108 * a, 84 * a);
                c[b[62]](96 * a, 95 * a, 86 * a, 96 * a, 70 * a, 88 * a);
                c[b[62]](62.5 * a, 84 * a, 62.5 * a, 84 * a, 55 * a, 80 * a);
                c[b[238]]();
                equal(c, args[5]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](17 * a, 112 * a);
                c[b[62]](14 * a, 146 * a, 27 * a, 152 * a, 37 * a, 149 * a);
                c[b[62]](78 * a, 155 * a, 128 * a, 150 * a, 146 * a, 150 * a);
                c[b[62]](158 * a, 144 * a, 158 * a, 121 * a, 153 * a, 114 * a);
                c[b[238]]();
                equal(c, args[8], args[9], 5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](127 * a, 111 * a);
                c[b[62]](133 * a, 136 * a, 115 * a, 149 * a, 88 * a, 150 * a);
                c[b[62]](119.5 * a, 151 * a, 119.5 * a, 151 * a, 151 * a, 152 * a);
                c[b[62]](159 * a, 136 * a, 155 * a, 126 * a, 154 * a, 113 * a);
                c[b[238]]();
                equal(c, args[9]);
                c[b[277]] = 0.5;
                c[b[150]](0, 3 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](15 * a, 117 * a);
                c[b[62]](34 * a, 109 * a, 61 * a, 106 * a, 94 * a, 109 * a);
                c[b[62]](126 * a, 110 * a, 142 * a, 113 * a, 154 * a, 119 * a);
                c[b[62]](154 * a, 123 * a, 154 * a, 123 * a, 154 * a, 127 * a);
                c[b[62]](127 * a, 118 * a, 15 * a, 122 * a, 18 * a, 129 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[277]] = 1;
                c[b[150]](0, -3 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](14 * a, 127 * a);
                c[b[62]](13 * a, 117 * a, 12 * a, 109 * a, 15 * a, 103 * a);
                c[b[62]](16 * a, 95 * a, 21 * a, 92 * a, 60 * a, 93 * a);
                c[b[62]](91 * a, 93 * a, 118 * a, 93 * a, 143 * a, 96 * a);
                c[b[62]](151 * a, 96 * a, 155 * a, 99 * a, 156 * a, 112 * a);
                c[b[62]](157 * a, 124 * a, 157 * a, 127 * a, 156 * a, 128 * a);
                c[b[62]](138 * a, 112 * a, 100 * a, 118 * a, 84 * a, 118 * a);
                c[b[62]](28 * a, 118 * a, 20 * a, 120 * a, 16 * a, 127 * a);
                c[b[238]]();
                equal(c, args[4], args[5], 5 * a);
                c[b[33]]();
                c[b[150]](27.5 * a, 138.5 * a);
                chroma(c, -13.5 * a, -14.5 * a, 27 * a, 29 * a, 4 * a);
                c[b[210]]();
                equal(c, args[1], args[2], 5 * a);
                c[b[33]]();
                c[b[150]](143.5 * a, 137 * a);
                chroma(c, -13.5 * a, -14 * a, 27 * a, 28 * a, 4 * a);
                c[b[210]]();
                equal(c, args[1], args[2], 5 * a);
                return out;
            }
        function solveTriangular(a, out, args)
            /*Scope Closed:false | writes:true*/
            {
                out = document('canvas');
                var c = out[b[9]]('2d');
                out[b[187]] = 175 * a;
                out[b[236]] = 169 * a;
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](17 * a, 112 * a);
                c[b[62]](14 * a, 146 * a, 27 * a, 152 * a, 37 * a, 149 * a);
                c[b[62]](78 * a, 155 * a, 128 * a, 150 * a, 146 * a, 150 * a);
                c[b[62]](158 * a, 144 * a, 158 * a, 121 * a, 153 * a, 114 * a);
                c[b[238]]();
                equal(c, args[8], args[9], 5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](127 * a, 111 * a);
                c[b[62]](133 * a, 136 * a, 115 * a, 149 * a, 88 * a, 150 * a);
                c[b[62]](119.5 * a, 151 * a, 119.5 * a, 151 * a, 151 * a, 152 * a);
                c[b[62]](159 * a, 136 * a, 155 * a, 126 * a, 154 * a, 113 * a);
                c[b[238]]();
                equal(c, args[9]);
                c[b[277]] = 0.5;
                c[b[150]](0, 3 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](15 * a, 117 * a);
                c[b[62]](34 * a, 109 * a, 61 * a, 106 * a, 94 * a, 109 * a);
                c[b[62]](126 * a, 110 * a, 142 * a, 113 * a, 154 * a, 119 * a);
                c[b[62]](154 * a, 123 * a, 154 * a, 123 * a, 154 * a, 127 * a);
                c[b[62]](127 * a, 118 * a, 15 * a, 122 * a, 18 * a, 129 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[277]] = 1;
                c[b[150]](0, -3 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](14 * a, 127 * a);
                c[b[62]](13 * a, 117 * a, 12 * a, 109 * a, 15 * a, 103 * a);
                c[b[62]](16 * a, 95 * a, 21 * a, 92 * a, 60 * a, 93 * a);
                c[b[62]](91 * a, 93 * a, 118 * a, 93 * a, 143 * a, 96 * a);
                c[b[62]](151 * a, 96 * a, 155 * a, 99 * a, 156 * a, 112 * a);
                c[b[62]](157 * a, 124 * a, 157 * a, 127 * a, 156 * a, 128 * a);
                c[b[62]](138 * a, 112 * a, 100 * a, 118 * a, 84 * a, 118 * a);
                c[b[62]](28 * a, 118 * a, 20 * a, 120 * a, 16 * a, 127 * a);
                c[b[238]]();
                equal(c, args[4], args[5], 5 * a);
                c[b[33]]();
                c[b[150]](27.5 * a, 138.5 * a);
                chroma(c, -13.5 * a, -14.5 * a, 27 * a, 29 * a, 4 * a);
                c[b[210]]();
                equal(c, args[1], args[2], 5 * a);
                c[b[33]]();
                c[b[150]](143.5 * a, 137 * a);
                chroma(c, -13.5 * a, -14 * a, 27 * a, 28 * a, 4 * a);
                c[b[210]]();
                equal(c, args[1], args[2], 5 * a);
                return out;
            }
        function setbdrgb(a, r, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 115 * a;
                hash[b[236]] = 585 * a;
                c[b[228]](-1, 1);
                c[b[150]](-110 * a, 0);
                c[b[150]](10 * a, 10 * a);
                c[b[277]] = r ? 0.5 : 1;
                c[b[33]]();
                c[b[150]](51.5 * a, 342 * a);
                chroma(c, -14.5 * a, -225 * a, 29 * a, 450 * a, 20 * a);
                c[b[210]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](54 * a, 83 * a);
                c[b[62]](70 * a, 69 * a, 78 * a, 62 * a, 82 * a, 40 * a);
                c[b[62]](93 * a, 48 * a, 103 * a, 64 * a, 95 * a, 102 * a);
                c[b[62]](60 * a, 114 * a, 53 * a, 103 * a, 54 * a, 85 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](95 * a, 97 * a);
                c[b[62]](56 * a, 102 * a, 43 * a, 77 * a, 71 * a, 6 * a);
                c[b[62]](34 * a, 10 * a, 6 * a, 43 * a, 5 * a, 76 * a);
                c[b[62]](4 * a, 98 * a, 15 * a, 130 * a, 64 * a, 130 * a);
                c[b[62]](76 * a, 129 * a, 95 * a, 113 * a, 97 * a, 97 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](55 * a, 176 * a);
                c[b[62]](74 * a, 175 * a, 82 * a, 169 * a, 96 * a, 155 * a);
                c[b[62]](103 * a, 183 * a, 95 * a, 214 * a, 54 * a, 219 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](50 * a, 176 * a);
                c[b[62]](25 * a, 177 * a, 16 * a, 164 * a, 7 * a, 156 * a);
                c[b[62]](0 * a, 186 * a, 10 * a, 201 * a, 43 * a, 220 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](35 * a, 403 * a);
                c[b[62]](47 * a, 412 * a, 58 * a, 412 * a, 67 * a, 403 * a);
                c[b[62]](66.5 * a, 434 * a, 66.5 * a, 434 * a, 66 * a, 465 * a);
                c[b[62]](56 * a, 480 * a, 40 * a, 472 * a, 36 * a, 465 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](59 * a, 67 * a);
                c[b[62]](47 * a, 97 * a, 18 * a, 117 * a, 11 * a, 110 * a);
                c[b[62]](11 * a, 115 * a, 15 * a, 122 * a, 23 * a, 124 * a);
                c[b[62]](46 * a, 118 * a, 52 * a, 113 * a, 62 * a, 86 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](30 * a, 125 * a);
                c[b[62]](47 * a, 136 * a, 57 * a, 134 * a, 77 * a, 127 * a);
                c[b[62]](71 * a, 158 * a, 71 * a, 159 * a, 66 * a, 159 * a);
                c[b[62]](50.5 * a, 156.5 * a, 50.5 * a, 156.5 * a, 35 * a, 154 * a);
                c[b[62]](31 * a, 145 * a, 31 * a, 136 * a, 31 * a, 125 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](35 * a, 171 * a);
                c[b[62]](32 * a, 221 * a, 43 * a, 233 * a, 70 * a, 247 * a);
                c[b[62]](75 * a, 234 * a, 75 * a, 230 * a, 72 * a, 221 * a);
                c[b[62]](48 * a, 206 * a, 54 * a, 188 * a, 50 * a, 176 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](60 * a, 68 * a);
                c[b[62]](63 * a, 69 * a, 65 * a, 71 * a, 67 * a, 77 * a);
                c[b[62]](61 * a, 123 * a, 52 * a, 137 * a, 42 * a, 150 * a);
                c[b[62]](38 * a, 151 * a, 38 * a, 151 * a, 34 * a, 152 * a);
                c[b[62]](33 * a, 146.5 * a, 33 * a, 146.5 * a, 32 * a, 141 * a);
                c[b[62]](49 * a, 118 * a, 63 * a, 87 * a, 59 * a, 68 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](71 * a, 172 * a);
                c[b[62]](56 * a, 222 * a, 49 * a, 234 * a, 35 * a, 248 * a);
                c[b[62]](30 * a, 236 * a, 30 * a, 230 * a, 31 * a, 217 * a);
                c[b[62]](44 * a, 202 * a, 49 * a, 191 * a, 52 * a, 172 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](35 * a, 151 * a);
                c[b[62]](27 * a, 165 * a, 31 * a, 173 * a, 36 * a, 178 * a);
                c[b[62]](56 * a, 185 * a, 73 * a, 184 * a, 71 * a, 170 * a);
                c[b[62]](72 * a, 154 * a, 71 * a, 154 * a, 63 * a, 155 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[150]](-10 * a, -10 * a);
                c[b[277]] = 1;
                c[b[33]]();
                c[b[150]](51.5 * a, 342 * a);
                chroma(c, -14.5 * a, -225 * a, 29 * a, 450 * a, 20 * a);
                c[b[210]]();
                equal(c, args[1], args[2], 5 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](54 * a, 83 * a);
                c[b[62]](70 * a, 69 * a, 78 * a, 62 * a, 82 * a, 40 * a);
                c[b[62]](93 * a, 48 * a, 103 * a, 64 * a, 95 * a, 102 * a);
                c[b[62]](60 * a, 114 * a, 53 * a, 103 * a, 54 * a, 85 * a);
                c[b[238]]();
                equal(c, args[3], args[4], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](95 * a, 97 * a);
                c[b[62]](56 * a, 102 * a, 43 * a, 77 * a, 71 * a, 6 * a);
                c[b[62]](34 * a, 10 * a, 6 * a, 43 * a, 5 * a, 76 * a);
                c[b[62]](4 * a, 98 * a, 15 * a, 130 * a, 64 * a, 130 * a);
                c[b[62]](76 * a, 129 * a, 95 * a, 113 * a, 97 * a, 97 * a);
                c[b[238]]();
                equal(c, args[5], args[6], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](35 * a, 403 * a);
                c[b[62]](47 * a, 412 * a, 58 * a, 412 * a, 67 * a, 403 * a);
                c[b[62]](66.5 * a, 434 * a, 66.5 * a, 434 * a, 66 * a, 465 * a);
                c[b[62]](56 * a, 480 * a, 40 * a, 472 * a, 36 * a, 465 * a);
                c[b[238]]();
                equal(c, args[7], args[8], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](37 * a, 427 * a);
                c[b[62]](47 * a, 435 * a, 55 * a, 435 * a, 67 * a, 427 * a);
                equal(c, void 0, args[8], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](36 * a, 448 * a);
                c[b[62]](46 * a, 454 * a, 54 * a, 457 * a, 65 * a, 449 * a);
                equal(c, void 0, args[8], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](55 * a, 176 * a);
                c[b[62]](74 * a, 175 * a, 82 * a, 169 * a, 96 * a, 155 * a);
                c[b[62]](103 * a, 183 * a, 95 * a, 214 * a, 54 * a, 219 * a);
                c[b[238]]();
                equal(c, args[3], args[4], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](50 * a, 176 * a);
                c[b[62]](25 * a, 177 * a, 16 * a, 164 * a, 7 * a, 156 * a);
                c[b[62]](0 * a, 186 * a, 10 * a, 201 * a, 43 * a, 220 * a);
                c[b[238]]();
                equal(c, args[3], args[4], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](59 * a, 67 * a);
                c[b[62]](47 * a, 97 * a, 18 * a, 117 * a, 11 * a, 110 * a);
                c[b[62]](11 * a, 115 * a, 15 * a, 122 * a, 23 * a, 124 * a);
                c[b[62]](46 * a, 118 * a, 52 * a, 113 * a, 62 * a, 86 * a);
                c[b[238]]();
                equal(c, args[7], args[8], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](30 * a, 125 * a);
                c[b[62]](47 * a, 136 * a, 57 * a, 134 * a, 77 * a, 127 * a);
                c[b[62]](71 * a, 158 * a, 71 * a, 159 * a, 66 * a, 159 * a);
                c[b[62]](50.5 * a, 156.5 * a, 50.5 * a, 156.5 * a, 35 * a, 154 * a);
                c[b[62]](31 * a, 145 * a, 31 * a, 136 * a, 31 * a, 125 * a);
                c[b[238]]();
                equal(c, args[7], args[8], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](35 * a, 171 * a);
                c[b[62]](32 * a, 221 * a, 43 * a, 233 * a, 70 * a, 247 * a);
                c[b[62]](75 * a, 234 * a, 75 * a, 230 * a, 72 * a, 221 * a);
                c[b[62]](48 * a, 206 * a, 54 * a, 188 * a, 50 * a, 176 * a);
                c[b[238]]();
                equal(c, args[7], args[8], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](60 * a, 68 * a);
                c[b[62]](63 * a, 69 * a, 65 * a, 71 * a, 67 * a, 77 * a);
                c[b[62]](61 * a, 123 * a, 52 * a, 137 * a, 42 * a, 150 * a);
                c[b[62]](38 * a, 151 * a, 38 * a, 151 * a, 34 * a, 152 * a);
                c[b[62]](33 * a, 146.5 * a, 33 * a, 146.5 * a, 32 * a, 141 * a);
                c[b[62]](49 * a, 118 * a, 63 * a, 87 * a, 59 * a, 68 * a);
                c[b[238]]();
                equal(c, args[7], args[8], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](71 * a, 172 * a);
                c[b[62]](56 * a, 222 * a, 49 * a, 234 * a, 35 * a, 248 * a);
                c[b[62]](30 * a, 236 * a, 30 * a, 230 * a, 31 * a, 217 * a);
                c[b[62]](44 * a, 202 * a, 49 * a, 191 * a, 52 * a, 172 * a);
                c[b[238]]();
                equal(c, args[7], args[8], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](35 * a, 151 * a);
                c[b[62]](27 * a, 165 * a, 31 * a, 173 * a, 36 * a, 178 * a);
                c[b[62]](56 * a, 185 * a, 73 * a, 184 * a, 71 * a, 170 * a);
                c[b[62]](72 * a, 154 * a, 71 * a, 154 * a, 63 * a, 155 * a);
                c[b[238]]();
                equal(c, args[7], args[8], 6 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](53 * a, 113 * a);
                c[b[62]](65 * a, 140 * a, 75 * a, 166 * a, 52 * a, 169 * a);
                c[b[62]](29 * a, 168 * a, 41 * a, 143 * a, 53 * a, 112 * a);
                c[b[238]]();
                equal(c, args[3], args[4], 6 * a);
                return hash;
            }
        function assertUnfilteredContactRequest(radius, result, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 81 * radius;
                hash[b[236]] = 626 * radius;
                ctx[b[150]](20 * radius, 20 * radius);
                ctx[b[277]] = result ? 0.5 : 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](55 * radius, 565 * radius);
                ctx[b[62]](56 * radius, 586 * radius, 53 * radius, 591 * radius, 40 * radius, 592 * radius);
                ctx[b[62]](28 * radius, 591 * radius, 27 * radius, 583 * radius, 28 * radius, 557 * radius);
                ctx[b[62]](27.5 * radius, 346 * radius, 27.5 * radius, 346 * radius, 27 * radius, 135 * radius);
                ctx[b[62]](26 * radius, 74 * radius, 36 * radius, 26 * radius, 41 * radius, 15 * radius);
                ctx[b[62]](54 * radius, 51 * radius, 54 * radius, 81 * radius, 55 * radius, 128 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[150]](-20 * radius, -20 * radius);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](55 * radius, 565 * radius);
                ctx[b[62]](56 * radius, 586 * radius, 53 * radius, 591 * radius, 40 * radius, 592 * radius);
                ctx[b[62]](28 * radius, 591 * radius, 27 * radius, 583 * radius, 28 * radius, 557 * radius);
                ctx[b[62]](27.5 * radius, 346 * radius, 27.5 * radius, 346 * radius, 27 * radius, 135 * radius);
                ctx[b[62]](26 * radius, 74 * radius, 36 * radius, 26 * radius, 41 * radius, 15 * radius);
                ctx[b[62]](54 * radius, 51 * radius, 54 * radius, 81 * radius, 55 * radius, 128 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[1], testCase[2], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](27 * radius, 129 * radius);
                ctx[b[62]](32 * radius, 135 * radius, 48 * radius, 136 * radius, 53 * radius, 129 * radius);
                ctx[b[62]](56 * radius, 97 * radius, 53 * radius, 82 * radius, 52 * radius, 64 * radius);
                ctx[b[62]](49 * radius, 33 * radius, 44 * radius, 27 * radius, 41 * radius, 21 * radius);
                ctx[b[62]](31 * radius, 40 * radius, 28 * radius, 84 * radius, 27 * radius, 127 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](55 * radius, 565 * radius);
                ctx[b[62]](56 * radius, 586 * radius, 53 * radius, 591 * radius, 40 * radius, 592 * radius);
                ctx[b[62]](28 * radius, 591 * radius, 27 * radius, 583 * radius, 28 * radius, 557 * radius);
                ctx[b[62]](27.5 * radius, 346 * radius, 27.5 * radius, 346 * radius, 27 * radius, 135 * radius);
                ctx[b[62]](26 * radius, 74 * radius, 36 * radius, 26 * radius, 41 * radius, 15 * radius);
                ctx[b[62]](54 * radius, 51 * radius, 54 * radius, 81 * radius, 55 * radius, 128 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, testCase[2], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](28 * radius, 475 * radius);
                ctx[b[62]](38 * radius, 482 * radius, 48 * radius, 480 * radius, 54 * radius, 474 * radius);
                ctx[b[62]](54 * radius, 509.5 * radius, 54 * radius, 509.5 * radius, 54 * radius, 545 * radius);
                ctx[b[62]](46 * radius, 554 * radius, 36 * radius, 552 * radius, 28 * radius, 545 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[4], testCase[5], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](28 * radius, 496 * radius);
                ctx[b[62]](39 * radius, 506 * radius, 49 * radius, 503 * radius, 54 * radius, 496 * radius);
                equal(ctx, void 0, testCase[5], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](28 * radius, 521 * radius);
                ctx[b[62]](41 * radius, 529 * radius, 49 * radius, 524 * radius, 54 * radius, 520 * radius);
                equal(ctx, void 0, testCase[5], 8 * radius);
                return hash;
            }
        function editMenu(radius, id, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 100 * radius;
                hash[b[236]] = 648 * radius;
                ctx[b[150]](20 * radius, 20 * radius);
                ctx[b[277]] = id ? 0.5 : 1;
                ctx[b[33]]();
                ctx[b[150]](50.5 * radius, 349.5 * radius);
                chroma(ctx, -13.5 * radius, -249.5 * radius, 27 * radius, 499 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](36 * radius, 538 * radius);
                ctx[b[62]](49.5 * radius, 538 * radius, 49.5 * radius, 538 * radius, 63 * radius, 538 * radius);
                ctx[b[62]](63.5 * radius, 568 * radius, 63.5 * radius, 568 * radius, 64 * radius, 598 * radius);
                ctx[b[62]](50 * radius, 598 * radius, 50 * radius, 598 * radius, 36 * radius, 598 * radius);
                ctx[b[62]](36 * radius, 568.5 * radius, 36 * radius, 568.5 * radius, 36 * radius, 539 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](36 * radius, 554 * radius);
                ctx[b[62]](45 * radius, 561 * radius, 56 * radius, 558 * radius, 63 * radius, 554 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](32 * radius, 569 * radius);
                ctx[b[62]](44 * radius, 576 * radius, 58 * radius, 574 * radius, 68 * radius, 569 * radius);
                ctx[b[62]](68 * radius, 584 * radius, 68 * radius, 584 * radius, 68 * radius, 599 * radius);
                ctx[b[62]](68 * radius, 608 * radius, 65 * radius, 618 * radius, 49 * radius, 617 * radius);
                ctx[b[62]](34 * radius, 617 * radius, 32 * radius, 610 * radius, 32 * radius, 598 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](41 * radius, 581 * radius);
                ctx[b[62]](48 * radius, 584 * radius, 55 * radius, 583 * radius, 60 * radius, 581 * radius);
                ctx[b[62]](60 * radius, 589.5 * radius, 60 * radius, 589.5 * radius, 60 * radius, 598 * radius);
                ctx[b[62]](60 * radius, 604 * radius, 59 * radius, 609 * radius, 48 * radius, 608 * radius);
                ctx[b[62]](40 * radius, 607 * radius, 40 * radius, 606 * radius, 41 * radius, 581 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](31 * radius, 106 * radius);
                ctx[b[62]](31 * radius, 124.5 * radius, 31 * radius, 124.5 * radius, 31 * radius, 143 * radius);
                ctx[b[62]](31 * radius, 163 * radius, 38 * radius, 169 * radius, 48 * radius, 168 * radius);
                ctx[b[62]](57 * radius, 168 * radius, 67 * radius, 165 * radius, 67 * radius, 148 * radius);
                ctx[b[62]](67 * radius, 123.5 * radius, 67 * radius, 123.5 * radius, 67 * radius, 99 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](49 * radius, 27 * radius);
                ctx[b[62]](64 * radius, 62.5 * radius, 64 * radius, 62.5 * radius, 79 * radius, 98 * radius);
                ctx[b[62]](74 * radius, 113 * radius, 63 * radius, 121 * radius, 50 * radius, 122 * radius);
                ctx[b[62]](35 * radius, 123 * radius, 22 * radius, 109 * radius, 20 * radius, 98 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](49 * radius, 43 * radius);
                ctx[b[62]](61 * radius, 70 * radius, 61 * radius, 70 * radius, 73 * radius, 97 * radius);
                ctx[b[62]](66 * radius, 116 * radius, 43 * radius, 122 * radius, 26 * radius, 99 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[150]](-20 * radius, -20 * radius);
                ctx[b[277]] = 1;
                ctx[b[33]]();
                ctx[b[150]](50.5 * radius, 349.5 * radius);
                chroma(ctx, -13.5 * radius, -249.5 * radius, 27 * radius, 499 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[1], testCase[2], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](36 * radius, 538 * radius);
                ctx[b[62]](49.5 * radius, 538 * radius, 49.5 * radius, 538 * radius, 63 * radius, 538 * radius);
                ctx[b[62]](63.5 * radius, 568 * radius, 63.5 * radius, 568 * radius, 64 * radius, 598 * radius);
                ctx[b[62]](50 * radius, 598 * radius, 50 * radius, 598 * radius, 36 * radius, 598 * radius);
                ctx[b[62]](36 * radius, 568.5 * radius, 36 * radius, 568.5 * radius, 36 * radius, 539 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3], testCase[4], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](36 * radius, 554 * radius);
                ctx[b[62]](45 * radius, 561 * radius, 56 * radius, 558 * radius, 63 * radius, 554 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, testCase[4], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](32 * radius, 569 * radius);
                ctx[b[62]](44 * radius, 576 * radius, 58 * radius, 574 * radius, 68 * radius, 569 * radius);
                ctx[b[62]](68 * radius, 584 * radius, 68 * radius, 584 * radius, 68 * radius, 599 * radius);
                ctx[b[62]](68 * radius, 608 * radius, 65 * radius, 618 * radius, 49 * radius, 617 * radius);
                ctx[b[62]](34 * radius, 617 * radius, 32 * radius, 610 * radius, 32 * radius, 598 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[5], testCase[6], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](41 * radius, 581 * radius);
                ctx[b[62]](48 * radius, 584 * radius, 55 * radius, 583 * radius, 60 * radius, 581 * radius);
                ctx[b[62]](60 * radius, 589.5 * radius, 60 * radius, 589.5 * radius, 60 * radius, 598 * radius);
                ctx[b[62]](60 * radius, 604 * radius, 59 * radius, 609 * radius, 48 * radius, 608 * radius);
                ctx[b[62]](40 * radius, 607 * radius, 40 * radius, 606 * radius, 41 * radius, 581 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[7]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](31 * radius, 106 * radius);
                ctx[b[62]](31 * radius, 124.5 * radius, 31 * radius, 124.5 * radius, 31 * radius, 143 * radius);
                ctx[b[62]](31 * radius, 163 * radius, 38 * radius, 169 * radius, 48 * radius, 168 * radius);
                ctx[b[62]](57 * radius, 168 * radius, 67 * radius, 165 * radius, 67 * radius, 148 * radius);
                ctx[b[62]](67 * radius, 123.5 * radius, 67 * radius, 123.5 * radius, 67 * radius, 99 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[5], testCase[6], 8 * radius);
                ctx[b[33]]();
                ctx[b[150]](-46 * radius, -50 * radius);
                ctx[b[228]](2, 2);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](51 * radius, 80 * radius);
                ctx[b[62]](51 * radius, 89.5 * radius, 51 * radius, 89.5 * radius, 51 * radius, 99 * radius);
                ctx[b[62]](49 * radius, 103 * radius, 46 * radius, 105 * radius, 44 * radius, 99 * radius);
                ctx[b[62]](44 * radius, 88.5 * radius, 44 * radius, 88.5 * radius, 44 * radius, 78 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[8]);
                ctx[b[210]]();
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](49 * radius, 27 * radius);
                ctx[b[62]](64 * radius, 62.5 * radius, 64 * radius, 62.5 * radius, 79 * radius, 98 * radius);
                ctx[b[62]](74 * radius, 113 * radius, 63 * radius, 121 * radius, 50 * radius, 122 * radius);
                ctx[b[62]](35 * radius, 123 * radius, 22 * radius, 109 * radius, 20 * radius, 98 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[8], testCase[9], 8 * radius);
                ctx[b[228]](2, 2);
                ctx[b[150]](-23 * radius, -20 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](57 * radius, 69 * radius);
                ctx[b[62]](50 * radius, 76 * radius, 43 * radius, 75 * radius, 38 * radius, 69 * radius);
                ctx[b[62]](43 * radius, 57 * radius, 43 * radius, 57 * radius, 48 * radius, 45 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[10]);
                return hash;
            }
        function hslaToRgba(a, l, h)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 88 * a;
                hash[b[236]] = 647 * a;
                c[b[150]](20 * a, 20 * a);
                c[b[277]] = l ? 0.5 : 1;
                c[b[33]]();
                c[b[150]](45 * a, 384.5 * a);
                chroma(c, -15 * a, -216.5 * a, 30 * a, 433 * a, 10 * a);
                c[b[210]]();
                equal(c, h[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](27 * a, 572 * a);
                c[b[62]](44 * a, 580 * a, 55 * a, 576 * a, 62 * a, 572 * a);
                c[b[62]](65 * a, 585.5 * a, 65 * a, 585.5 * a, 68 * a, 599 * a);
                c[b[62]](71 * a, 612 * a, 68 * a, 618 * a, 34 * a, 616 * a);
                c[b[62]](14 * a, 615 * a, 19 * a, 607 * a, 27 * a, 573 * a);
                c[b[238]]();
                equal(c, h[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](32 * a, 587 * a);
                c[b[62]](39 * a, 590 * a, 48 * a, 588 * a, 54 * a, 587 * a);
                c[b[62]](57 * a, 604 * a, 59 * a, 609 * a, 46 * a, 609 * a);
                c[b[62]](27 * a, 609 * a, 28 * a, 605 * a, 33 * a, 588 * a);
                c[b[238]]();
                equal(c, h[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](31 * a, 113 * a);
                c[b[62]](27 * a, 139 * a, 27 * a, 139 * a, 23 * a, 165 * a);
                c[b[62]](18 * a, 187 * a, 39 * a, 195 * a, 57 * a, 186 * a);
                c[b[62]](68 * a, 180 * a, 65 * a, 171 * a, 62 * a, 153 * a);
                c[b[62]](58.5 * a, 131 * a, 58.5 * a, 131 * a, 55 * a, 109 * a);
                c[b[238]]();
                equal(c, h[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](39 * a, 139 * a);
                c[b[62]](43 * a, 139 * a, 43 * a, 139 * a, 47 * a, 139 * a);
                c[b[62]](51 * a, 158 * a, 56 * a, 176 * a, 44 * a, 175 * a);
                c[b[62]](33 * a, 177 * a, 34 * a, 167 * a, 39 * a, 140 * a);
                c[b[238]]();
                equal(c, h[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](44 * a, 29 * a);
                c[b[62]](57 * a, 63 * a, 57 * a, 63 * a, 70 * a, 97 * a);
                c[b[62]](60 * a, 111 * a, 60 * a, 111 * a, 50 * a, 125 * a);
                c[b[62]](45 * a, 128 * a, 41 * a, 128 * a, 35 * a, 124 * a);
                c[b[62]](26.5 * a, 110 * a, 26.5 * a, 110 * a, 18 * a, 96 * a);
                c[b[238]]();
                equal(c, h[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](44 * a, 54 * a);
                c[b[62]](50 * a, 72 * a, 50 * a, 72 * a, 56 * a, 90 * a);
                c[b[62]](58 * a, 94 * a, 59 * a, 98 * a, 53 * a, 105 * a);
                c[b[62]](47 * a, 113 * a, 43 * a, 113 * a, 36 * a, 103 * a);
                c[b[62]](29 * a, 96 * a, 31 * a, 94 * a, 35 * a, 83 * a);
                c[b[238]]();
                equal(c, h[0]);
                c[b[150]](-20 * a, -20 * a);
                c[b[277]] = 1;
                c[b[33]]();
                c[b[150]](45 * a, 384.5 * a);
                chroma(c, -15 * a, -216.5 * a, 30 * a, 433 * a, 10 * a);
                c[b[210]]();
                equal(c, h[1], h[2], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](27 * a, 572 * a);
                c[b[62]](44 * a, 580 * a, 55 * a, 576 * a, 62 * a, 572 * a);
                c[b[62]](65 * a, 585.5 * a, 65 * a, 585.5 * a, 68 * a, 599 * a);
                c[b[62]](71 * a, 612 * a, 68 * a, 618 * a, 34 * a, 616 * a);
                c[b[62]](14 * a, 615 * a, 19 * a, 607 * a, 27 * a, 573 * a);
                c[b[238]]();
                equal(c, h[3], h[4], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](32 * a, 587 * a);
                c[b[62]](39 * a, 590 * a, 48 * a, 588 * a, 54 * a, 587 * a);
                c[b[62]](57 * a, 604 * a, 59 * a, 609 * a, 46 * a, 609 * a);
                c[b[62]](27 * a, 609 * a, 28 * a, 605 * a, 33 * a, 588 * a);
                c[b[238]]();
                equal(c, h[5]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](31 * a, 113 * a);
                c[b[62]](27 * a, 139 * a, 27 * a, 139 * a, 23 * a, 165 * a);
                c[b[62]](18 * a, 187 * a, 39 * a, 195 * a, 57 * a, 186 * a);
                c[b[62]](68 * a, 180 * a, 65 * a, 171 * a, 62 * a, 153 * a);
                c[b[62]](58.5 * a, 131 * a, 58.5 * a, 131 * a, 55 * a, 109 * a);
                c[b[238]]();
                equal(c, h[3], h[4], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](39 * a, 139 * a);
                c[b[62]](43 * a, 139 * a, 43 * a, 139 * a, 47 * a, 139 * a);
                c[b[62]](51 * a, 158 * a, 56 * a, 176 * a, 44 * a, 175 * a);
                c[b[62]](33 * a, 177 * a, 34 * a, 167 * a, 39 * a, 140 * a);
                c[b[238]]();
                equal(c, h[5]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](44 * a, 29 * a);
                c[b[62]](57 * a, 63 * a, 57 * a, 63 * a, 70 * a, 97 * a);
                c[b[62]](60 * a, 111 * a, 60 * a, 111 * a, 50 * a, 125 * a);
                c[b[62]](45 * a, 128 * a, 41 * a, 128 * a, 35 * a, 124 * a);
                c[b[62]](26.5 * a, 110 * a, 26.5 * a, 110 * a, 18 * a, 96 * a);
                c[b[238]]();
                equal(c, h[6], h[7], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](44 * a, 54 * a);
                c[b[62]](50 * a, 72 * a, 50 * a, 72 * a, 56 * a, 90 * a);
                c[b[62]](58 * a, 94 * a, 59 * a, 98 * a, 53 * a, 105 * a);
                c[b[62]](47 * a, 113 * a, 43 * a, 113 * a, 36 * a, 103 * a);
                c[b[62]](29 * a, 96 * a, 31 * a, 94 * a, 35 * a, 83 * a);
                c[b[238]]();
                equal(c, h[8]);
                return hash;
            }
        function verifyUserIsOwner(a, user, item)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 106 * a;
                hash[b[236]] = 681 * a;
                c[b[150]](20 * a, 20 * a);
                c[b[277]] = user ? 0.5 : 1;
                c[b[33]]();
                c[b[150]](52.5 * a, 395 * a);
                c[b[65]](0);
                chroma(c, -11.5 * a, -226 * a, 23 * a, 452 * a, 10 * a);
                c[b[210]]();
                equal(c, item[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](35 * a, 588 * a);
                c[b[62]](47 * a, 596 * a, 61 * a, 594 * a, 69 * a, 588 * a);
                c[b[62]](79 * a, 615 * a, 78 * a, 632 * a, 59 * a, 643 * a);
                c[b[62]](41 * a, 650 * a, 27 * a, 632 * a, 30 * a, 610 * a);
                c[b[238]]();
                equal(c, item[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](52 * a, 135 * a);
                c[b[62]](61.5 * a, 142 * a, 61.5 * a, 142 * a, 71 * a, 149 * a);
                c[b[62]](69.5 * a, 166 * a, 69.5 * a, 166 * a, 68 * a, 183 * a);
                c[b[62]](60.5 * a, 187.5 * a, 60.5 * a, 187.5 * a, 53 * a, 192 * a);
                c[b[62]](45 * a, 187.5 * a, 45 * a, 187.5 * a, 37 * a, 183 * a);
                c[b[62]](35.5 * a, 167 * a, 35.5 * a, 167 * a, 34 * a, 151 * a);
                c[b[238]]();
                equal(c, item[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](64 * a, 150 * a);
                c[b[62]](63 * a, 164 * a, 63 * a, 164 * a, 62 * a, 178 * a);
                c[b[62]](58 * a, 181 * a, 58 * a, 181 * a, 54 * a, 184 * a);
                c[b[62]](48.5 * a, 181.5 * a, 48.5 * a, 181.5 * a, 43 * a, 179 * a);
                c[b[62]](42 * a, 164.5 * a, 42 * a, 164.5 * a, 41 * a, 150 * a);
                c[b[62]](46 * a, 152.5 * a, 46 * a, 152.5 * a, 51 * a, 155 * a);
                c[b[238]]();
                equal(c, item[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](52 * a, 39 * a);
                c[b[62]](65.5 * a, 82 * a, 65.5 * a, 82 * a, 79 * a, 125 * a);
                c[b[62]](66 * a, 137.5 * a, 66 * a, 137.5 * a, 53 * a, 150 * a);
                c[b[62]](39 * a, 138 * a, 39 * a, 138 * a, 25 * a, 126 * a);
                c[b[238]]();
                equal(c, item[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](52 * a, 64 * a);
                c[b[62]](60 * a, 92.5 * a, 60 * a, 92.5 * a, 68 * a, 121 * a);
                c[b[62]](61 * a, 127.5 * a, 61 * a, 127.5 * a, 54 * a, 134 * a);
                c[b[62]](46.5 * a, 127.5 * a, 46.5 * a, 127.5 * a, 39 * a, 121 * a);
                c[b[238]]();
                equal(c, item[0]);
                c[b[150]](-20 * a, -20 * a);
                c[b[277]] = 1;
                c[b[33]]();
                c[b[150]](52.5 * a, 395 * a);
                c[b[65]](0);
                chroma(c, -11.5 * a, -226 * a, 23 * a, 452 * a, 10 * a);
                c[b[210]]();
                equal(c, item[1], item[2], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](35 * a, 588 * a);
                c[b[62]](47 * a, 596 * a, 61 * a, 594 * a, 69 * a, 588 * a);
                c[b[62]](79 * a, 615 * a, 78 * a, 632 * a, 59 * a, 643 * a);
                c[b[62]](41 * a, 650 * a, 27 * a, 632 * a, 30 * a, 610 * a);
                c[b[238]]();
                equal(c, item[3], item[4], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](52 * a, 135 * a);
                c[b[62]](61.5 * a, 142 * a, 61.5 * a, 142 * a, 71 * a, 149 * a);
                c[b[62]](69.5 * a, 166 * a, 69.5 * a, 166 * a, 68 * a, 183 * a);
                c[b[62]](60.5 * a, 187.5 * a, 60.5 * a, 187.5 * a, 53 * a, 192 * a);
                c[b[62]](45 * a, 187.5 * a, 45 * a, 187.5 * a, 37 * a, 183 * a);
                c[b[62]](35.5 * a, 167 * a, 35.5 * a, 167 * a, 34 * a, 151 * a);
                c[b[238]]();
                equal(c, item[3], item[4], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](64 * a, 150 * a);
                c[b[62]](63 * a, 164 * a, 63 * a, 164 * a, 62 * a, 178 * a);
                c[b[62]](58 * a, 181 * a, 58 * a, 181 * a, 54 * a, 184 * a);
                c[b[62]](48.5 * a, 181.5 * a, 48.5 * a, 181.5 * a, 43 * a, 179 * a);
                c[b[62]](42 * a, 164.5 * a, 42 * a, 164.5 * a, 41 * a, 150 * a);
                c[b[62]](46 * a, 152.5 * a, 46 * a, 152.5 * a, 51 * a, 155 * a);
                c[b[238]]();
                equal(c, item[5]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](52 * a, 39 * a);
                c[b[62]](65.5 * a, 82 * a, 65.5 * a, 82 * a, 79 * a, 125 * a);
                c[b[62]](66 * a, 137.5 * a, 66 * a, 137.5 * a, 53 * a, 150 * a);
                c[b[62]](39 * a, 138 * a, 39 * a, 138 * a, 25 * a, 126 * a);
                c[b[238]]();
                equal(c, item[6], item[7], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](52 * a, 64 * a);
                c[b[62]](60 * a, 92.5 * a, 60 * a, 92.5 * a, 68 * a, 121 * a);
                c[b[62]](61 * a, 127.5 * a, 61 * a, 127.5 * a, 54 * a, 134 * a);
                c[b[62]](46.5 * a, 127.5 * a, 46.5 * a, 127.5 * a, 39 * a, 121 * a);
                c[b[238]]();
                equal(c, item[8]);
                return hash;
            }
        function makeColorMaterial(a, r, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 108 * a;
                hash[b[236]] = 669 * a;
                c[b[150]](20 * a, 20 * a);
                c[b[277]] = r ? 0.5 : 1;
                c[b[33]]();
                c[b[150]](54 * a, 389.5 * a);
                chroma(c, -15 * a, -228.5 * a, 30 * a, 457 * a, 10 * a);
                c[b[210]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](35 * a, 579 * a);
                c[b[62]](47 * a, 587 * a, 61 * a, 584 * a, 71 * a, 579 * a);
                c[b[62]](75 * a, 597.5 * a, 75 * a, 597.5 * a, 79 * a, 616 * a);
                c[b[62]](66.5 * a, 628 * a, 66.5 * a, 628 * a, 54 * a, 640 * a);
                c[b[62]](41 * a, 628.5 * a, 41 * a, 628.5 * a, 28 * a, 617 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](30 * a, 141 * a);
                c[b[62]](40 * a, 136 * a, 40 * a, 136 * a, 50 * a, 131 * a);
                c[b[62]](63 * a, 136 * a, 63 * a, 136 * a, 76 * a, 141 * a);
                c[b[62]](72.5 * a, 161.5 * a, 72.5 * a, 161.5 * a, 69 * a, 182 * a);
                c[b[62]](61.5 * a, 186.5 * a, 61.5 * a, 186.5 * a, 54 * a, 191 * a);
                c[b[62]](45 * a, 186.5 * a, 45 * a, 186.5 * a, 36 * a, 182 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](42 * a, 152 * a);
                c[b[62]](53 * a, 152 * a, 53 * a, 152 * a, 64 * a, 152 * a);
                c[b[62]](62 * a, 171 * a, 62 * a, 176 * a, 55 * a, 177 * a);
                c[b[62]](42 * a, 176 * a, 45 * a, 174 * a, 42 * a, 152 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](52 * a, 28 * a);
                c[b[62]](67.5 * a, 55 * a, 67.5 * a, 55 * a, 83 * a, 82 * a);
                c[b[62]](80 * a, 106.5 * a, 80 * a, 106.5 * a, 77 * a, 131 * a);
                c[b[62]](58 * a, 147 * a, 44 * a, 141 * a, 29 * a, 131 * a);
                c[b[62]](26.5 * a, 106.5 * a, 26.5 * a, 106.5 * a, 24 * a, 82 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](53 * a, 53 * a);
                c[b[62]](61 * a, 70 * a, 61 * a, 70 * a, 69 * a, 87 * a);
                c[b[62]](67 * a, 106 * a, 67 * a, 106 * a, 65 * a, 125 * a);
                c[b[62]](54 * a, 130 * a, 51 * a, 130 * a, 41 * a, 125 * a);
                c[b[62]](39 * a, 105 * a, 39 * a, 105 * a, 37 * a, 85 * a);
                c[b[238]]();
                equal(c, args[0]);
                c[b[150]](-20 * a, -20 * a);
                c[b[277]] = 1;
                c[b[33]]();
                c[b[150]](54 * a, 389.5 * a);
                c[b[65]](0);
                chroma(c, -15 * a, -228.5 * a, 30 * a, 457 * a, 10 * a);
                c[b[210]]();
                equal(c, args[1], args[2], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](35 * a, 579 * a);
                c[b[62]](47 * a, 587 * a, 61 * a, 584 * a, 71 * a, 579 * a);
                c[b[62]](75 * a, 597.5 * a, 75 * a, 597.5 * a, 79 * a, 616 * a);
                c[b[62]](66.5 * a, 628 * a, 66.5 * a, 628 * a, 54 * a, 640 * a);
                c[b[62]](41 * a, 628.5 * a, 41 * a, 628.5 * a, 28 * a, 617 * a);
                c[b[238]]();
                equal(c, args[3], args[4], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](30 * a, 141 * a);
                c[b[62]](40 * a, 136 * a, 40 * a, 136 * a, 50 * a, 131 * a);
                c[b[62]](63 * a, 136 * a, 63 * a, 136 * a, 76 * a, 141 * a);
                c[b[62]](72.5 * a, 161.5 * a, 72.5 * a, 161.5 * a, 69 * a, 182 * a);
                c[b[62]](61.5 * a, 186.5 * a, 61.5 * a, 186.5 * a, 54 * a, 191 * a);
                c[b[62]](45 * a, 186.5 * a, 45 * a, 186.5 * a, 36 * a, 182 * a);
                c[b[238]]();
                equal(c, args[3], args[4], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](42 * a, 152 * a);
                c[b[62]](53 * a, 152 * a, 53 * a, 152 * a, 64 * a, 152 * a);
                c[b[62]](62 * a, 171 * a, 62 * a, 176 * a, 55 * a, 177 * a);
                c[b[62]](42 * a, 176 * a, 45 * a, 174 * a, 42 * a, 152 * a);
                c[b[238]]();
                equal(c, args[5]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](52 * a, 28 * a);
                c[b[62]](67.5 * a, 55 * a, 67.5 * a, 55 * a, 83 * a, 82 * a);
                c[b[62]](80 * a, 106.5 * a, 80 * a, 106.5 * a, 77 * a, 131 * a);
                c[b[62]](58 * a, 147 * a, 44 * a, 141 * a, 29 * a, 131 * a);
                c[b[62]](26.5 * a, 106.5 * a, 26.5 * a, 106.5 * a, 24 * a, 82 * a);
                c[b[238]]();
                equal(c, args[6], args[7], 8 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](53 * a, 53 * a);
                c[b[62]](61 * a, 70 * a, 61 * a, 70 * a, 69 * a, 87 * a);
                c[b[62]](67 * a, 106 * a, 67 * a, 106 * a, 65 * a, 125 * a);
                c[b[62]](54 * a, 130 * a, 51 * a, 130 * a, 41 * a, 125 * a);
                c[b[62]](39 * a, 105 * a, 39 * a, 105 * a, 37 * a, 85 * a);
                c[b[238]]();
                equal(c, args[8]);
                return hash;
            }
        function styling(a, group, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var c = hash[b[9]]('2d');
                hash[b[187]] = 43 * a;
                hash[b[236]] = 209 * a;
                c[b[277]] = group ? 0.5 : 1;
                c[b[150]](0, 10 * a);
                c[b[150]](5 * a, 5 * a);
                c[b[33]]();
                c[b[150]](21 * a, 102.5 * a);
                chroma(c, -4 * a, -76.5 * a, 8 * a, 163 * a, 10 * a);
                c[b[210]]();
                equal(c, options[0]);
                c[b[150]](0, 10 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](20 * a, 10 * a);
                c[b[62]](25 * a, 25.5 * a, 25 * a, 25.5 * a, 30 * a, 41 * a);
                c[b[62]](25.5 * a, 38.5 * a, 25.5 * a, 38.5 * a, 21 * a, 36 * a);
                c[b[62]](16 * a, 38.5 * a, 16 * a, 38.5 * a, 11 * a, 41 * a);
                c[b[238]]();
                equal(c, options[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](21 * a, 1 * a);
                c[b[62]](28 * a, 18 * a, 28 * a, 18 * a, 35 * a, 35 * a);
                c[b[62]](28.5 * a, 32 * a, 28.5 * a, 32 * a, 22 * a, 29 * a);
                c[b[62]](14.5 * a, 32.5 * a, 14.5 * a, 32.5 * a, 7 * a, 36 * a);
                c[b[238]]();
                equal(c, options[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](14 * a, 146 * a);
                c[b[62]](21 * a, 146 * a, 21 * a, 146 * a, 28 * a, 146 * a);
                c[b[62]](27.5 * a, 147.5 * a, 27.5 * a, 147.5 * a, 27 * a, 149 * a);
                c[b[62]](27 * a, 160 * a, 27 * a, 160 * a, 27 * a, 171 * a);
                c[b[62]](27.5 * a, 171.5 * a, 27.5 * a, 171.5 * a, 28 * a, 172 * a);
                c[b[62]](21 * a, 172 * a, 21 * a, 172 * a, 14 * a, 172 * a);
                c[b[62]](14 * a, 171.5 * a, 14 * a, 171.5 * a, 14 * a, 171 * a);
                c[b[62]](14.5 * a, 171.5 * a, 14.5 * a, 171.5 * a, 15 * a, 172 * a);
                c[b[62]](15 * a, 160.5 * a, 15 * a, 160.5 * a, 15 * a, 149 * a);
                c[b[238]]();
                equal(c, options[0]);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](21 * a, 6 * a);
                c[b[62]](26.5 * a, 18.5 * a, 26.5 * a, 18.5 * a, 32 * a, 31 * a);
                c[b[62]](27 * a, 29 * a, 27 * a, 29 * a, 22 * a, 27 * a);
                c[b[238]]();
                equal(c, options[0]);
                c[b[150]](0, -20 * a);
                c[b[277]] = 1;
                c[b[150]](0, 10 * a);
                c[b[150]](-5 * a, -5 * a);
                c[b[33]]();
                c[b[150]](21 * a, 102.5 * a);
                chroma(c, -4 * a, -76.5 * a, 8 * a, 163 * a, 10 * a);
                c[b[210]]();
                equal(c, options[1], options[2], 4 * a);
                c[b[150]](0, 10 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](20 * a, 10 * a);
                c[b[62]](25 * a, 25.5 * a, 25 * a, 25.5 * a, 30 * a, 41 * a);
                c[b[62]](25.5 * a, 38.5 * a, 25.5 * a, 38.5 * a, 21 * a, 36 * a);
                c[b[62]](16 * a, 38.5 * a, 16 * a, 38.5 * a, 11 * a, 41 * a);
                c[b[238]]();
                equal(c, options[3], options[4], 4 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](21 * a, 1 * a);
                c[b[62]](28 * a, 18 * a, 28 * a, 18 * a, 35 * a, 35 * a);
                c[b[62]](28.5 * a, 32 * a, 28.5 * a, 32 * a, 22 * a, 29 * a);
                c[b[62]](14.5 * a, 32.5 * a, 14.5 * a, 32.5 * a, 7 * a, 36 * a);
                c[b[238]]();
                equal(c, options[5], options[6], 4 * a);
                c[b[150]](0, 0 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](14 * a, 146 * a);
                c[b[62]](21 * a, 146 * a, 21 * a, 146 * a, 28 * a, 146 * a);
                c[b[62]](27.5 * a, 147.5 * a, 27.5 * a, 147.5 * a, 27 * a, 149 * a);
                c[b[62]](27 * a, 160 * a, 27 * a, 160 * a, 27 * a, 171 * a);
                c[b[62]](27.5 * a, 171.5 * a, 27.5 * a, 171.5 * a, 28 * a, 172 * a);
                c[b[62]](21 * a, 172 * a, 21 * a, 172 * a, 14 * a, 172 * a);
                c[b[62]](14 * a, 171.5 * a, 14 * a, 171.5 * a, 14 * a, 171 * a);
                c[b[62]](14.5 * a, 171.5 * a, 14.5 * a, 171.5 * a, 15 * a, 172 * a);
                c[b[62]](15 * a, 160.5 * a, 15 * a, 160.5 * a, 15 * a, 149 * a);
                c[b[238]]();
                equal(c, options[1], options[2], 4 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](21 * a, 6 * a);
                c[b[62]](26.5 * a, 18.5 * a, 26.5 * a, 18.5 * a, 32 * a, 31 * a);
                c[b[62]](27 * a, 29 * a, 27 * a, 29 * a, 22 * a, 27 * a);
                c[b[238]]();
                equal(c, options[8]);
                return hash;
            }
        function r_ref(a, o, vals)
            /*Scope Closed:false | writes:true*/
            {
                o = document('canvas');
                var c = o[b[9]]('2d');
                o[b[187]] = 200 * a;
                o[b[236]] = 200 * a;
                c[b[33]]();
                c[b[150]](112 * a, 158 * a);
                chroma(c, -86.5 * a, -86 * a, 150 * a, 35 * a, 20 * a);
                c[b[210]]();
                equal(c, vals[0]);
                c[b[33]]();
                c[b[150]](170 * a, 100 * a);
                chroma(c, -86.5 * a, -86 * a, 35 * a, 150 * a, 20 * a);
                c[b[210]]();
                equal(c, vals[0]);
                return o;
            }
        function autoMergeFolder(radius, node, testCase)
            /*Scope Closed:false | writes:true*/
            {
                node = document('canvas');
                var ctx = node[b[9]]('2d');
                node[b[187]] = 118 * radius;
                node[b[236]] = 129 * radius;
                ctx[b[33]]();
                ctx[b[150]](90 * radius, 90 * radius);
                chroma(ctx, -86.5 * radius, -86 * radius, 110 * radius, 110 * radius, 15 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[0], testCase[1], 4);
                ctx[b[33]]();
                chroma(ctx, 30 * radius, 115 * radius, 60 * radius, 5 * radius, 15 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[2], testCase[3], 4);
                ctx[b[33]]();
                chroma(ctx, 50 * radius, 117 * radius, 20 * radius, 10 * radius, 15 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[2]);
                return node;
            }
        function getClosestByTagNames(a, el, test)
            /*Scope Closed:false | writes:true*/
            {
                el = document('canvas');
                var c = el[b[9]]('2d');
                el[b[187]] = 165 * a;
                el[b[236]] = 123 * a;
                c[b[33]]();
                c[b[150]](81 * a, 65 * a);
                chroma(c, -78 * a, -54.5 * a, 156 * a, 109 * a, 20 * a);
                c[b[210]]();
                equal(c, test[0]);
                c[b[33]]();
                c[b[150]](81 * a, 58 * a);
                chroma(c, -78 * a, -54.5 * a, 156 * a, 109 * a, 20 * a);
                c[b[210]]();
                equal(c, test[1], test[2], 4);
                c[b[33]]();
                c[b[150]](81 * a, 58 * a);
                chroma(c, -69 * a, -47 * a, 138 * a, 93 * a, 15 * a);
                c[b[210]]();
                equal(c, test[3], test[4], 4);
                c[b[33]]();
                c[b[150]](79 * a, 54 * a);
                chroma(c, -34 * a, -40 * a, 68 * a, 88 * a, 13 * a);
                c[b[210]]();
                equal(c, void 0, test[5], 4);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](44 * a, 13 * a);
                c[b[62]](43.5 * a, 55 * a, 43.5 * a, 55 * a, 43 * a, 101 * a);
                c[b[238]]();
                equal(c, void 0, test[6], 4);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](115 * a, 13 * a);
                c[b[62]](115 * a, 56 * a, 115 * a, 56 * a, 115 * a, 101 * a);
                c[b[238]]();
                equal(c, void 0, test[6], 4);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](35 * a, 6 * a);
                c[b[62]](35 * a, 56 * a, 36 * a, 109 * a, 35 * a, 110 * a);
                c[b[238]]();
                equal(c, void 0, test[7], 4);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](123 * a, 6 * a);
                c[b[62]](123 * a, 56 * a, 123 * a, 56 * a, 123 * a, 110 * a);
                c[b[238]]();
                equal(c, void 0, test[7], 4);
                c[b[33]]();
                c[b[150]](79 * a, 113 * a);
                chroma(c, -18 * a, -2 * a, 36 * a, 4 * a, 20 * a);
                c[b[210]]();
                equal(c, void 0, test[8], 4);
                c[b[33]]();
                c[b[150]](75 * a, 118 * a);
                chroma(c, -6 * a, -2.5 * a, 20 * a, 5 * a, 20 * a);
                c[b[210]]();
                equal(c, test[8]);
                return el;
            }
        function _getSuperest(radius, cmp, testCase)
            /*Scope Closed:false | writes:true*/
            {
                cmp = document('canvas');
                var ctx = cmp[b[9]]('2d');
                cmp[b[187]] = 92 * radius;
                cmp[b[236]] = 108 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](31 * radius, 10 * radius);
                ctx[b[62]](37 * radius, 2 * radius, 49 * radius, 0 * radius, 61 * radius, 15 * radius);
                ctx[b[62]](81 * radius, 31 * radius, 78 * radius, 25 * radius, 79 * radius, 37 * radius);
                ctx[b[62]](76 * radius, 44 * radius, 81 * radius, 56 * radius, 85 * radius, 63 * radius);
                ctx[b[62]](91 * radius, 71 * radius, 90 * radius, 78 * radius, 83 * radius, 84 * radius);
                ctx[b[62]](60 * radius, 98 * radius, 67 * radius, 95 * radius, 57 * radius, 102 * radius);
                ctx[b[62]](47 * radius, 106 * radius, 43 * radius, 106 * radius, 31 * radius, 98 * radius);
                ctx[b[62]](22 * radius, 91 * radius, 17 * radius, 89 * radius, 7 * radius, 84 * radius);
                ctx[b[62]](1 * radius, 77 * radius, 4 * radius, 73 * radius, 7 * radius, 60 * radius);
                ctx[b[62]](11 * radius, 50 * radius, 5 * radius, 32 * radius, 15 * radius, 27 * radius);
                ctx[b[62]](26 * radius, 18 * radius, 26 * radius, 24 * radius, 31 * radius, 10 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 4);
                return cmp;
            }
        function Feyn(radius, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 60 * radius;
                hash[b[236]] = 60 * radius;
                ctx[b[150]](-25 * radius, -25 * radius);
                ctx[b[150]](0, 5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](24 * radius, 50 * radius);
                ctx[b[62]](32.5 * radius, 54.5 * radius, 32.5 * radius, 54.5 * radius, 41 * radius, 59 * radius);
                ctx[b[62]](57 * radius, 47 * radius, 57 * radius, 47 * radius, 73 * radius, 35 * radius);
                ctx[b[62]](57 * radius, 53 * radius, 57 * radius, 53 * radius, 41 * radius, 71 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[150]](0, -5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](24 * radius, 50 * radius);
                ctx[b[62]](32.5 * radius, 54.5 * radius, 32.5 * radius, 54.5 * radius, 41 * radius, 59 * radius);
                ctx[b[62]](57 * radius, 47 * radius, 57 * radius, 47 * radius, 73 * radius, 35 * radius);
                ctx[b[62]](57 * radius, 53 * radius, 57 * radius, 53 * radius, 41 * radius, 71 * radius);
                ctx[b[238]]();
                equal(ctx, options[1]);
                return hash;
            }
        function doTestEvalForSecureWindow(radius, cmp, testCase)
            /*Scope Closed:false | writes:true*/
            {
                cmp = document('canvas');
                var ctx = cmp[b[9]]('2d');
                cmp[b[187]] = 151 * radius;
                cmp[b[236]] = 80 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](133 * radius, 54 * radius);
                ctx[b[62]](136 * radius, 18 * radius, 129 * radius, 18 * radius, 114 * radius, 13 * radius);
                ctx[b[62]](51 * radius, 0 * radius, 36 * radius, 16 * radius, 34 * radius, 16 * radius);
                ctx[b[62]](8 * radius, 28 * radius, 22 * radius, 56 * radius, 21 * radius, 57 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[2], testCase[3], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](130 * radius, 40 * radius);
                ctx[b[62]](132 * radius, 35 * radius, 132 * radius, 30 * radius, 132 * radius, 29 * radius);
                ctx[b[62]](145 * radius, 38 * radius, 144 * radius, 43 * radius, 137 * radius, 54 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](20 * radius, 33 * radius);
                ctx[b[62]](24 * radius, 44 * radius, 215 * radius, 39 * radius, 23 * radius, 44 * radius);
                ctx[b[62]](19 * radius, 49 * radius, 19 * radius, 49 * radius, 15 * radius, 54 * radius);
                ctx[b[62]](4 * radius, 43 * radius, 10 * radius, 35 * radius, 20 * radius, 32 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 4);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](18 * radius, 52 * radius);
                ctx[b[62]](24 * radius, 31 * radius, 34 * radius, 25 * radius, 75 * radius, 23 * radius);
                ctx[b[62]](130 * radius, 24 * radius, 129 * radius, 32 * radius, 134 * radius, 51 * radius);
                ctx[b[62]](138 * radius, 70 * radius, 126 * radius, 72 * radius, 90 * radius, 73 * radius);
                ctx[b[62]](18 * radius, 72 * radius, 15 * radius, 68 * radius, 18 * radius, 54 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0], testCase[1], 4);
                return cmp;
            }
        function setNoiseBackground(radius, height, width)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 138 * radius;
                hash[b[236]] = 133 * radius;
                ctx[b[277]] = height ? 0.3 : 1;
                ctx[b[150]](0, 5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](26 * radius, 79.640625 * radius);
                ctx[b[62]](13 * radius, 84.640625 * radius, 9 * radius, 86.640625 * radius, 7 * radius, 78.640625 * radius);
                ctx[b[62]](6 * radius, 69.640625 * radius, 15 * radius, 67.640625 * radius, 31 * radius, 62.640625 * radius);
                ctx[b[62]](63 * radius, 55.640625 * radius, 85 * radius, 57.640625 * radius, 104 * radius, 63.640625 * radius);
                ctx[b[62]](131 * radius, 69.640625 * radius, 132 * radius, 71.640625 * radius, 131 * radius, 78.640625 * radius);
                ctx[b[62]](131 * radius, 91.640625 * radius, 112 * radius, 80.640625 * radius, 91 * radius, 75.640625 * radius);
                ctx[b[62]](51 * radius, 70.640625 * radius, 45 * radius, 74.640625 * radius, 28 * radius, 78.640625 * radius);
                ctx[b[238]]();
                equal(ctx, width[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](8 * radius, 82.640625 * radius);
                ctx[b[62]](40 * radius, 107.640625 * radius, 53 * radius, 104.640625 * radius, 67 * radius, 106.640625 * radius);
                ctx[b[62]](101 * radius, 103.640625 * radius, 117 * radius, 93.640625 * radius, 127 * radius, 84.640625 * radius);
                ctx[b[62]](135 * radius, 95.640625 * radius, 131 * radius, 107.640625 * radius, 110 * radius, 118.640625 * radius);
                ctx[b[62]](78 * radius, 129.640625 * radius, 67 * radius, 130.640625 * radius, 27 * radius, 119.640625 * radius);
                ctx[b[62]](0 * radius, 105.640625 * radius, 8 * radius, 83.640625 * radius, 10 * radius, 84.640625 * radius);
                ctx[b[238]]();
                equal(ctx, width[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -5 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](8 * radius, 73.640625 * radius);
                ctx[b[62]](7 * radius, 23.640625 * radius, 33 * radius, 19.640625 * radius, 71 * radius, 17.640625 * radius);
                ctx[b[62]](129 * radius, 19.640625 * radius, 130 * radius, 45.640625 * radius, 130 * radius, 76.640625 * radius);
                ctx[b[62]](90 * radius, 63.640625 * radius, 85 * radius, 63.640625 * radius, 73 * radius, 63.640625 * radius);
                ctx[b[62]](38 * radius, 63.640625 * radius, 33 * radius, 66.640625 * radius, 8 * radius, 73.640625 * radius);
                ctx[b[238]]();
                equal(ctx, width[1], width[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](72 * radius, 28.640625 * radius);
                ctx[b[62]](51 * radius, 25.640625 * radius, 56 * radius, 7.640625 * radius, 70 * radius, 5.640625 * radius);
                ctx[b[62]](94 * radius, 7.640625 * radius, 87 * radius, 29.640625 * radius, 72 * radius, 28.640625 * radius);
                ctx[b[238]]();
                equal(ctx, width[3], width[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](51 * radius, 26.640625 * radius);
                ctx[b[62]](42 * radius, 29.640625 * radius, 43 * radius, 31.640625 * radius, 42 * radius, 37.640625 * radius);
                equal(ctx, void 0, width[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](90 * radius, 26.640625 * radius);
                ctx[b[62]](100 * radius, 28.640625 * radius, 98 * radius, 34.640625 * radius, 99 * radius, 38.640625 * radius);
                equal(ctx, void 0, width[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](26 * radius, 79.640625 * radius);
                ctx[b[62]](13 * radius, 84.640625 * radius, 9 * radius, 86.640625 * radius, 7 * radius, 78.640625 * radius);
                ctx[b[62]](6 * radius, 69.640625 * radius, 15 * radius, 67.640625 * radius, 31 * radius, 62.640625 * radius);
                ctx[b[62]](63 * radius, 55.640625 * radius, 85 * radius, 57.640625 * radius, 104 * radius, 63.640625 * radius);
                ctx[b[62]](131 * radius, 69.640625 * radius, 132 * radius, 71.640625 * radius, 131 * radius, 78.640625 * radius);
                ctx[b[62]](131 * radius, 91.640625 * radius, 112 * radius, 80.640625 * radius, 91 * radius, 75.640625 * radius);
                ctx[b[62]](51 * radius, 70.640625 * radius, 45 * radius, 74.640625 * radius, 28 * radius, 78.640625 * radius);
                ctx[b[238]]();
                equal(ctx, width[3], width[4], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](8 * radius, 82.640625 * radius);
                ctx[b[62]](40 * radius, 107.640625 * radius, 53 * radius, 104.640625 * radius, 67 * radius, 106.640625 * radius);
                ctx[b[62]](101 * radius, 103.640625 * radius, 117 * radius, 93.640625 * radius, 127 * radius, 84.640625 * radius);
                ctx[b[62]](135 * radius, 95.640625 * radius, 131 * radius, 107.640625 * radius, 110 * radius, 118.640625 * radius);
                ctx[b[62]](78 * radius, 129.640625 * radius, 67 * radius, 130.640625 * radius, 27 * radius, 119.640625 * radius);
                ctx[b[62]](0 * radius, 105.640625 * radius, 8 * radius, 83.640625 * radius, 10 * radius, 84.640625 * radius);
                ctx[b[238]]();
                equal(ctx, width[3], width[4], 4 * radius);
                return hash;
            }
        function create(ratio, name, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var c = document('canvas');
                var ctx = c[b[9]]('2d');
                var f = 170 * ratio;
                var v = 172 * ratio;
                c[b[187]] = f;
                c[b[236]] = v;
                ctx[b[150]](f / 2, v / 2 + 7 * ratio);
                ctx[b[277]] = name ? 0.5 : 0;
                callback(ctx, 0, 0, 60 * ratio);
                equal(ctx, testCase[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -7 * ratio);
                ctx[b[33]]();
                name = 0;
                for (; 10 > name; name++) {
                    ctx[b[65]](Math[b[46]] / 5);
                    ctx[b[33]]();
                    ctx[b[150]](65 * ratio, 0);
                    get(ctx, 3, 20 * ratio, 4 * ratio);
                    equal(ctx, testCase[1], testCase[2], 4 * ratio);
                    ctx[b[210]]();
                }
                ctx[b[210]]();
                callback(ctx, 0, 0, 60 * ratio, 0);
                equal(ctx, testCase[3], testCase[4], 4 * ratio);
                callback(ctx, 0, 0, 40 * ratio);
                equal(ctx, testCase[5]);
                callback(ctx, 0, 0, 25 * ratio);
                equal(ctx, testCase[6], testCase[7], 8 * ratio);
                return c;
            }
        function parse(d, test)
            /*Scope Closed:false | writes:true*/
            {
                var data = document('canvas');
                var a = data[b[9]]('2d');
                var ad = 170 * d;
                var expected = 172 * d;
                data[b[187]] = ad;
                data[b[236]] = expected;
                a[b[150]](ad / 2, expected / 2);
                a[b[33]]();
                ad = 0;
                for (; 10 > ad; ad++) {
                    a[b[65]](Math[b[46]] / 5);
                    a[b[33]]();
                    a[b[150]](65 * d, 0);
                    get(a, 3, 18 * d, 4 * d);
                    equal(a, test[0]);
                    a[b[210]]();
                }
                a[b[210]]();
                callback(a, 0, 0, 40 * d, 0);
                equal(a, void 0, test[0], 6 * d);
                callback(a, 0, 0, 20 * d, 0);
                equal(a, test[0]);
                return data;
            }
        function hashJSObj(radius, result, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 170 * radius;
                hash[b[236]] = 170 * radius;
                ctx[b[277]] = result ? 0.5 : 1;
                ctx[b[150]](0, 5 * radius);
                ctx[b[33]]();
                ctx[b[150]](85 * radius, 88 * radius);
                ctx[b[65]](1.4);
                get(ctx, 7, 60 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](85 * radius, 80 * radius);
                result = 0;
                for (; 10 > result; result++) {
                    ctx[b[65]](Math[b[46]] / 5);
                    ctx[b[33]]();
                    ctx[b[150]](65 * radius, 0);
                    get(ctx, 3, 21 * radius, 4 * radius);
                    equal(ctx, testCase[1], testCase[2], 4 * radius);
                    ctx[b[210]]();
                }
                ctx[b[33]]();
                ctx[b[150]](0 * radius, 0 * radius);
                ctx[b[65]](1.4);
                get(ctx, 7, 60 * radius, 10 * radius);
                equal(ctx, testCase[3], testCase[4], 4 * radius);
                ctx[b[65]](0.64);
                get(ctx, 7, 40 * radius, 10 * radius);
                equal(ctx, testCase[5], testCase[6], 4 * radius);
                ctx[b[65]](0.12);
                get(ctx, 7, 23 * radius, 5 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[7]);
                return hash;
            }
        function runOnEvent(radius, options, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 170 * radius;
                hash[b[236]] = 170 * radius;
                ctx[b[277]] = options ? 0.5 : 1;
                ctx[b[150]](0, 3 * radius);
                ctx[b[33]]();
                ctx[b[150]](85 * radius, 95 * radius);
                ctx[b[65]](1.4);
                get(ctx, 7, 60 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, args[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](85 * radius, 82 * radius);
                options = 0;
                for (; 10 > options; options++) {
                    ctx[b[65]](Math[b[46]] / 5);
                    ctx[b[33]]();
                    ctx[b[150]](65 * radius, 0);
                    get(ctx, 3, 21 * radius, 4 * radius);
                    equal(ctx, args[1], args[2], 4 * radius);
                    ctx[b[210]]();
                }
                ctx[b[33]]();
                ctx[b[150]](0 * radius, 0 * radius);
                ctx[b[65]](1);
                get(ctx, 8, 60 * radius, 10 * radius);
                equal(ctx, args[3], args[4], 4 * radius);
                ctx[b[65]](0.56);
                get(ctx, 8, 40 * radius, 10 * radius);
                equal(ctx, args[5], args[6], 4 * radius);
                ctx[b[65]](0.28);
                get(ctx, 8, 28 * radius, 8 * radius);
                equal(ctx, args[7]);
                ctx[b[210]]();
                return hash;
            }
        function xtract_init_bark(N, sampleRate, bands)
            /*Scope Closed:false | writes:true*/
            {
                var band_limits = document('canvas');
                var c = band_limits[b[9]]('2d');
                band_limits[b[187]] = 170 * N;
                band_limits[b[236]] = 170 * N;
                c[b[150]](0, 3 * N);
                c[b[277]] = sampleRate ? 0.5 : 1;
                c[b[33]]();
                c[b[150]](85 * N, 95 * N);
                c[b[65]](1.4);
                get(c, 7, 60 * N, 10 * N);
                c[b[210]]();
                equal(c, bands[0]);
                c[b[277]] = 1;
                c[b[150]](85 * N, 82 * N);
                sampleRate = 0;
                for (; 10 > sampleRate; sampleRate++) {
                    c[b[65]](Math[b[46]] / 5);
                    c[b[33]]();
                    c[b[150]](65 * N, 0);
                    get(c, 3, 21 * N, 4 * N);
                    equal(c, bands[1], bands[2], 4 * N);
                    c[b[210]]();
                }
                c[b[33]]();
                c[b[150]](0 * N, 0 * N);
                c[b[65]](0.2);
                get(c, 9, 60 * N, 10 * N);
                equal(c, bands[3], bands[4], 4 * N);
                c[b[65]](-0.32);
                get(c, 9, 38 * N, 10 * N);
                equal(c, bands[5], bands[6], 4 * N);
                c[b[65]](0.68);
                get(c, 9, 20 * N, 8 * N);
                equal(c, bands[7], bands[8], 6 * N);
                c[b[210]]();
                return band_limits;
            }
        function _drawTopRoundedRect(radius, height, width)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 69 * radius;
                hash[b[236]] = 120 * radius;
                ctx[b[277]] = height ? 0.5 : 1;
                ctx[b[33]]();
                ctx[b[150]](30 * radius, 84 * radius);
                chroma(ctx, -6 * radius, -66.5 * radius, 8 * radius, 100 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, width[0]);
                ctx[b[33]]();
                ctx[b[150]](30 * radius, 45 * radius);
                chroma(ctx, -9.5 * radius, -6.5 * radius, 16 * radius, 13 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, width[0]);
                ctx[b[33]]();
                ctx[b[150]](30 * radius, 17 * radius);
                chroma(ctx, -7.5 * radius, -5.5 * radius, 12 * radius, 11 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, width[0]);
                ctx[b[33]]();
                ctx[b[150]](30 * radius, 31 * radius);
                chroma(ctx, -26 * radius, -14.5 * radius, 52 * radius, 29 * radius, 5 * radius);
                ctx[b[210]]();
                equal(ctx, width[0]);
                ctx[b[277]] = 1;
                ctx[b[33]]();
                ctx[b[150]](36 * radius, 79.140625 * radius);
                chroma(ctx, -6 * radius, -66.5 * radius, 8 * radius, 100 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, width[1], width[2], 3 * radius);
                ctx[b[33]]();
                ctx[b[150]](35 * radius, 40.140625 * radius);
                chroma(ctx, -9.5 * radius, -6.5 * radius, 16 * radius, 13 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, width[3], width[4], 3 * radius);
                ctx[b[33]]();
                ctx[b[150]](35 * radius, 12.140625 * radius);
                chroma(ctx, -7.5 * radius, -5.5 * radius, 12 * radius, 11 * radius, 10 * radius);
                ctx[b[210]]();
                equal(ctx, width[3], width[4], 3 * radius);
                ctx[b[33]]();
                ctx[b[150]](34.5 * radius, 26.140625 * radius);
                chroma(ctx, -26 * radius, -14.5 * radius, 52 * radius, 29 * radius, 5 * radius);
                ctx[b[210]]();
                equal(ctx, width[3], width[4], 3 * radius);
                return hash;
            }
        function VisualRouter(radius)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 321 * radius;
                hash[b[236]] = 345 * radius;
                ctx[b[150]](0, 5 * radius);
                ctx[b[150]](0, 20 * radius);
                callback(ctx, 160.5 * radius, 159.5 * radius, 156.39595138242822 * radius);
                equal(ctx, '#322413', '#322413', 4 * radius);
                ctx[b[150]](0, -20 * radius);
                callback(ctx, 160.5 * radius, 159.5 * radius, 156.39595138242822 * radius);
                equal(ctx, '#392C16', '#5E3E1A', 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](31.999969482421875 * radius, 163.07290649414062 * radius);
                ctx[b[62]](22.999969482421875 * radius, 67.07290649414062 * radius, 106 * radius, 20.072906494140625 * radius, 162 * radius, 23.072906494140625 * radius);
                ctx[b[62]](269.9999694824219 * radius, 31.072906494140625 * radius, 292.9999694824219 * radius, 120.07290649414062 * radius, 294.9999694824219 * radius, 161.07290649414062 * radius);
                ctx[b[62]](165.49996948242188 * radius, 162.07290649414062 * radius, 165.49996948242188 * radius, 162.07290649414062 * radius, 35.999969482421875 * radius, 163.07290649414062 * radius);
                ctx[b[238]]();
                equal(ctx, '#12432D');
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](32.999969482421875 * radius, 165.07290649414062 * radius);
                ctx[b[62]](16.999969482421875 * radius, 221.07290649414062 * radius, 85 * radius, 289.0729064941406 * radius, 156 * radius, 294.0729064941406 * radius);
                ctx[b[62]](263.9999694824219 * radius, 293.0729064941406 * radius, 295.9999694824219 * radius, 199.07290649414062 * radius, 294.9999694824219 * radius, 159.07290649414062 * radius);
                ctx[b[238]]();
                equal(ctx, '#3A2A0D');
                callback(ctx, 161 * radius, 158.07290649414062 * radius, 133.4053971921676 * radius);
                equal(ctx, void 0, '#5E3E1A', 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](31.999969482421875 * radius, 161.62844848632812 * radius);
                ctx[b[62]](162.49996948242188 * radius, 161.62844848632812 * radius, 162.49996948242188 * radius, 161.62844848632812 * radius, 292.9999694824219 * radius, 161.62844848632812 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#5E3E1A', 12 * radius);
                ctx[b[150]](0, 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](66 * radius, 158.29513549804688 * radius);
                ctx[b[62]](86 * radius, 158.29513549804688 * radius, 86 * radius, 158.29513549804688 * radius, 106 * radius, 158.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#c7a726', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](57.999969482421875 * radius, 117.29513549804688 * radius);
                ctx[b[62]](85 * radius, 128.29513549804688 * radius, 85 * radius, 128.29513549804688 * radius, 113 * radius, 139.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#c7a726', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](95 * radius, 90.29513549804688 * radius);
                ctx[b[62]](112 * radius, 105.79513549804688 * radius, 112 * radius, 105.79513549804688 * radius, 129 * radius, 121.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#c7a726', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](116 * radius, 52.850677490234375 * radius);
                ctx[b[62]](130 * radius, 83.85067749023438 * radius, 130 * radius, 83.85067749023438 * radius, 144 * radius, 114.85067749023438 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#c7a726', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](159 * radius, 61.295135498046875 * radius);
                ctx[b[62]](160.49996948242188 * radius, 92.29513549804688 * radius, 160.49996948242188 * radius, 92.29513549804688 * radius, 160 * radius, 123.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#c7a726', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](203 * radius, 51.295135498046875 * radius);
                ctx[b[62]](190.49996948242188 * radius, 83.29513549804688 * radius, 190.49996948242188 * radius, 83.29513549804688 * radius, 176 * radius, 115.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#c7a726', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](225 * radius, 89.29513549804688 * radius);
                ctx[b[62]](210.49996948242188 * radius, 104.79513549804688 * radius, 210.49996948242188 * radius, 104.79513549804688 * radius, 194 * radius, 120.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#c7a726', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](266.9999694824219 * radius, 112.29513549804688 * radius);
                ctx[b[62]](233.49996948242188 * radius, 127.29513549804688 * radius, 233.49996948242188 * radius, 127.29513549804688 * radius, 199 * radius, 142.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#c7a726', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](256.9999694824219 * radius, 155.29513549804688 * radius);
                ctx[b[62]](238.49996948242188 * radius, 156.29513549804688 * radius, 238.49996948242188 * radius, 156.29513549804688 * radius, 219 * radius, 157.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#c7a726', 12 * radius);
                ctx[b[150]](0, -8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](66 * radius, 158.29513549804688 * radius);
                ctx[b[62]](86 * radius, 158.29513549804688 * radius, 86 * radius, 158.29513549804688 * radius, 106 * radius, 158.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#EDCE4F', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](57.999969482421875 * radius, 117.29513549804688 * radius);
                ctx[b[62]](85 * radius, 128.29513549804688 * radius, 85 * radius, 128.29513549804688 * radius, 113 * radius, 139.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#EDCE4F', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](95 * radius, 90.29513549804688 * radius);
                ctx[b[62]](112 * radius, 105.79513549804688 * radius, 112 * radius, 105.79513549804688 * radius, 129 * radius, 121.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#EDCE4F', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](116 * radius, 52.850677490234375 * radius);
                ctx[b[62]](130 * radius, 83.85067749023438 * radius, 130 * radius, 83.85067749023438 * radius, 144 * radius, 114.85067749023438 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#EDCE4F', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](159 * radius, 61.295135498046875 * radius);
                ctx[b[62]](160.49996948242188 * radius, 92.29513549804688 * radius, 160.49996948242188 * radius, 92.29513549804688 * radius, 160 * radius, 123.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#EDCE4F', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](203 * radius, 51.295135498046875 * radius);
                ctx[b[62]](190.49996948242188 * radius, 83.29513549804688 * radius, 190.49996948242188 * radius, 83.29513549804688 * radius, 176 * radius, 115.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#EDCE4F', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](225 * radius, 89.29513549804688 * radius);
                ctx[b[62]](210.49996948242188 * radius, 104.79513549804688 * radius, 210.49996948242188 * radius, 104.79513549804688 * radius, 194 * radius, 120.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#EDCE4F', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](266.9999694824219 * radius, 112.29513549804688 * radius);
                ctx[b[62]](233.49996948242188 * radius, 127.29513549804688 * radius, 233.49996948242188 * radius, 127.29513549804688 * radius, 199 * radius, 142.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#EDCE4F', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](256.9999694824219 * radius, 155.29513549804688 * radius);
                ctx[b[62]](238.49996948242188 * radius, 156.29513549804688 * radius, 238.49996948242188 * radius, 156.29513549804688 * radius, 219 * radius, 157.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#EDCE4F', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](94.00003051757812 * radius, 164.40341186523438 * radius);
                ctx[b[62]](162.50003051757812 * radius, 164.40341186523438 * radius, 230.00003051757812 * radius, 165.40341186523438 * radius, 231.00003051757812 * radius, 164.40341186523438 * radius);
                ctx[b[62]](214.00003051757812 * radius, 267.4034118652344 * radius, 92.00003051757812 * radius, 243.40341186523438 * radius, 93.00003051757812 * radius, 165.40341186523438 * radius);
                ctx[b[238]]();
                equal(ctx, '#704618', '#5D3D1A', 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](96 * radius, 166 * radius);
                ctx[b[62]](88 * radius, 117 * radius, 129 * radius, 92 * radius, 161 * radius, 91 * radius);
                ctx[b[62]](201 * radius, 90 * radius, 223 * radius, 121 * radius, 230 * radius, 161 * radius);
                ctx[b[238]]();
                equal(ctx, '#ECBE35', '#EDCE4F', 8 * radius);
                callback(ctx, 160.00003051757812 * radius, 166.49432373046875 * radius, 28.30194339616981 * radius);
                equal(ctx, '#392C16', '#5E3E1A', 10 * radius);
                return hash;
            }
        function createMapDataSource(radius)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 321 * radius;
                hash[b[236]] = 345 * radius;
                ctx[b[150]](0, 5 * radius);
                ctx[b[150]](0, 20 * radius);
                callback(ctx, 160.5 * radius, 159.5 * radius, 156.39595138242822 * radius);
                equal(ctx, '#322413', '#322413', 4 * radius);
                ctx[b[150]](0, -20 * radius);
                callback(ctx, 160.5 * radius, 159.5 * radius, 156.39595138242822 * radius);
                equal(ctx, '#392C16', '#5E3E1A', 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](31.999969482421875 * radius, 163.07290649414062 * radius);
                ctx[b[62]](22.999969482421875 * radius, 67.07290649414062 * radius, 106 * radius, 20.072906494140625 * radius, 162 * radius, 23.072906494140625 * radius);
                ctx[b[62]](269.9999694824219 * radius, 31.072906494140625 * radius, 292.9999694824219 * radius, 120.07290649414062 * radius, 294.9999694824219 * radius, 161.07290649414062 * radius);
                ctx[b[62]](165.49996948242188 * radius, 162.07290649414062 * radius, 165.49996948242188 * radius, 162.07290649414062 * radius, 35.999969482421875 * radius, 163.07290649414062 * radius);
                ctx[b[238]]();
                equal(ctx, '#3A2A0D');
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](32.999969482421875 * radius, 165.07290649414062 * radius);
                ctx[b[62]](16.999969482421875 * radius, 221.07290649414062 * radius, 85 * radius, 289.0729064941406 * radius, 156 * radius, 294.0729064941406 * radius);
                ctx[b[62]](263.9999694824219 * radius, 293.0729064941406 * radius, 295.9999694824219 * radius, 199.07290649414062 * radius, 294.9999694824219 * radius, 159.07290649414062 * radius);
                ctx[b[238]]();
                equal(ctx, '#071A1B');
                callback(ctx, 161 * radius, 158.07290649414062 * radius, 133.4053971921676 * radius);
                equal(ctx, void 0, '#5E3E1A', 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](31.999969482421875 * radius, 161.62844848632812 * radius);
                ctx[b[62]](162.49996948242188 * radius, 161.62844848632812 * radius, 162.49996948242188 * radius, 161.62844848632812 * radius, 292.9999694824219 * radius, 161.62844848632812 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#5E3E1A', 12 * radius);
                ctx[b[150]](0, 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](66 * radius, 158.29513549804688 * radius);
                ctx[b[62]](86 * radius, 158.29513549804688 * radius, 86 * radius, 158.29513549804688 * radius, 106 * radius, 158.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#281C08', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](57.999969482421875 * radius, 117.29513549804688 * radius);
                ctx[b[62]](85 * radius, 128.29513549804688 * radius, 85 * radius, 128.29513549804688 * radius, 113 * radius, 139.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#281C08', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](95 * radius, 90.29513549804688 * radius);
                ctx[b[62]](112 * radius, 105.79513549804688 * radius, 112 * radius, 105.79513549804688 * radius, 129 * radius, 121.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#281C08', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](116 * radius, 52.850677490234375 * radius);
                ctx[b[62]](130 * radius, 83.85067749023438 * radius, 130 * radius, 83.85067749023438 * radius, 144 * radius, 114.85067749023438 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#281C08', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](159 * radius, 61.295135498046875 * radius);
                ctx[b[62]](160.49996948242188 * radius, 92.29513549804688 * radius, 160.49996948242188 * radius, 92.29513549804688 * radius, 160 * radius, 123.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#281C08', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](203 * radius, 51.295135498046875 * radius);
                ctx[b[62]](190.49996948242188 * radius, 83.29513549804688 * radius, 190.49996948242188 * radius, 83.29513549804688 * radius, 176 * radius, 115.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#281C08', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](225 * radius, 89.29513549804688 * radius);
                ctx[b[62]](210.49996948242188 * radius, 104.79513549804688 * radius, 210.49996948242188 * radius, 104.79513549804688 * radius, 194 * radius, 120.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#281C08', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](266.9999694824219 * radius, 112.29513549804688 * radius);
                ctx[b[62]](233.49996948242188 * radius, 127.29513549804688 * radius, 233.49996948242188 * radius, 127.29513549804688 * radius, 199 * radius, 142.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#281C08', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](256.9999694824219 * radius, 155.29513549804688 * radius);
                ctx[b[62]](238.49996948242188 * radius, 156.29513549804688 * radius, 238.49996948242188 * radius, 156.29513549804688 * radius, 219 * radius, 157.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#281C08', 12 * radius);
                ctx[b[150]](0, -8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](66 * radius, 158.29513549804688 * radius);
                ctx[b[62]](86 * radius, 158.29513549804688 * radius, 86 * radius, 158.29513549804688 * radius, 106 * radius, 158.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#5E3C10', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](57.999969482421875 * radius, 117.29513549804688 * radius);
                ctx[b[62]](85 * radius, 128.29513549804688 * radius, 85 * radius, 128.29513549804688 * radius, 113 * radius, 139.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#5E3C10', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](95 * radius, 90.29513549804688 * radius);
                ctx[b[62]](112 * radius, 105.79513549804688 * radius, 112 * radius, 105.79513549804688 * radius, 129 * radius, 121.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#5E3C10', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](116 * radius, 52.850677490234375 * radius);
                ctx[b[62]](130 * radius, 83.85067749023438 * radius, 130 * radius, 83.85067749023438 * radius, 144 * radius, 114.85067749023438 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#5E3C10', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](159 * radius, 61.295135498046875 * radius);
                ctx[b[62]](160.49996948242188 * radius, 92.29513549804688 * radius, 160.49996948242188 * radius, 92.29513549804688 * radius, 160 * radius, 123.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#5E3C10', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](203 * radius, 51.295135498046875 * radius);
                ctx[b[62]](190.49996948242188 * radius, 83.29513549804688 * radius, 190.49996948242188 * radius, 83.29513549804688 * radius, 176 * radius, 115.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#5E3C10', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](225 * radius, 89.29513549804688 * radius);
                ctx[b[62]](210.49996948242188 * radius, 104.79513549804688 * radius, 210.49996948242188 * radius, 104.79513549804688 * radius, 194 * radius, 120.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#5E3C10', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](266.9999694824219 * radius, 112.29513549804688 * radius);
                ctx[b[62]](233.49996948242188 * radius, 127.29513549804688 * radius, 233.49996948242188 * radius, 127.29513549804688 * radius, 199 * radius, 142.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#5E3C10', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](256.9999694824219 * radius, 155.29513549804688 * radius);
                ctx[b[62]](238.49996948242188 * radius, 156.29513549804688 * radius, 238.49996948242188 * radius, 156.29513549804688 * radius, 219 * radius, 157.29513549804688 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, '#5E3C10', 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](96 * radius, 166 * radius);
                ctx[b[62]](88 * radius, 117 * radius, 129 * radius, 92 * radius, 161 * radius, 91 * radius);
                ctx[b[62]](201 * radius, 90 * radius, 223 * radius, 121 * radius, 230 * radius, 161 * radius);
                ctx[b[238]]();
                equal(ctx, '#704618', '#5D3D1A', 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](94.00003051757812 * radius, 164.40341186523438 * radius);
                ctx[b[62]](162.50003051757812 * radius, 164.40341186523438 * radius, 230.00003051757812 * radius, 165.40341186523438 * radius, 231.00003051757812 * radius, 164.40341186523438 * radius);
                ctx[b[62]](214.00003051757812 * radius, 267.4034118652344 * radius, 92.00003051757812 * radius, 243.40341186523438 * radius, 93.00003051757812 * radius, 165.40341186523438 * radius);
                ctx[b[238]]();
                equal(ctx, '#E1DDD5', '#EAE7E4', 8 * radius);
                callback(ctx, 160.00003051757812 * radius, 166.49432373046875 * radius, 28.30194339616981 * radius);
                equal(ctx, '#392C16', '#5E3E1A', 10 * radius);
                return hash;
            }
        function compareValues(a)
            /*Scope Closed:false | writes:true*/
            {
                var cmp = document('canvas');
                var c = cmp[b[9]]('2d');
                cmp[b[187]] = 321 * a;
                cmp[b[236]] = 345 * a;
                c[b[150]](0, 5 * a);
                callback(c, 161.00003051757812 * a, 165.40341186523438 * a, 20.808652046684813 * a);
                equal(c, '#C09D6F', '#A37943', 10 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](162.00003051757812 * a, 48.403411865234375 * a);
                c[b[62]](172.50003051757812 * a, 67.40341186523438 * a, 172.50003051757812 * a, 67.40341186523438 * a, 183.00003051757812 * a, 86.40341186523438 * a);
                c[b[62]](160.50003051757812 * a, 86.40341186523438 * a, 160.50003051757812 * a, 86.40341186523438 * a, 138.00003051757812 * a, 86.40341186523438 * a);
                c[b[238]]();
                equal(c, '#C09D6F', '#A37943', 10 * a);
                c[b[33]]();
                c[b[150]](161.50003051757812 * a, 117.90341186523438 * a);
                chroma(c, -5.5 * a, -37.5 * a, 11 * a, 75 * a, 10 * a);
                c[b[210]]();
                equal(c, '#C09D6F', '#A37943', 10 * a);
                c[b[33]]();
                c[b[150]](162.00003051757812 * a, 78.90341186523438 * a);
                chroma(c, -10 * a, -5.5 * a, 20 * a, 11 * a, 1 * a);
                c[b[210]]();
                equal(c, '#C09D6F');
                callback(c, 161.00003051757812 * a, 163.6761474609375 * a, 17.08800749063506 * a);
                equal(c, '#C09D6F');
                return cmp;
            }
        function testBaseInfo(radius, values, doc)
            /*Scope Closed:false | writes:true*/
            {
                var c = document('canvas');
                var ctx = c[b[9]]('2d');
                if (0 == doc) {
                    c[b[187]] = 566 * radius;
                    c[b[236]] = 429 * radius;
                    ctx[b[19]]();
                    ctx[b[253]] = 'round';
                    ctx[b[4]] = 'round';
                    ctx[b[224]](312.625 * radius, 39.046875 * radius);
                    ctx[b[62]](456.625 * radius, 60.046875 * radius, 521.625 * radius, 134.046875 * radius, 528.625 * radius, 199.046875 * radius);
                    ctx[b[62]](540.625 * radius, 298.046875 * radius, 491.625 * radius, 364.046875 * radius, 405.625 * radius, 394.046875 * radius);
                    ctx[b[62]](270.625 * radius, 429.046875 * radius, 182.625 * radius, 395.046875 * radius, 100.625 * radius, 344.046875 * radius);
                    ctx[b[62]](15.625 * radius, 283.046875 * radius, 20.625 * radius, 195.046875 * radius, 33.625 * radius, 158.046875 * radius);
                    ctx[b[62]](56.625 * radius, 80.046875 * radius, 102.625 * radius, 46.046875 * radius, 183.625 * radius, 33.046875 * radius);
                    ctx[b[62]](225.625 * radius, 25.046875 * radius, 270.625 * radius, 30.046875 * radius, 312.625 * radius, 39.046875 * radius);
                    ctx[b[238]]();
                    equal(ctx, values[0]);
                } else {
                    if (1 == doc) {
                        c = document('canvas');
                        ctx = c[b[9]]('2d');
                        c[b[187]] = 511 * radius;
                        c[b[236]] = 408 * radius;
                        ctx[b[19]]();
                        ctx[b[253]] = 'round';
                        ctx[b[4]] = 'round';
                        ctx[b[224]](141.625 * radius, 49.296875 * radius);
                        ctx[b[62]](225.625 * radius, 10.296875 * radius, 320.625 * radius, 16.296875 * radius, 390.625 * radius, 39.296875 * radius);
                        ctx[b[62]](476.625 * radius, 71.296875 * radius, 483.625 * radius, 142.296875 * radius, 486.625 * radius, 197.296875 * radius);
                        ctx[b[62]](491.625 * radius, 289.296875 * radius, 462.625 * radius, 317.296875 * radius, 417.625 * radius, 351.296875 * radius);
                        ctx[b[62]](367.625 * radius, 385.296875 * radius, 313.625 * radius, 404.296875 * radius, 218.625 * radius, 395.296875 * radius);
                        ctx[b[62]](108.625 * radius, 381.296875 * radius, 81.625 * radius, 350.296875 * radius, 52.625 * radius, 305.296875 * radius);
                        ctx[b[62]](16.625 * radius, 244.296875 * radius, 23.625 * radius, 171.296875 * radius, 37.625 * radius, 145.296875 * radius);
                        ctx[b[62]](65.625 * radius, 84.296875 * radius, 97.625 * radius, 74.296875 * radius, 141.625 * radius, 49.296875 * radius);
                        ctx[b[238]]();
                        equal(ctx, values[0]);
                    } else {
                        if (2 == doc) {
                            c = document('canvas');
                            ctx = c[b[9]]('2d');
                            c[b[187]] = 504 * radius;
                            c[b[236]] = 408 * radius;
                            ctx[b[19]]();
                            ctx[b[253]] = 'round';
                            ctx[b[4]] = 'round';
                            ctx[b[224]](153.625 * radius, 46.296875 * radius);
                            ctx[b[62]](271.625 * radius, 17.296875 * radius, 345.625 * radius, 35.296875 * radius, 410.625 * radius, 71.296875 * radius);
                            ctx[b[62]](473.625 * radius, 109.296875 * radius, 478.625 * radius, 167.296875 * radius, 473.625 * radius, 205.296875 * radius);
                            ctx[b[62]](462.625 * radius, 295.296875 * radius, 438.625 * radius, 316.296875 * radius, 388.625 * radius, 345.296875 * radius);
                            ctx[b[62]](331.625 * radius, 374.296875 * radius, 273.625 * radius, 392.296875 * radius, 180.625 * radius, 387.296875 * radius);
                            ctx[b[62]](111.625 * radius, 380.296875 * radius, 86.625 * radius, 360.296875 * radius, 51.625 * radius, 309.296875 * radius);
                            ctx[b[62]](23.625 * radius, 267.296875 * radius, 25.625 * radius, 226.296875 * radius, 27.625 * radius, 175.296875 * radius);
                            ctx[b[62]](37.625 * radius, 99.296875 * radius, 88.625 * radius, 57.296875 * radius, 153.625 * radius, 46.296875 * radius);
                            ctx[b[238]]();
                            equal(ctx, values[0]);
                        }
                    }
                }
                return c;
            }
        function rotate(radius, id, args)
            /*Scope Closed:false | writes:true*/
            {
                var canvas = document('canvas');
                var ctx = canvas[b[9]]('2d');
                canvas[b[187]] = 450 * radius;
                canvas[b[236]] = 260 * radius;
                ctx[b[150]](10 * radius, 10 * radius);
                ctx[b[277]] = id ? 0.5 : 1;
                ctx[b[150]](20 * radius, 20 * radius);
                chroma(ctx, 0, 0, 400 * radius, 220 * radius, 30 * radius);
                equal(ctx, args[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](-20 * radius, -20 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](9 * radius, 5 * radius);
                ctx[b[62]](381 * radius, 2 * radius, 197 * radius, 4.5 * radius, 385 * radius, 4 * radius);
                ctx[b[62]](397 * radius, 4 * radius, 401 * radius, 4 * radius, 399 * radius, 23 * radius);
                ctx[b[62]](367 * radius, 27 * radius, 367 * radius, 27 * radius, 335 * radius, 31 * radius);
                ctx[b[62]](366.5 * radius, 33.5 * radius, 366.5 * radius, 33.5 * radius, 398 * radius, 36 * radius);
                ctx[b[62]](398 * radius, 41.5 * radius, 398 * radius, 41.5 * radius, 398 * radius, 47 * radius);
                ctx[b[62]](398 * radius, 56 * radius, 399 * radius, 56 * radius, 386 * radius, 56 * radius);
                ctx[b[62]](200.5 * radius, 56.5 * radius, 200.5 * radius, 56.5 * radius, 15 * radius, 57 * radius);
                ctx[b[62]](2 * radius, 55 * radius, 4 * radius, 52 * radius, 4 * radius, 43 * radius);
                ctx[b[62]](4 * radius, 30.5 * radius, 4 * radius, 30.5 * radius, 4 * radius, 18 * radius);
                ctx[b[62]](16 * radius, 18.5 * radius, 16 * radius, 18.5 * radius, 28 * radius, 19 * radius);
                ctx[b[62]](18.5 * radius, 12 * radius, 18.5 * radius, 12 * radius, 9 * radius, 5 * radius);
                ctx[b[238]]();
                equal(ctx, args[2], args[1], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](5 * radius, 70 * radius);
                ctx[b[62]](5 * radius, 58 * radius, 5 * radius, 55 * radius, 17 * radius, 57 * radius);
                ctx[b[62]](203 * radius, 57 * radius, 203 * radius, 57 * radius, 389 * radius, 57 * radius);
                ctx[b[62]](400 * radius, 57 * radius, 400 * radius, 59 * radius, 400 * radius, 69 * radius);
                ctx[b[62]](400.5 * radius, 83.5 * radius, 400.5 * radius, 83.5 * radius, 401 * radius, 98 * radius);
                ctx[b[62]](402 * radius, 108 * radius, 401 * radius, 108 * radius, 388 * radius, 108 * radius);
                ctx[b[62]](201.5 * radius, 108 * radius, 201.5 * radius, 108 * radius, 15 * radius, 108 * radius);
                ctx[b[62]](1 * radius, 106 * radius, 5 * radius, 106 * radius, 5 * radius, 87 * radius);
                ctx[b[62]](33 * radius, 84.5 * radius, 33 * radius, 84.5 * radius, 61 * radius, 82 * radius);
                ctx[b[62]](33.5 * radius, 76.5 * radius, 33.5 * radius, 76.5 * radius, 6 * radius, 71 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[1], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](19 * radius, 158 * radius);
                ctx[b[62]](2 * radius, 159 * radius, 4 * radius, 156 * radius, 5 * radius, 118 * radius);
                ctx[b[62]](4 * radius, 110 * radius, 6 * radius, 107 * radius, 26 * radius, 109 * radius);
                ctx[b[62]](206.5 * radius, 109 * radius, 206.5 * radius, 109 * radius, 387 * radius, 109 * radius);
                ctx[b[62]](400 * radius, 108 * radius, 400 * radius, 108 * radius, 398 * radius, 127 * radius);
                ctx[b[62]](384.5 * radius, 130 * radius, 384.5 * radius, 130 * radius, 371 * radius, 133 * radius);
                ctx[b[62]](385.5 * radius, 138 * radius, 385.5 * radius, 138 * radius, 400 * radius, 143 * radius);
                ctx[b[62]](402 * radius, 156 * radius, 402 * radius, 162 * radius, 385 * radius, 160 * radius);
                ctx[b[238]]();
                equal(ctx, args[2], args[1], 12 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](4 * radius, 183 * radius);
                ctx[b[62]](1 * radius, 163 * radius, 4 * radius, 158 * radius, 28 * radius, 161 * radius);
                ctx[b[62]](207.5 * radius, 161 * radius, 207.5 * radius, 161 * radius, 387 * radius, 161 * radius);
                ctx[b[62]](401 * radius, 159 * radius, 400 * radius, 164 * radius, 400 * radius, 177 * radius);
                ctx[b[62]](364.5 * radius, 184 * radius, 364.5 * radius, 184 * radius, 329 * radius, 191 * radius);
                ctx[b[62]](364.5 * radius, 192.5 * radius, 364.5 * radius, 192.5 * radius, 400 * radius, 194 * radius);
                ctx[b[62]](403 * radius, 209 * radius, 401 * radius, 214 * radius, 385 * radius, 213 * radius);
                ctx[b[62]](201.5 * radius, 213 * radius, 201.5 * radius, 213 * radius, 18 * radius, 213 * radius);
                ctx[b[62]](3 * radius, 213 * radius, 2 * radius, 213 * radius, 4 * radius, 198 * radius);
                ctx[b[62]](12.5 * radius, 193 * radius, 12.5 * radius, 193 * radius, 21 * radius, 188 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[1], 12 * radius);
                callback(ctx, 41 * radius, 30 * radius, 14.7648230602334 * radius);
                equal(ctx, args[3], args[1], 12 * radius);
                callback(ctx, 369 * radius, 30 * radius, 15.556349186104045 * radius);
                equal(ctx, args[3], args[1], 12 * radius);
                callback(ctx, 364 * radius, 190 * radius, 15.620499351813308 * radius);
                equal(ctx, args[3], args[1], 12 * radius);
                callback(ctx, 41 * radius, 186 * radius, 15.556349186104045 * radius);
                equal(ctx, args[3], args[1], 12 * radius);
                return canvas;
            }
        function start(x, test, render)
            /*Scope Closed:false | writes:true*/
            {
                var r = document('canvas');
                var a = r[b[9]]('2d');
                r[b[187]] = 450 * x;
                r[b[236]] = 260 * x;
                a[b[150]](10 * x, 10 * x);
                if (1 == render) {
                    a[b[19]]();
                    a[b[253]] = 'round';
                    a[b[4]] = 'round';
                    a[b[224]](9 * x, 5 * x);
                    a[b[62]](381 * x, 2 * x, 197 * x, 4.5 * x, 385 * x, 4 * x);
                    a[b[62]](397 * x, 4 * x, 401 * x, 4 * x, 399 * x, 23 * x);
                    a[b[62]](367 * x, 27 * x, 367 * x, 27 * x, 335 * x, 31 * x);
                    a[b[62]](366.5 * x, 33.5 * x, 366.5 * x, 33.5 * x, 398 * x, 36 * x);
                    a[b[62]](398 * x, 41.5 * x, 398 * x, 41.5 * x, 398 * x, 47 * x);
                    a[b[62]](398 * x, 56 * x, 399 * x, 56 * x, 386 * x, 56 * x);
                    a[b[62]](200.5 * x, 56.5 * x, 200.5 * x, 56.5 * x, 15 * x, 57 * x);
                    a[b[62]](2 * x, 55 * x, 4 * x, 52 * x, 4 * x, 43 * x);
                    a[b[62]](4 * x, 30.5 * x, 4 * x, 30.5 * x, 4 * x, 18 * x);
                    a[b[62]](16 * x, 18.5 * x, 16 * x, 18.5 * x, 28 * x, 19 * x);
                    a[b[62]](18.5 * x, 12 * x, 18.5 * x, 12 * x, 9 * x, 5 * x);
                    a[b[238]]();
                    equal(a, test[3], test[3], 32 * x);
                    a[b[19]]();
                    a[b[253]] = 'round';
                    a[b[4]] = 'round';
                    a[b[224]](5 * x, 70 * x);
                    a[b[62]](5 * x, 58 * x, 5 * x, 55 * x, 17 * x, 57 * x);
                    a[b[62]](203 * x, 57 * x, 203 * x, 57 * x, 389 * x, 57 * x);
                    a[b[62]](400 * x, 57 * x, 400 * x, 59 * x, 400 * x, 69 * x);
                    a[b[62]](400.5 * x, 83.5 * x, 400.5 * x, 83.5 * x, 401 * x, 98 * x);
                    a[b[62]](402 * x, 108 * x, 401 * x, 108 * x, 388 * x, 108 * x);
                    a[b[62]](201.5 * x, 108 * x, 201.5 * x, 108 * x, 15 * x, 108 * x);
                    a[b[62]](1 * x, 106 * x, 5 * x, 106 * x, 5 * x, 87 * x);
                    a[b[62]](33 * x, 84.5 * x, 33 * x, 84.5 * x, 61 * x, 82 * x);
                    a[b[62]](33.5 * x, 76.5 * x, 33.5 * x, 76.5 * x, 6 * x, 71 * x);
                    a[b[238]]();
                    equal(a, test[3], test[3], 32 * x);
                    a[b[19]]();
                    a[b[253]] = 'round';
                    a[b[4]] = 'round';
                    a[b[224]](19 * x, 158 * x);
                    a[b[62]](2 * x, 159 * x, 4 * x, 156 * x, 5 * x, 118 * x);
                    a[b[62]](4 * x, 110 * x, 6 * x, 107 * x, 26 * x, 109 * x);
                    a[b[62]](206.5 * x, 109 * x, 206.5 * x, 109 * x, 387 * x, 109 * x);
                    a[b[62]](400 * x, 108 * x, 400 * x, 108 * x, 398 * x, 127 * x);
                    a[b[62]](384.5 * x, 130 * x, 384.5 * x, 130 * x, 371 * x, 133 * x);
                    a[b[62]](385.5 * x, 138 * x, 385.5 * x, 138 * x, 400 * x, 143 * x);
                    a[b[62]](402 * x, 156 * x, 402 * x, 162 * x, 385 * x, 160 * x);
                    a[b[238]]();
                    equal(a, test[3], test[3], 32 * x);
                    a[b[19]]();
                    a[b[253]] = 'round';
                    a[b[4]] = 'round';
                    a[b[224]](4 * x, 183 * x);
                    a[b[62]](1 * x, 163 * x, 4 * x, 158 * x, 28 * x, 161 * x);
                    a[b[62]](207.5 * x, 161 * x, 207.5 * x, 161 * x, 387 * x, 161 * x);
                    a[b[62]](401 * x, 159 * x, 400 * x, 164 * x, 400 * x, 177 * x);
                    a[b[62]](364.5 * x, 184 * x, 364.5 * x, 184 * x, 329 * x, 191 * x);
                    a[b[62]](364.5 * x, 192.5 * x, 364.5 * x, 192.5 * x, 400 * x, 194 * x);
                    a[b[62]](403 * x, 209 * x, 401 * x, 214 * x, 385 * x, 213 * x);
                    a[b[62]](201.5 * x, 213 * x, 201.5 * x, 213 * x, 18 * x, 213 * x);
                    a[b[62]](3 * x, 213 * x, 2 * x, 213 * x, 4 * x, 198 * x);
                    a[b[62]](12.5 * x, 193 * x, 12.5 * x, 193 * x, 21 * x, 188 * x);
                    a[b[238]]();
                    equal(a, test[3], test[3], 32 * x);
                    callback(a, 41 * x, 30 * x, 14.7648230602334 * x);
                    equal(a, test[3], test[3], 32 * x);
                    callback(a, 369 * x, 30 * x, 15.556349186104045 * x);
                    equal(a, test[3], test[3], 32 * x);
                    callback(a, 364 * x, 190 * x, 15.620499351813308 * x);
                    equal(a, test[3], test[3], 32 * x);
                    callback(a, 41 * x, 186 * x, 15.556349186104045 * x);
                    equal(a, test[3], test[3], 32 * x);
                } else {
                    if (2 == render) {
                        a[b[19]]();
                        a[b[253]] = 'round';
                        a[b[4]] = 'round';
                        a[b[224]](9 * x, 5 * x);
                        a[b[62]](381 * x, 2 * x, 197 * x, 4.5 * x, 385 * x, 4 * x);
                        a[b[62]](397 * x, 4 * x, 401 * x, 4 * x, 399 * x, 23 * x);
                        a[b[62]](367 * x, 27 * x, 367 * x, 27 * x, 335 * x, 31 * x);
                        a[b[62]](366.5 * x, 33.5 * x, 366.5 * x, 33.5 * x, 398 * x, 36 * x);
                        a[b[62]](398 * x, 41.5 * x, 398 * x, 41.5 * x, 398 * x, 47 * x);
                        a[b[62]](398 * x, 56 * x, 399 * x, 56 * x, 386 * x, 56 * x);
                        a[b[62]](200.5 * x, 56.5 * x, 200.5 * x, 56.5 * x, 15 * x, 57 * x);
                        a[b[62]](2 * x, 55 * x, 4 * x, 52 * x, 4 * x, 43 * x);
                        a[b[62]](4 * x, 30.5 * x, 4 * x, 30.5 * x, 4 * x, 18 * x);
                        a[b[62]](16 * x, 18.5 * x, 16 * x, 18.5 * x, 28 * x, 19 * x);
                        a[b[62]](18.5 * x, 12 * x, 18.5 * x, 12 * x, 9 * x, 5 * x);
                        a[b[238]]();
                        equal(a, test[3], test[3], 32 * x);
                        a[b[19]]();
                        a[b[253]] = 'round';
                        a[b[4]] = 'round';
                        a[b[224]](5 * x, 70 * x);
                        a[b[62]](5 * x, 58 * x, 5 * x, 55 * x, 17 * x, 57 * x);
                        a[b[62]](203 * x, 57 * x, 203 * x, 57 * x, 389 * x, 57 * x);
                        a[b[62]](400 * x, 57 * x, 400 * x, 59 * x, 400 * x, 69 * x);
                        a[b[62]](400.5 * x, 83.5 * x, 400.5 * x, 83.5 * x, 401 * x, 98 * x);
                        a[b[62]](402 * x, 108 * x, 401 * x, 108 * x, 388 * x, 108 * x);
                        a[b[62]](201.5 * x, 108 * x, 201.5 * x, 108 * x, 15 * x, 108 * x);
                        a[b[62]](1 * x, 106 * x, 5 * x, 106 * x, 5 * x, 87 * x);
                        a[b[62]](33 * x, 84.5 * x, 33 * x, 84.5 * x, 61 * x, 82 * x);
                        a[b[62]](33.5 * x, 76.5 * x, 33.5 * x, 76.5 * x, 6 * x, 71 * x);
                        a[b[238]]();
                        equal(a, test[3], test[3], 32 * x);
                        a[b[19]]();
                        a[b[253]] = 'round';
                        a[b[4]] = 'round';
                        a[b[224]](19 * x, 158 * x);
                        a[b[62]](2 * x, 159 * x, 4 * x, 156 * x, 5 * x, 118 * x);
                        a[b[62]](4 * x, 110 * x, 6 * x, 107 * x, 26 * x, 109 * x);
                        a[b[62]](206.5 * x, 109 * x, 206.5 * x, 109 * x, 387 * x, 109 * x);
                        a[b[62]](400 * x, 108 * x, 400 * x, 108 * x, 398 * x, 127 * x);
                        a[b[62]](384.5 * x, 130 * x, 384.5 * x, 130 * x, 371 * x, 133 * x);
                        a[b[62]](385.5 * x, 138 * x, 385.5 * x, 138 * x, 400 * x, 143 * x);
                        a[b[62]](402 * x, 156 * x, 402 * x, 162 * x, 385 * x, 160 * x);
                        a[b[238]]();
                        equal(a, test[3], test[3], 32 * x);
                        a[b[19]]();
                        a[b[253]] = 'round';
                        a[b[4]] = 'round';
                        a[b[224]](4 * x, 183 * x);
                        a[b[62]](1 * x, 163 * x, 4 * x, 158 * x, 28 * x, 161 * x);
                        a[b[62]](207.5 * x, 161 * x, 207.5 * x, 161 * x, 387 * x, 161 * x);
                        a[b[62]](401 * x, 159 * x, 400 * x, 164 * x, 400 * x, 177 * x);
                        a[b[62]](364.5 * x, 184 * x, 364.5 * x, 184 * x, 329 * x, 191 * x);
                        a[b[62]](364.5 * x, 192.5 * x, 364.5 * x, 192.5 * x, 400 * x, 194 * x);
                        a[b[62]](403 * x, 209 * x, 401 * x, 214 * x, 385 * x, 213 * x);
                        a[b[62]](201.5 * x, 213 * x, 201.5 * x, 213 * x, 18 * x, 213 * x);
                        a[b[62]](3 * x, 213 * x, 2 * x, 213 * x, 4 * x, 198 * x);
                        a[b[62]](12.5 * x, 193 * x, 12.5 * x, 193 * x, 21 * x, 188 * x);
                        a[b[238]]();
                        equal(a, test[3], test[3], 32 * x);
                        callback(a, 41 * x, 30 * x, 14.7648230602334 * x);
                        equal(a, test[3], test[3], 32 * x);
                        callback(a, 369 * x, 30 * x, 15.556349186104045 * x);
                        equal(a, test[3], test[3], 32 * x);
                        callback(a, 364 * x, 190 * x, 15.620499351813308 * x);
                        equal(a, test[3], test[3], 32 * x);
                        callback(a, 41 * x, 186 * x, 15.556349186104045 * x);
                        equal(a, test[3], test[3], 32 * x);
                    }
                }
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](9 * x, 5 * x);
                a[b[62]](381 * x, 2 * x, 197 * x, 4.5 * x, 385 * x, 4 * x);
                a[b[62]](397 * x, 4 * x, 401 * x, 4 * x, 399 * x, 23 * x);
                a[b[62]](367 * x, 27 * x, 367 * x, 27 * x, 335 * x, 31 * x);
                a[b[62]](366.5 * x, 33.5 * x, 366.5 * x, 33.5 * x, 398 * x, 36 * x);
                a[b[62]](398 * x, 41.5 * x, 398 * x, 41.5 * x, 398 * x, 47 * x);
                a[b[62]](398 * x, 56 * x, 399 * x, 56 * x, 386 * x, 56 * x);
                a[b[62]](200.5 * x, 56.5 * x, 200.5 * x, 56.5 * x, 15 * x, 57 * x);
                a[b[62]](2 * x, 55 * x, 4 * x, 52 * x, 4 * x, 43 * x);
                a[b[62]](4 * x, 30.5 * x, 4 * x, 30.5 * x, 4 * x, 18 * x);
                a[b[62]](16 * x, 18.5 * x, 16 * x, 18.5 * x, 28 * x, 19 * x);
                a[b[62]](18.5 * x, 12 * x, 18.5 * x, 12 * x, 9 * x, 5 * x);
                a[b[238]]();
                equal(a, test[1], test[0], 12 * x);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](5 * x, 70 * x);
                a[b[62]](5 * x, 58 * x, 5 * x, 55 * x, 17 * x, 57 * x);
                a[b[62]](203 * x, 57 * x, 203 * x, 57 * x, 389 * x, 57 * x);
                a[b[62]](400 * x, 57 * x, 400 * x, 59 * x, 400 * x, 69 * x);
                a[b[62]](400.5 * x, 83.5 * x, 400.5 * x, 83.5 * x, 401 * x, 98 * x);
                a[b[62]](402 * x, 108 * x, 401 * x, 108 * x, 388 * x, 108 * x);
                a[b[62]](201.5 * x, 108 * x, 201.5 * x, 108 * x, 15 * x, 108 * x);
                a[b[62]](1 * x, 106 * x, 5 * x, 106 * x, 5 * x, 87 * x);
                a[b[62]](33 * x, 84.5 * x, 33 * x, 84.5 * x, 61 * x, 82 * x);
                a[b[62]](33.5 * x, 76.5 * x, 33.5 * x, 76.5 * x, 6 * x, 71 * x);
                a[b[238]]();
                equal(a, test[2], test[0], 12 * x);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](19 * x, 158 * x);
                a[b[62]](2 * x, 159 * x, 4 * x, 156 * x, 5 * x, 118 * x);
                a[b[62]](4 * x, 110 * x, 6 * x, 107 * x, 26 * x, 109 * x);
                a[b[62]](206.5 * x, 109 * x, 206.5 * x, 109 * x, 387 * x, 109 * x);
                a[b[62]](400 * x, 108 * x, 400 * x, 108 * x, 398 * x, 127 * x);
                a[b[62]](384.5 * x, 130 * x, 384.5 * x, 130 * x, 371 * x, 133 * x);
                a[b[62]](385.5 * x, 138 * x, 385.5 * x, 138 * x, 400 * x, 143 * x);
                a[b[62]](402 * x, 156 * x, 402 * x, 162 * x, 385 * x, 160 * x);
                a[b[238]]();
                equal(a, test[1], test[0], 12 * x);
                a[b[19]]();
                a[b[253]] = 'round';
                a[b[4]] = 'round';
                a[b[224]](4 * x, 183 * x);
                a[b[62]](1 * x, 163 * x, 4 * x, 158 * x, 28 * x, 161 * x);
                a[b[62]](207.5 * x, 161 * x, 207.5 * x, 161 * x, 387 * x, 161 * x);
                a[b[62]](401 * x, 159 * x, 400 * x, 164 * x, 400 * x, 177 * x);
                a[b[62]](364.5 * x, 184 * x, 364.5 * x, 184 * x, 329 * x, 191 * x);
                a[b[62]](364.5 * x, 192.5 * x, 364.5 * x, 192.5 * x, 400 * x, 194 * x);
                a[b[62]](403 * x, 209 * x, 401 * x, 214 * x, 385 * x, 213 * x);
                a[b[62]](201.5 * x, 213 * x, 201.5 * x, 213 * x, 18 * x, 213 * x);
                a[b[62]](3 * x, 213 * x, 2 * x, 213 * x, 4 * x, 198 * x);
                a[b[62]](12.5 * x, 193 * x, 12.5 * x, 193 * x, 21 * x, 188 * x);
                a[b[238]]();
                equal(a, test[2], test[0], 12 * x);
                callback(a, 41 * x, 30 * x, 14.7648230602334 * x);
                equal(a, test[2], test[0], 12 * x);
                callback(a, 369 * x, 30 * x, 15.556349186104045 * x);
                equal(a, test[2], test[0], 12 * x);
                callback(a, 364 * x, 190 * x, 15.620499351813308 * x);
                equal(a, test[2], test[0], 12 * x);
                callback(a, 41 * x, 186 * x, 15.556349186104045 * x);
                equal(a, test[2], test[0], 12 * x);
                return r;
            }
        function func2(a, d, args, callback)
            /*Scope Closed:false | writes:true*/
            {
                d = document('canvas');
                var c = d[b[9]]('2d');
                d[b[187]] = 450 * a;
                d[b[236]] = 260 * a;
                var result = rotate(1 * a, true, args);
                c[b[230]](result, 0 * a, 0 * a);
                if (1 == callback) {
                    c[b[150]](100 * a, 0 * a);
                    callback(c, 113 * a, 120 * a, 66 * a);
                    equal(c, void 0, args[4], 13 * a);
                    result = call(0.65 * a, true, [
                        '#0d1b1c',
                        '#4d2d14',
                        '#432516',
                        '#939393',
                        '#5f6061'
                    ]);
                    c[b[65]](0.7);
                    c[b[230]](result, 133 * a, -64 * a);
                    c[b[65]](-0.7);
                    c[b[19]]();
                    c[b[253]] = 'round';
                    c[b[4]] = 'round';
                    c[b[224]](70 * a, 70 * a);
                    c[b[62]](113 * a, 120.5 * a, 113 * a, 120.5 * a, 156 * a, 171 * a);
                    c[b[238]]();
                    equal(c, void 0, args[4], 13 * a);
                } else {
                    if (2 == callback) {
                        c[b[150]](100 * a, 0 * a);
                        callback(c, 113 * a, 120 * a, 66 * a);
                        equal(c, void 0, args[4], 13 * a);
                        c[b[150]](30 * a, 40 * a);
                        c[b[33]]();
                        c[b[150]](83.5 * a, 66.5 * a);
                        chroma(c, -40.5 * a, -29.5 * a, 81 * a, 59 * a, 15 * a);
                        c[b[210]]();
                        equal(c, '#dff2f7', '#187484', 7 * a);
                        callback(c, 22 * a, 82 * a, 12 * a);
                        equal(c, '#dff2f7', '#187484', 7 * a);
                        callback(c, 145 * a, 82 * a, 12 * a);
                        equal(c, '#dff2f7', '#187484', 7 * a);
                        result = exp(0.5 * a, true, [
                            '#80500b',
                            '#7c4908'
                        ]);
                        c[b[230]](result, 10 * a, 85 * a);
                        result = exp(0.5 * a, true, [
                            '#80500b',
                            '#7c4908'
                        ]);
                        c[b[230]](result, 50 * a, 85 * a);
                        result = exp(0.5 * a, true, [
                            '#80500b',
                            '#7c4908'
                        ]);
                        c[b[230]](result, 90 * a, 85 * a);
                        result = log(1 * a, true, [
                            '#3d2a6e',
                            '#8255b5'
                        ]);
                        c[b[230]](result, 90 * a, 105 * a);
                        result = log(1 * a, true, [
                            '#3d2a6e',
                            '#8255b5'
                        ]);
                        c[b[230]](result, 90 * a, 105 * a);
                        result = log(1 * a, true, [
                            '#3d2a6e',
                            '#8255b5'
                        ]);
                        c[b[230]](result, 30 * a, 125 * a);
                        result = log(1 * a, true, [
                            '#3d2a6e',
                            '#8255b5'
                        ]);
                        c[b[230]](result, 50 * a, 115 * a);
                        result = log(1 * a, true, [
                            '#3d2a6e',
                            '#8255b5'
                        ]);
                        c[b[230]](result, 30 * a, 100 * a);
                        result = log(1 * a, true, [
                            '#3d2a6e',
                            '#8255b5'
                        ]);
                        c[b[230]](result, 80 * a, 120 * a);
                        result = log(1 * a, true, [
                            '#3d2a6e',
                            '#8255b5'
                        ]);
                        c[b[230]](result, 110 * a, 125 * a);
                        result = log(1 * a, true, [
                            '#3d2a6e',
                            '#8255b5'
                        ]);
                        c[b[230]](result, 120 * a, 105 * a);
                    } else {
                        if (3 == callback) {
                            c[b[150]](100 * a, 0 * a);
                            callback(c, 113 * a, 120 * a, 66 * a);
                            equal(c, void 0, args[4], 13 * a);
                            c[b[150]](40 * a, 50 * a);
                            c[b[33]]();
                            c[b[150]](71 * a, 69 * a);
                            chroma(c, -30 * a, -42 * a, 60 * a, 84 * a, 10 * a);
                            c[b[210]]();
                            equal(c, void 0, args[5], 4 * a);
                            c[b[19]]();
                            c[b[253]] = 'round';
                            c[b[4]] = 'round';
                            c[b[224]](42 * a, 28 * a);
                            c[b[62]](60 * a, 31 * a, 60 * a, 31 * a, 78 * a, 34 * a);
                            c[b[62]](82 * a, 34 * a, 84 * a, 37 * a, 83 * a, 45 * a);
                            c[b[62]](83 * a, 80 * a, 83 * a, 80 * a, 83 * a, 115 * a);
                            c[b[62]](83 * a, 120 * a, 80 * a, 122 * a, 73 * a, 120 * a);
                            c[b[62]](42 * a, 111 * a, 43 * a, 109 * a, 41 * a, 102 * a);
                            c[b[62]](41 * a, 71 * a, 41 * a, 71 * a, 41 * a, 40 * a);
                            c[b[238]]();
                            equal(c, args[5], args[5], 4 * a);
                            c[b[150]](-40 * a, -50 * a);
                            c[b[19]]();
                            c[b[253]] = 'round';
                            c[b[4]] = 'round';
                            c[b[224]](70 * a, 70 * a);
                            c[b[62]](113 * a, 120.5 * a, 113 * a, 120.5 * a, 156 * a, 171 * a);
                            c[b[238]]();
                            equal(c, void 0, args[4], 13 * a);
                        } else {
                            if (4 == callback) {
                                c[b[228]](1, 1);
                                c[b[150]](70 * a, 50 * a);
                                c[b[19]]();
                                c[b[253]] = 'round';
                                c[b[4]] = 'round';
                                c[b[224]](23 * a, 6 * a);
                                c[b[62]](25.5 * a, 56 * a, 25.5 * a, 56 * a, 28 * a, 106 * a);
                                equal(c, void 0, args[5], 14 * a);
                                c[b[19]]();
                                c[b[253]] = 'round';
                                c[b[4]] = 'round';
                                c[b[224]](59 * a, 10 * a);
                                c[b[62]](61 * a, 51.5 * a, 61 * a, 51.5 * a, 63 * a, 93 * a);
                                equal(c, void 0, args[5], 14 * a);
                                c[b[19]]();
                                c[b[253]] = 'round';
                                c[b[4]] = 'round';
                                c[b[224]](7 * a, 55 * a);
                                c[b[62]](33.5 * a, 55 * a, 33.5 * a, 55 * a, 60 * a, 55 * a);
                                equal(c, void 0, args[5], 14 * a);
                                c[b[150]](10 * a, 0 * a);
                                c[b[19]]();
                                c[b[253]] = 'round';
                                c[b[4]] = 'round';
                                c[b[224]](123 * a, 16 * a);
                                c[b[62]](103 * a, 16.5 * a, 103 * a, 16.5 * a, 83 * a, 17 * a);
                                c[b[62]](83.5 * a, 61 * a, 83.5 * a, 61 * a, 84 * a, 105 * a);
                                c[b[62]](106 * a, 105 * a, 106 * a, 105 * a, 128 * a, 105 * a);
                                equal(c, void 0, args[5], 14 * a);
                                c[b[19]]();
                                c[b[253]] = 'round';
                                c[b[4]] = 'round';
                                c[b[224]](72 * a, 63 * a);
                                c[b[62]](88.5 * a, 62.5 * a, 88.5 * a, 62.5 * a, 105 * a, 62 * a);
                                equal(c, void 0, args[5], 14 * a);
                                c[b[150]](10 * a, 10 * a);
                                c[b[19]]();
                                c[b[253]] = 'round';
                                c[b[4]] = 'round';
                                c[b[224]](141 * a, 8 * a);
                                c[b[62]](143 * a, 50 * a, 143 * a, 50 * a, 145 * a, 92 * a);
                                c[b[62]](169 * a, 88.5 * a, 169 * a, 88.5 * a, 193 * a, 85 * a);
                                equal(c, void 0, args[5], 14 * a);
                                c[b[150]](10 * a, -10 * a);
                                c[b[19]]();
                                c[b[253]] = 'round';
                                c[b[4]] = 'round';
                                c[b[224]](205 * a, 124 * a);
                                c[b[62]](205 * a, 69 * a, 205 * a, 69 * a, 205 * a, 14 * a);
                                c[b[62]](239 * a, 15 * a, 250 * a, 37 * a, 249 * a, 49 * a);
                                c[b[62]](251 * a, 65 * a, 242 * a, 76 * a, 206 * a, 75 * a);
                                equal(c, void 0, args[5], 14 * a);
                            }
                        }
                    }
                }
                return d;
            }
        function drawCircle(radius, node, args)
            /*Scope Closed:false | writes:true*/
            {
                node = document('canvas');
                var ctx = node[b[9]]('2d');
                node[b[187]] = 345 * radius;
                node[b[236]] = 250 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](105 * radius, 58 * radius);
                ctx[b[62]](100.5 * radius, 43 * radius, 100.5 * radius, 43 * radius, 96 * radius, 28 * radius);
                ctx[b[62]](119.5 * radius, 33.5 * radius, 119.5 * radius, 33.5 * radius, 143 * radius, 39 * radius);
                ctx[b[62]](170 * radius, 37 * radius, 177 * radius, 37 * radius, 188 * radius, 40 * radius);
                ctx[b[62]](213 * radius, 33.5 * radius, 213 * radius, 33.5 * radius, 238 * radius, 27 * radius);
                ctx[b[62]](231 * radius, 52 * radius, 234 * radius, 42.5 * radius, 230 * radius, 58 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](108 * radius, 51 * radius);
                ctx[b[62]](91 * radius, 55 * radius, 85 * radius, 44 * radius, 86 * radius, 29 * radius);
                ctx[b[62]](62 * radius, 50 * radius, 78 * radius, 69 * radius, 92 * radius, 75 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[4], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](249 * radius, 27 * radius);
                ctx[b[62]](273 * radius, 49 * radius, 262 * radius, 68 * radius, 246 * radius, 77 * radius);
                ctx[b[62]](231 * radius, 59 * radius, 236 * radius, 66.5 * radius, 226 * radius, 56 * radius);
                ctx[b[62]](243 * radius, 53 * radius, 252 * radius, 43 * radius, 249 * radius, 28 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[4], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](87 * radius, 78 * radius);
                ctx[b[62]](87 * radius, 59 * radius, 98 * radius, 46 * radius, 127 * radius, 48 * radius);
                ctx[b[62]](176 * radius, 48.5 * radius, 176 * radius, 48.5 * radius, 225 * radius, 49 * radius);
                ctx[b[62]](243 * radius, 49 * radius, 253 * radius, 59 * radius, 253 * radius, 76 * radius);
                ctx[b[62]](211 * radius, 85.5 * radius, 211 * radius, 85.5 * radius, 169 * radius, 95 * radius);
                ctx[b[238]]();
                equal(ctx, args[5], args[6], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](56 * radius, 105 * radius);
                ctx[b[62]](56 * radius, 92 * radius, 59 * radius, 86 * radius, 65 * radius, 73 * radius);
                ctx[b[62]](62.5 * radius, 61.5 * radius, 62.5 * radius, 61.5 * radius, 60 * radius, 50 * radius);
                ctx[b[62]](99.5 * radius, 64.5 * radius, 99.5 * radius, 64.5 * radius, 139 * radius, 79 * radius);
                ctx[b[62]](164 * radius, 77 * radius, 177 * radius, 76 * radius, 203 * radius, 78 * radius);
                ctx[b[62]](242 * radius, 63.5 * radius, 242 * radius, 63.5 * radius, 281 * radius, 49 * radius);
                ctx[b[62]](279 * radius, 60.5 * radius, 279 * radius, 60.5 * radius, 277 * radius, 72 * radius);
                ctx[b[62]](286 * radius, 88 * radius, 286 * radius, 96 * radius, 287 * radius, 104 * radius);
                ctx[b[62]](228.5 * radius, 127 * radius, 228.5 * radius, 127 * radius, 170 * radius, 150 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](48 * radius, 130 * radius);
                ctx[b[62]](61 * radius, 155 * radius, 63 * radius, 165 * radius, 56 * radius, 171 * radius);
                ctx[b[62]](48 * radius, 177 * radius, 40 * radius, 171 * radius, 38 * radius, 178 * radius);
                ctx[b[62]](33 * radius, 180 * radius, 37 * radius, 188 * radius, 47 * radius, 208 * radius);
                ctx[b[62]](52 * radius, 221 * radius, 55 * radius, 222 * radius, 75 * radius, 229 * radius);
                ctx[b[62]](91 * radius, 213 * radius, 98 * radius, 212 * radius, 112 * radius, 219 * radius);
                ctx[b[62]](167 * radius, 225 * radius, 187 * radius, 224 * radius, 222 * radius, 220 * radius);
                ctx[b[62]](244 * radius, 214 * radius, 247 * radius, 213 * radius, 263 * radius, 229 * radius);
                ctx[b[62]](295 * radius, 220 * radius, 291 * radius, 215 * radius, 301 * radius, 194 * radius);
                ctx[b[62]](308 * radius, 178 * radius, 309 * radius, 176 * radius, 302 * radius, 173 * radius);
                ctx[b[62]](290 * radius, 177 * radius, 289 * radius, 177 * radius, 283 * radius, 169 * radius);
                ctx[b[62]](279 * radius, 163 * radius, 279 * radius, 161 * radius, 290 * radius, 130 * radius);
                ctx[b[62]](270 * radius, 127 * radius, 270 * radius, 127 * radius, 250 * radius, 124 * radius);
                ctx[b[62]](209 * radius, 137.5 * radius, 209 * radius, 137.5 * radius, 168 * radius, 151 * radius);
                ctx[b[62]](121 * radius, 135 * radius, 121 * radius, 135 * radius, 74 * radius, 119 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 8 * radius);
                ctx[b[7]] = 'destination-out';
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](133 * radius, 158 * radius);
                ctx[b[62]](152 * radius, 193 * radius, 158 * radius, 205 * radius, 140 * radius, 203 * radius);
                ctx[b[62]](99 * radius, 195 * radius, 96 * radius, 189 * radius, 86 * radius, 173 * radius);
                ctx[b[62]](80 * radius, 159 * radius, 88 * radius, 145 * radius, 104 * radius, 141 * radius);
                ctx[b[238]]();
                equal(ctx, args[7], args[8], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](215 * radius, 146 * radius);
                ctx[b[62]](204 * radius, 167 * radius, 204 * radius, 167 * radius, 193 * radius, 188 * radius);
                ctx[b[62]](187 * radius, 201 * radius, 191 * radius, 209 * radius, 213 * radius, 201 * radius);
                ctx[b[62]](247 * radius, 192 * radius, 253 * radius, 181 * radius, 257 * radius, 169 * radius);
                ctx[b[62]](260 * radius, 157 * radius, 254 * radius, 149 * radius, 243 * radius, 141 * radius);
                ctx[b[238]]();
                equal(ctx, args[7], args[8], 8 * radius);
                ctx[b[7]] = 'source-over';
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](133 * radius, 158 * radius);
                ctx[b[62]](152 * radius, 193 * radius, 158 * radius, 205 * radius, 140 * radius, 203 * radius);
                ctx[b[62]](99 * radius, 195 * radius, 96 * radius, 189 * radius, 86 * radius, 173 * radius);
                ctx[b[62]](80 * radius, 159 * radius, 88 * radius, 145 * radius, 104 * radius, 141 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, args[8], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](215 * radius, 146 * radius);
                ctx[b[62]](204 * radius, 167 * radius, 204 * radius, 167 * radius, 193 * radius, 188 * radius);
                ctx[b[62]](187 * radius, 201 * radius, 191 * radius, 209 * radius, 213 * radius, 201 * radius);
                ctx[b[62]](247 * radius, 192 * radius, 253 * radius, 181 * radius, 257 * radius, 169 * radius);
                ctx[b[62]](260 * radius, 157 * radius, 254 * radius, 149 * radius, 243 * radius, 141 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, args[8], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](39 * radius, 66 * radius);
                ctx[b[62]](57 * radius, 107 * radius, 63 * radius, 96 * radius, 120 * radius, 106 * radius);
                ctx[b[62]](154 * radius, 112 * radius, 163 * radius, 116 * radius, 174 * radius, 135 * radius);
                ctx[b[62]](180 * radius, 109 * radius, 191 * radius, 113 * radius, 237 * radius, 103 * radius);
                ctx[b[62]](276 * radius, 100 * radius, 289 * radius, 94 * radius, 301 * radius, 67 * radius);
                ctx[b[62]](317 * radius, 112 * radius, 301 * radius, 141 * radius, 274 * radius, 139 * radius);
                ctx[b[62]](204 * radius, 166 * radius, 197 * radius, 169 * radius, 173 * radius, 183 * radius);
                ctx[b[62]](170 * radius, 183 * radius, 170 * radius, 183 * radius, 167 * radius, 183 * radius);
                ctx[b[62]](132 * radius, 160 * radius, 112 * radius, 156 * radius, 73 * radius, 141 * radius);
                ctx[b[62]](43 * radius, 146 * radius, 27 * radius, 120 * radius, 39 * radius, 66 * radius);
                ctx[b[238]]();
                equal(ctx, args[7], args[8], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](115 * radius, 185 * radius);
                ctx[b[62]](115 * radius, 200 * radius, 118 * radius, 206 * radius, 124 * radius, 212 * radius);
                ctx[b[62]](133 * radius, 223 * radius, 132 * radius, 231 * radius, 121 * radius, 230 * radius);
                ctx[b[62]](108 * radius, 226 * radius, 108 * radius, 215 * radius, 107 * radius, 209 * radius);
                ctx[b[62]](106 * radius, 201 * radius, 110 * radius, 196 * radius, 114 * radius, 185 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[4], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](226 * radius, 186 * radius);
                ctx[b[62]](234 * radius, 201 * radius, 238 * radius, 209 * radius, 228 * radius, 225 * radius);
                ctx[b[62]](223 * radius, 233 * radius, 213 * radius, 233 * radius, 211 * radius, 226 * radius);
                ctx[b[62]](206 * radius, 219 * radius, 217 * radius, 216 * radius, 221 * radius, 207 * radius);
                ctx[b[62]](225 * radius, 196 * radius, 225 * radius, 191 * radius, 226 * radius, 186 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[4], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](172 * radius, 110 * radius);
                ctx[b[62]](189 * radius, 153 * radius, 192 * radius, 160 * radius, 188 * radius, 175 * radius);
                ctx[b[62]](183 * radius, 190 * radius, 176 * radius, 197 * radius, 165 * radius, 191 * radius);
                ctx[b[62]](153 * radius, 181 * radius, 152 * radius, 166 * radius, 157 * radius, 151 * radius);
                ctx[b[62]](164.5 * radius, 131 * radius, 164.5 * radius, 131 * radius, 172 * radius, 111 * radius);
                ctx[b[238]]();
                equal(ctx, args[3], args[4], 8 * radius);
                return node;
            }
        function cf(perface, pervertex)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var a = hash[b[9]]('2d');
                hash[b[187]] = 149 * perface;
                hash[b[236]] = 153 * perface;
                a[b[277]] = 0.5;
                callback(a, 74.5 * perface, 85 * perface, 66 * perface);
                equal(a, pervertex[0]);
                a[b[277]] = 1;
                callback(a, 75.5 * perface, 72.5 * perface, 67 * perface);
                equal(a, pervertex[1], pervertex[2], 4 * perface);
                callback(a, 75.5 * perface, 73.5 * perface, 54 * perface);
                equal(a, pervertex[3]);
                a[b[277]] = 0.5;
                callback(a, 74.5 * perface, 80.5 * perface, 39 * perface);
                equal(a, pervertex[4]);
                a[b[277]] = 1;
                callback(a, 74.5 * perface, 74.5 * perface, 37 * perface);
                equal(a, pervertex[5]);
                return hash;
            }
        function df(thisImgData, cmpImgData)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var a = hash[b[9]]('2d');
                hash[b[187]] = 173 * thisImgData;
                hash[b[236]] = 178 * thisImgData;
                a[b[277]] = 0.5;
                callback(a, 86.5 * thisImgData, 98 * thisImgData, 80 * thisImgData);
                equal(a, cmpImgData[0]);
                a[b[277]] = 1;
                callback(a, 86.5 * thisImgData, 89 * thisImgData, 81 * thisImgData);
                equal(a, cmpImgData[1], cmpImgData[2], 4 * thisImgData);
                callback(a, 86.5 * thisImgData, 86 * thisImgData, 59 * thisImgData);
                equal(a, cmpImgData[3], cmpImgData[4], 4 * thisImgData);
                a[b[277]] = 0.5;
                callback(a, 86.5 * thisImgData, 95 * thisImgData, 34 * thisImgData);
                equal(a, cmpImgData[0]);
                a[b[277]] = 1;
                callback(a, 86.5 * thisImgData, 89 * thisImgData, 34 * thisImgData);
                equal(a, cmpImgData[5]);
                return hash;
            }
        function _scheduledWarningDialogListener(a, item)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var map = hash[b[9]]('2d');
                hash[b[187]] = 253 * a;
                hash[b[236]] = 260 * a;
                map[b[277]] = 0.5;
                callback(map, 126.5 * a, 134 * a, 119 * a);
                equal(map, item[0]);
                map[b[277]] = 1;
                callback(map, 126.5 * a, 124 * a, 119 * a);
                equal(map, item[1], item[2], 4 * a);
                callback(map, 126.5 * a, 127 * a, 100 * a);
                equal(map, item[3]);
                map[b[277]] = 0.5;
                callback(map, 126.5 * a, 135 * a, 81 * a);
                equal(map, item[0]);
                map[b[277]] = 1;
                callback(map, 126.5 * a, 125 * a, 84 * a);
                equal(map, item[4], item[5], 4 * a);
                callback(map, 126.5 * a, 125 * a, 61 * a);
                equal(map, item[6], item[7], 4 * a);
                map[b[277]] = 0.5;
                callback(map, 126.5 * a, 134 * a, 40 * a);
                equal(map, item[8]);
                map[b[277]] = 1;
                callback(map, 126.5 * a, 125 * a, 40 * a);
                equal(map, item[9]);
                return hash;
            }
        function Geocircle(radius, altitudeReferenceSystem, spatialReferenceId)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 139 * radius;
                hash[b[236]] = 135 * radius;
                ctx[b[150]](0, 10 * radius);
                ctx[b[277]] = altitudeReferenceSystem ? 0.5 : 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](32 * radius, 77 * radius);
                ctx[b[62]](6 * radius, 41 * radius, 6 * radius, 33 * radius, 12 * radius, 27 * radius);
                ctx[b[62]](27 * radius, 6 * radius, 28 * radius, 6 * radius, 37 * radius, 6 * radius);
                ctx[b[62]](62 * radius, 3 * radius, 64 * radius, 5 * radius, 67 * radius, 13 * radius);
                ctx[b[62]](80 * radius, 36 * radius, 73.5 * radius, 25 * radius, 80 * radius, 37 * radius);
                ctx[b[62]](73.5 * radius, 54 * radius, 65 * radius, 74 * radius, 67 * radius, 71 * radius);
                ctx[b[238]]();
                equal(ctx, spatialReferenceId[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](65 * radius, 37 * radius);
                ctx[b[62]](105 * radius, 40 * radius, 113 * radius, 39 * radius, 117 * radius, 48 * radius);
                ctx[b[62]](126 * radius, 70 * radius, 128 * radius, 72 * radius, 124 * radius, 80 * radius);
                ctx[b[62]](112 * radius, 101 * radius, 110 * radius, 104 * radius, 99 * radius, 104 * radius);
                ctx[b[62]](59 * radius, 100 * radius, 55 * radius, 99 * radius, 56 * radius, 99 * radius);
                ctx[b[62]](47.5 * radius, 79 * radius, 45 * radius, 66 * radius, 39 * radius, 59 * radius);
                ctx[b[238]]();
                equal(ctx, spatialReferenceId[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](30 * radius, 63 * radius);
                ctx[b[62]](5 * radius, 99 * radius, 5 * radius, 101 * radius, 8 * radius, 103 * radius);
                ctx[b[62]](19 * radius, 123 * radius, 22 * radius, 125 * radius, 28 * radius, 126 * radius);
                ctx[b[62]](57 * radius, 127 * radius, 55 * radius, 127 * radius, 58 * radius, 120 * radius);
                ctx[b[62]](82 * radius, 86 * radius, 83 * radius, 78 * radius, 82 * radius, 87 * radius);
                ctx[b[238]]();
                equal(ctx, spatialReferenceId[0]);
                ctx[b[150]](0, -10 * radius);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](32 * radius, 77 * radius);
                ctx[b[62]](6 * radius, 41 * radius, 6 * radius, 33 * radius, 12 * radius, 27 * radius);
                ctx[b[62]](27 * radius, 6 * radius, 28 * radius, 6 * radius, 37 * radius, 6 * radius);
                ctx[b[62]](62 * radius, 3 * radius, 64 * radius, 5 * radius, 67 * radius, 13 * radius);
                ctx[b[62]](80 * radius, 36 * radius, 73.5 * radius, 25 * radius, 80 * radius, 37 * radius);
                ctx[b[62]](73.5 * radius, 54 * radius, 65 * radius, 74 * radius, 67 * radius, 71 * radius);
                ctx[b[238]]();
                equal(ctx, spatialReferenceId[1]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](65 * radius, 37 * radius);
                ctx[b[62]](105 * radius, 40 * radius, 113 * radius, 39 * radius, 117 * radius, 48 * radius);
                ctx[b[62]](126 * radius, 70 * radius, 128 * radius, 72 * radius, 124 * radius, 80 * radius);
                ctx[b[62]](112 * radius, 101 * radius, 110 * radius, 104 * radius, 99 * radius, 104 * radius);
                ctx[b[62]](59 * radius, 100 * radius, 55 * radius, 99 * radius, 56 * radius, 99 * radius);
                ctx[b[62]](47.5 * radius, 79 * radius, 45 * radius, 66 * radius, 39 * radius, 59 * radius);
                ctx[b[238]]();
                equal(ctx, spatialReferenceId[1]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](30 * radius, 63 * radius);
                ctx[b[62]](5 * radius, 99 * radius, 5 * radius, 101 * radius, 8 * radius, 103 * radius);
                ctx[b[62]](19 * radius, 123 * radius, 22 * radius, 125 * radius, 28 * radius, 126 * radius);
                ctx[b[62]](57 * radius, 127 * radius, 55 * radius, 127 * radius, 58 * radius, 120 * radius);
                ctx[b[62]](82 * radius, 86 * radius, 83 * radius, 78 * radius, 82 * radius, 87 * radius);
                ctx[b[238]]();
                equal(ctx, spatialReferenceId[1]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](80 * radius, 38 * radius);
                ctx[b[62]](72.5 * radius, 52 * radius, 72.5 * radius, 52 * radius, 65 * radius, 66 * radius);
                ctx[b[62]](47.5 * radius, 37 * radius, 47.5 * radius, 37 * radius, 30 * radius, 7 * radius);
                ctx[b[62]](48 * radius, 4 * radius, 57 * radius, 4 * radius, 64 * radius, 10 * radius);
                ctx[b[238]]();
                equal(ctx, spatialReferenceId[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](65 * radius, 65 * radius);
                ctx[b[62]](125 * radius, 73 * radius, 95.5 * radius, 69 * radius, 126 * radius, 73 * radius);
                ctx[b[62]](119 * radius, 98 * radius, 106 * radius, 104 * radius, 98 * radius, 103 * radius);
                ctx[b[62]](84.5 * radius, 102 * radius, 84.5 * radius, 102 * radius, 71 * radius, 101 * radius);
                ctx[b[62]](64 * radius, 86 * radius, 64 * radius, 86 * radius, 57 * radius, 70 * radius);
                ctx[b[238]]();
                equal(ctx, spatialReferenceId[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](27 * radius, 69 * radius);
                ctx[b[62]](64 * radius, 65 * radius, 46 * radius, 67 * radius, 65 * radius, 65 * radius);
                ctx[b[62]](43.5 * radius, 94 * radius, 43.5 * radius, 94 * radius, 22 * radius, 123 * radius);
                ctx[b[62]](8 * radius, 103 * radius, 8 * radius, 103 * radius, 9 * radius, 103 * radius);
                ctx[b[62]](5 * radius, 98 * radius, 11 * radius, 89 * radius, 26 * radius, 70 * radius);
                ctx[b[238]]();
                equal(ctx, spatialReferenceId[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](26 * radius, 69 * radius);
                ctx[b[62]](65 * radius, 60 * radius, 45 * radius, 65 * radius, 64 * radius, 60 * radius);
                ctx[b[62]](63 * radius, 65 * radius, 63 * radius, 65 * radius, 62 * radius, 70 * radius);
                ctx[b[238]]();
                equal(ctx, spatialReferenceId[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](80 * radius, 38 * radius);
                ctx[b[62]](68 * radius, 70 * radius, 75 * radius, 53 * radius, 70 * radius, 68 * radius);
                ctx[b[62]](65 * radius, 67 * radius, 65 * radius, 67 * radius, 60 * radius, 65 * radius);
                ctx[b[238]]();
                equal(ctx, spatialReferenceId[2]);
                return hash;
            }
        function initTestGl(width, height)
            /*Scope Closed:false | writes:true*/
            {
                var buffer = document('canvas');
                var ctx = buffer[b[9]]('2d');
                buffer[b[187]] = 100 * width;
                buffer[b[236]] = 100 * width;
                ctx[b[277]] = 0.5;
                ctx[b[219]] = height[0];
                ctx[b[249]](0, 0, buffer[b[187]], buffer[b[236]]);
                return buffer;
            }
        function createNewSlider(radius, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 120 * radius;
                hash[b[236]] = 300 * radius;
                ctx[b[150]](-80 * radius, -20);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](200.5 * radius, 14.953125 * radius);
                ctx[b[62]](203 * radius, 171.953125 * radius, 203 * radius, 171.953125 * radius, 205.5 * radius, 328.953125 * radius);
                ctx[b[62]](188.5 * radius, 257.953125 * radius, 164.5 * radius, 216.953125 * radius, 166.5 * radius, 176.953125 * radius);
                ctx[b[62]](168.5 * radius, 133.953125 * radius, 198.5 * radius, 98.953125 * radius, 200.5 * radius, 14.953125 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                return hash;
            }
        function handleArcs(radius, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 120 * radius;
                hash[b[236]] = 300 * radius;
                ctx[b[150]](-200 * radius, -40 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](344 * radius, 18.40625 * radius);
                ctx[b[62]](345 * radius, 361.40625 * radius, 344 * radius, 191.40625 * radius, 344 * radius, 364.40625 * radius);
                ctx[b[62]](261 * radius, 275.40625 * radius, 274 * radius, 259.40625 * radius, 229 * radius, 213.40625 * radius);
                ctx[b[62]](199 * radius, 187.40625 * radius, 222 * radius, 133.40625 * radius, 273 * radius, 100.40625 * radius);
                ctx[b[62]](321 * radius, 71.40625 * radius, 327 * radius, 34.40625 * radius, 344 * radius, 18.40625 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](335 * radius, 38.072906494140625 * radius);
                ctx[b[62]](307 * radius, 62.072906494140625 * radius, 291 * radius, 60.072906494140625 * radius, 262 * radius, 68.07290649414062 * radius);
                ctx[b[62]](223 * radius, 80.07290649414062 * radius, 225 * radius, 111.07290649414062 * radius, 264 * radius, 139.07290649414062 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                return hash;
            }
        function HTML5Recorder(radius, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 120 * radius;
                hash[b[236]] = 320 * radius;
                ctx[b[150]](-60 * radius, -15 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](188.5 * radius, 3.953125 * radius);
                ctx[b[62]](188.5 * radius, 171.453125 * radius, 188.5 * radius, 171.453125 * radius, 188.5 * radius, 338.953125 * radius);
                ctx[b[62]](162.5 * radius, 268.953125 * radius, 145.5 * radius, 265.953125 * radius, 116.5 * radius, 244.953125 * radius);
                ctx[b[62]](67.5 * radius, 204.953125 * radius, 87.5 * radius, 160.953125 * radius, 113.5 * radius, 125.953125 * radius);
                ctx[b[62]](141.5 * radius, 90.953125 * radius, 176.5 * radius, 56.953125 * radius, 188.5 * radius, 3.953125 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                return hash;
            }
        function showCropOverlay(radius, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 120 * radius;
                hash[b[236]] = 330 * radius;
                ctx[b[150]](-60 * radius, -10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](188.5 * radius, 7.953125 * radius);
                ctx[b[62]](188.5 * radius, 334.953125 * radius, 188.5 * radius, 332.953125 * radius, 188.5 * radius, 339.953125 * radius);
                ctx[b[62]](166.5 * radius, 295.953125 * radius, 145.5 * radius, 295.953125 * radius, 139.5 * radius, 282.953125 * radius);
                ctx[b[62]](124.5 * radius, 244.953125 * radius, 139.5 * radius, 243.953125 * radius, 131.5 * radius, 212.953125 * radius);
                ctx[b[62]](118.5 * radius, 161.953125 * radius, 69.5 * radius, 156.953125 * radius, 74.5 * radius, 92.953125 * radius);
                ctx[b[62]](85.5 * radius, 41.953125 * radius, 158.5 * radius, 49.953125 * radius, 188.5 * radius, 7.953125 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                return hash;
            }
        function drawCylinderEx(radius, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 48 * radius;
                hash[b[236]] = 47 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](7.1875 * radius, 25.434661865234375 * radius);
                ctx[b[62]](11.1875 * radius, 13.434661865234375 * radius, 18.1875 * radius, 8.434661865234375 * radius, 32.1875 * radius, 10.434661865234375 * radius);
                ctx[b[62]](45.1875 * radius, 14.434661865234375 * radius, 41.1875 * radius, 24.434661865234375 * radius, 36.1875 * radius, 30.434661865234375 * radius);
                ctx[b[62]](22.1875 * radius, 42.434661865234375 * radius, 2.1875 * radius, 41.434661865234375 * radius, 7.1875 * radius, 25.434661865234375 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                return hash;
            }
        function expectToRefresh(radius, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 120 * radius;
                hash[b[236]] = 280 * radius;
                ctx[b[150]](-100 * radius, -20 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](228.5 * radius, 331.953125 * radius);
                ctx[b[62]](228.5 * radius, 12.953125 * radius, 228.5 * radius, 171.453125 * radius, 228.5 * radius, 10.953125 * radius);
                ctx[b[62]](196.5 * radius, 76.953125 * radius, 206.5 * radius, 78.953125 * radius, 191.5 * radius, 114.953125 * radius);
                ctx[b[62]](162.5 * radius, 170.953125 * radius, 206.5 * radius, 220.953125 * radius, 210.5 * radius, 251.953125 * radius);
                ctx[b[62]](218.5 * radius, 287.953125 * radius, 220.5 * radius, 291.953125 * radius, 228.5 * radius, 331.953125 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                return hash;
            }
        function drawSeriesLines(radius, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 33 * radius;
                hash[b[236]] = 35 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](12.75 * radius, 7.1328125 * radius);
                ctx[b[62]](26.75 * radius, 8.1328125 * radius, 27.75 * radius, 14.1328125 * radius, 24.75 * radius, 23.1328125 * radius);
                ctx[b[62]](19.75 * radius, 31.1328125 * radius, 15.75 * radius, 33.1328125 * radius, 6.75 * radius, 26.1328125 * radius);
                ctx[b[62]](0.75 * radius, 19.1328125 * radius, 4.75 * radius, 8.1328125 * radius, 12.75 * radius, 7.1328125 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                return hash;
            }
        function $a(array, a)
            /*Scope Closed:false | writes:true*/
            {
                var r = document('canvas');
                var top = r[b[9]]('2d');
                r[b[187]] = 20 * array;
                r[b[236]] = 35 * array;
                chroma(top, 0, 0, 20, 35, 7);
                equal(top, a[0]);
                return r;
            }
        function drawImg(radius, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 161 * radius;
                hash[b[236]] = 190 * radius;
                ctx[b[277]] = 0.5;
                ctx[b[150]](0, 8);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](9 * radius, 93 * radius);
                ctx[b[62]](17 * radius, 95 * radius, 19 * radius, 95 * radius, 21 * radius, 95 * radius);
                ctx[b[62]](9 * radius, 83 * radius, 17 * radius, 93 * radius, 4 * radius, 76 * radius);
                ctx[b[62]](11 * radius, 75 * radius, 11 * radius, 75 * radius, 18 * radius, 75 * radius);
                ctx[b[62]](13 * radius, 67 * radius, 13 * radius, 67 * radius, 7 * radius, 59 * radius);
                ctx[b[62]](14 * radius, 59 * radius, 14 * radius, 59 * radius, 21 * radius, 59 * radius);
                ctx[b[62]](46 * radius, 35 * radius, 35 * radius, 45 * radius, 49 * radius, 31 * radius);
                ctx[b[62]](53 * radius, 24 * radius, 51 * radius, 21 * radius, 51 * radius, 16 * radius);
                ctx[b[62]](63 * radius, 23 * radius, 63 * radius, 24 * radius, 69 * radius, 29 * radius);
                ctx[b[62]](76 * radius, 7 * radius, 75 * radius, 11 * radius, 76 * radius, 6 * radius);
                ctx[b[62]](81 * radius, 12 * radius, 84 * radius, 18 * radius, 89 * radius, 27 * radius);
                ctx[b[62]](95 * radius, 25 * radius, 100 * radius, 16 * radius, 105 * radius, 14 * radius);
                ctx[b[62]](103 * radius, 25 * radius, 111 * radius, 33 * radius, 110 * radius, 34 * radius);
                ctx[b[62]](123 * radius, 48 * radius, 123 * radius, 48 * radius, 136 * radius, 62 * radius);
                ctx[b[62]](142 * radius, 60 * radius, 147 * radius, 59 * radius, 155 * radius, 58 * radius);
                ctx[b[62]](147 * radius, 65 * radius, 147 * radius, 65 * radius, 139 * radius, 73 * radius);
                ctx[b[62]](145 * radius, 73 * radius, 145 * radius, 73 * radius, 151 * radius, 73 * radius);
                ctx[b[62]](145 * radius, 80 * radius, 145 * radius, 80 * radius, 138 * radius, 87 * radius);
                ctx[b[62]](144 * radius, 88 * radius, 144 * radius, 88 * radius, 150 * radius, 89 * radius);
                ctx[b[62]](125 * radius, 103 * radius, 125 * radius, 125 * radius, 113 * radius, 141 * radius);
                ctx[b[62]](92 * radius, 178 * radius, 85 * radius, 177 * radius, 76 * radius, 178 * radius);
                ctx[b[62]](64 * radius, 179 * radius, 51 * radius, 164 * radius, 35 * radius, 131 * radius);
                ctx[b[62]](18 * radius, 95 * radius, 13 * radius, 99 * radius, 8 * radius, 93 * radius);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -8);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](9 * radius, 93 * radius);
                ctx[b[62]](17 * radius, 95 * radius, 19 * radius, 95 * radius, 21 * radius, 95 * radius);
                ctx[b[62]](9 * radius, 83 * radius, 17 * radius, 93 * radius, 4 * radius, 76 * radius);
                ctx[b[62]](11 * radius, 75 * radius, 11 * radius, 75 * radius, 18 * radius, 75 * radius);
                ctx[b[62]](13 * radius, 67 * radius, 13 * radius, 67 * radius, 7 * radius, 59 * radius);
                ctx[b[62]](14 * radius, 59 * radius, 14 * radius, 59 * radius, 21 * radius, 59 * radius);
                ctx[b[62]](46 * radius, 35 * radius, 35 * radius, 45 * radius, 49 * radius, 31 * radius);
                ctx[b[62]](53 * radius, 24 * radius, 51 * radius, 21 * radius, 51 * radius, 16 * radius);
                ctx[b[62]](63 * radius, 23 * radius, 63 * radius, 24 * radius, 69 * radius, 29 * radius);
                ctx[b[62]](76 * radius, 7 * radius, 75 * radius, 11 * radius, 76 * radius, 6 * radius);
                ctx[b[62]](81 * radius, 12 * radius, 84 * radius, 18 * radius, 89 * radius, 27 * radius);
                ctx[b[62]](95 * radius, 25 * radius, 100 * radius, 16 * radius, 105 * radius, 14 * radius);
                ctx[b[62]](103 * radius, 25 * radius, 111 * radius, 33 * radius, 110 * radius, 34 * radius);
                ctx[b[62]](123 * radius, 48 * radius, 123 * radius, 48 * radius, 136 * radius, 62 * radius);
                ctx[b[62]](142 * radius, 60 * radius, 147 * radius, 59 * radius, 155 * radius, 58 * radius);
                ctx[b[62]](147 * radius, 65 * radius, 147 * radius, 65 * radius, 139 * radius, 73 * radius);
                ctx[b[62]](145 * radius, 73 * radius, 145 * radius, 73 * radius, 151 * radius, 73 * radius);
                ctx[b[62]](145 * radius, 80 * radius, 145 * radius, 80 * radius, 138 * radius, 87 * radius);
                ctx[b[62]](144 * radius, 88 * radius, 144 * radius, 88 * radius, 150 * radius, 89 * radius);
                ctx[b[62]](125 * radius, 103 * radius, 125 * radius, 125 * radius, 113 * radius, 141 * radius);
                ctx[b[62]](92 * radius, 178 * radius, 85 * radius, 177 * radius, 76 * radius, 178 * radius);
                ctx[b[62]](64 * radius, 179 * radius, 51 * radius, 164 * radius, 35 * radius, 131 * radius);
                ctx[b[62]](18 * radius, 95 * radius, 13 * radius, 99 * radius, 8 * radius, 93 * radius);
                ctx[b[238]]();
                equal(ctx, args[1]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](28 * radius, 63 * radius);
                ctx[b[62]](23 * radius, 54 * radius, 24 * radius, 47 * radius, 26 * radius, 37 * radius);
                ctx[b[62]](28 * radius, 29 * radius, 31 * radius, 31 * radius, 41 * radius, 35 * radius);
                ctx[b[62]](52 * radius, 45 * radius, 55 * radius, 51 * radius, 57 * radius, 53 * radius);
                ctx[b[62]](50 * radius, 50 * radius, 44 * radius, 47 * radius, 43 * radius, 48 * radius);
                ctx[b[62]](43 * radius, 52 * radius, 43 * radius, 52 * radius, 42 * radius, 57 * radius);
                ctx[b[62]](38 * radius, 54 * radius, 38 * radius, 54 * radius, 33 * radius, 51 * radius);
                ctx[b[62]](34 * radius, 56 * radius, 34 * radius, 56 * radius, 34 * radius, 61 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](99 * radius, 55 * radius);
                ctx[b[62]](107 * radius, 43 * radius, 113 * radius, 39 * radius, 121 * radius, 34 * radius);
                ctx[b[62]](130 * radius, 29 * radius, 130 * radius, 34 * radius, 130 * radius, 42 * radius);
                ctx[b[62]](131 * radius, 57 * radius, 128 * radius, 61 * radius, 129 * radius, 63 * radius);
                ctx[b[62]](124 * radius, 62 * radius, 124 * radius, 62 * radius, 119 * radius, 61 * radius);
                ctx[b[62]](119 * radius, 56 * radius, 120 * radius, 61 * radius, 118 * radius, 52 * radius);
                ctx[b[62]](115 * radius, 55 * radius, 111 * radius, 59 * radius, 111 * radius, 58 * radius);
                ctx[b[62]](110 * radius, 54 * radius, 109 * radius, 57 * radius, 109 * radius, 51 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                callback(ctx, 103 * radius, 110 * radius, 11 * radius);
                equal(ctx, args[4]);
                callback(ctx, 55 * radius, 111 * radius, 11 * radius);
                equal(ctx, args[4]);
                callback(ctx, 99 * radius, 107 * radius, 5 * radius);
                equal(ctx, args[1]);
                callback(ctx, 51 * radius, 108 * radius, 5 * radius);
                equal(ctx, args[1]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](31 * radius, 121 * radius);
                ctx[b[62]](45 * radius, 128 * radius, 51 * radius, 133 * radius, 53 * radius, 141 * radius);
                ctx[b[62]](59 * radius, 161 * radius, 70 * radius, 173 * radius, 80 * radius, 169 * radius);
                ctx[b[62]](89 * radius, 172 * radius, 99 * radius, 149 * radius, 107 * radius, 133 * radius);
                ctx[b[62]](114 * radius, 122 * radius, 119 * radius, 123 * radius, 124 * radius, 119 * radius);
                ctx[b[62]](109 * radius, 148 * radius, 117 * radius, 133 * radius, 109 * radius, 147 * radius);
                ctx[b[62]](87 * radius, 180 * radius, 84 * radius, 179 * radius, 76 * radius, 178 * radius);
                ctx[b[62]](49 * radius, 173 * radius, 44 * radius, 149 * radius, 31 * radius, 121 * radius);
                ctx[b[238]]();
                equal(ctx, args[5]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[150]](-2, 0);
                ctx[b[224]](71 * radius, 162 * radius);
                ctx[b[62]](80 * radius, 155 * radius, 85 * radius, 159 * radius, 89 * radius, 164 * radius);
                ctx[b[62]](90 * radius, 171 * radius, 86 * radius, 173 * radius, 79 * radius, 173 * radius);
                ctx[b[62]](67 * radius, 172 * radius, 67 * radius, 168 * radius, 71 * radius, 162 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[150]](2, 0);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](9 * radius, 93 * radius);
                ctx[b[62]](17 * radius, 95 * radius, 19 * radius, 95 * radius, 21 * radius, 95 * radius);
                ctx[b[62]](9 * radius, 83 * radius, 17 * radius, 93 * radius, 4 * radius, 76 * radius);
                ctx[b[62]](11 * radius, 75 * radius, 11 * radius, 75 * radius, 18 * radius, 75 * radius);
                ctx[b[62]](13 * radius, 67 * radius, 13 * radius, 67 * radius, 7 * radius, 59 * radius);
                ctx[b[62]](14 * radius, 59 * radius, 14 * radius, 59 * radius, 21 * radius, 59 * radius);
                ctx[b[62]](46 * radius, 35 * radius, 35 * radius, 45 * radius, 49 * radius, 31 * radius);
                ctx[b[62]](53 * radius, 24 * radius, 51 * radius, 21 * radius, 51 * radius, 16 * radius);
                ctx[b[62]](63 * radius, 23 * radius, 63 * radius, 24 * radius, 69 * radius, 29 * radius);
                ctx[b[62]](76 * radius, 7 * radius, 75 * radius, 11 * radius, 76 * radius, 6 * radius);
                ctx[b[62]](81 * radius, 12 * radius, 84 * radius, 18 * radius, 89 * radius, 27 * radius);
                ctx[b[62]](95 * radius, 25 * radius, 100 * radius, 16 * radius, 105 * radius, 14 * radius);
                ctx[b[62]](103 * radius, 25 * radius, 111 * radius, 33 * radius, 110 * radius, 34 * radius);
                ctx[b[62]](123 * radius, 48 * radius, 123 * radius, 48 * radius, 136 * radius, 62 * radius);
                ctx[b[62]](142 * radius, 60 * radius, 147 * radius, 59 * radius, 155 * radius, 58 * radius);
                ctx[b[62]](147 * radius, 65 * radius, 147 * radius, 65 * radius, 139 * radius, 73 * radius);
                ctx[b[62]](145 * radius, 73 * radius, 145 * radius, 73 * radius, 151 * radius, 73 * radius);
                ctx[b[62]](145 * radius, 80 * radius, 145 * radius, 80 * radius, 138 * radius, 87 * radius);
                ctx[b[62]](144 * radius, 88 * radius, 144 * radius, 88 * radius, 150 * radius, 89 * radius);
                ctx[b[62]](125 * radius, 103 * radius, 125 * radius, 125 * radius, 113 * radius, 141 * radius);
                ctx[b[62]](92 * radius, 178 * radius, 85 * radius, 177 * radius, 76 * radius, 178 * radius);
                ctx[b[62]](64 * radius, 179 * radius, 51 * radius, 164 * radius, 35 * radius, 131 * radius);
                ctx[b[62]](18 * radius, 95 * radius, 13 * radius, 99 * radius, 8 * radius, 93 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, args[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](25 * radius, 63 * radius);
                ctx[b[62]](16 * radius, 58 * radius, 17 * radius, 51 * radius, 17 * radius, 33 * radius);
                ctx[b[62]](19 * radius, 12 * radius, 21 * radius, 12 * radius, 32 * radius, 17 * radius);
                ctx[b[62]](63 * radius, 31 * radius, 66 * radius, 45 * radius, 66 * radius, 54 * radius);
                equal(ctx, args[1], args[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](91 * radius, 53 * radius);
                ctx[b[62]](91 * radius, 40 * radius, 98 * radius, 33 * radius, 121 * radius, 20 * radius);
                ctx[b[62]](137 * radius, 12 * radius, 137 * radius, 16 * radius, 139 * radius, 27 * radius);
                ctx[b[62]](141 * radius, 49 * radius, 140 * radius, 57 * radius, 134 * radius, 64 * radius);
                equal(ctx, args[1], args[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](31 * radius, 63 * radius);
                ctx[b[62]](23 * radius, 54 * radius, 24 * radius, 47 * radius, 26 * radius, 37 * radius);
                ctx[b[62]](28 * radius, 29 * radius, 31 * radius, 31 * radius, 41 * radius, 35 * radius);
                ctx[b[62]](52 * radius, 45 * radius, 55 * radius, 51 * radius, 57 * radius, 53 * radius);
                ctx[b[62]](50 * radius, 50 * radius, 44 * radius, 47 * radius, 43 * radius, 48 * radius);
                ctx[b[62]](43 * radius, 52 * radius, 43 * radius, 52 * radius, 42 * radius, 57 * radius);
                ctx[b[62]](38 * radius, 54 * radius, 38 * radius, 54 * radius, 33 * radius, 51 * radius);
                ctx[b[62]](34 * radius, 56 * radius, 34 * radius, 56 * radius, 34 * radius, 61 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](99 * radius, 55 * radius);
                ctx[b[62]](107 * radius, 43 * radius, 113 * radius, 39 * radius, 121 * radius, 34 * radius);
                ctx[b[62]](130 * radius, 29 * radius, 130 * radius, 34 * radius, 130 * radius, 42 * radius);
                ctx[b[62]](131 * radius, 57 * radius, 128 * radius, 61 * radius, 129 * radius, 63 * radius);
                ctx[b[62]](124 * radius, 62 * radius, 124 * radius, 62 * radius, 119 * radius, 61 * radius);
                ctx[b[62]](119 * radius, 56 * radius, 120 * radius, 61 * radius, 118 * radius, 52 * radius);
                ctx[b[62]](115 * radius, 55 * radius, 111 * radius, 59 * radius, 111 * radius, 58 * radius);
                ctx[b[62]](110 * radius, 54 * radius, 109 * radius, 57 * radius, 109 * radius, 51 * radius);
                ctx[b[238]]();
                equal(ctx, args[3]);
                return hash;
            }
        function assertRequestCount(radius, count)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 161 * radius;
                hash[b[236]] = 190 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](9 * radius, 93 * radius);
                ctx[b[62]](17 * radius, 95 * radius, 19 * radius, 95 * radius, 21 * radius, 95 * radius);
                ctx[b[62]](9 * radius, 83 * radius, 17 * radius, 93 * radius, 4 * radius, 76 * radius);
                ctx[b[62]](11 * radius, 75 * radius, 11 * radius, 75 * radius, 18 * radius, 75 * radius);
                ctx[b[62]](13 * radius, 67 * radius, 13 * radius, 67 * radius, 7 * radius, 59 * radius);
                ctx[b[62]](14 * radius, 59 * radius, 14 * radius, 59 * radius, 21 * radius, 59 * radius);
                ctx[b[62]](46 * radius, 35 * radius, 35 * radius, 45 * radius, 49 * radius, 31 * radius);
                ctx[b[62]](53 * radius, 24 * radius, 51 * radius, 21 * radius, 51 * radius, 16 * radius);
                ctx[b[62]](63 * radius, 23 * radius, 63 * radius, 24 * radius, 69 * radius, 29 * radius);
                ctx[b[62]](76 * radius, 7 * radius, 75 * radius, 11 * radius, 76 * radius, 6 * radius);
                ctx[b[62]](81 * radius, 12 * radius, 84 * radius, 18 * radius, 89 * radius, 27 * radius);
                ctx[b[62]](95 * radius, 25 * radius, 100 * radius, 16 * radius, 105 * radius, 14 * radius);
                ctx[b[62]](103 * radius, 25 * radius, 111 * radius, 33 * radius, 110 * radius, 34 * radius);
                ctx[b[62]](123 * radius, 48 * radius, 123 * radius, 48 * radius, 136 * radius, 62 * radius);
                ctx[b[62]](142 * radius, 60 * radius, 147 * radius, 59 * radius, 155 * radius, 58 * radius);
                ctx[b[62]](147 * radius, 65 * radius, 147 * radius, 65 * radius, 139 * radius, 73 * radius);
                ctx[b[62]](145 * radius, 73 * radius, 145 * radius, 73 * radius, 151 * radius, 73 * radius);
                ctx[b[62]](145 * radius, 80 * radius, 145 * radius, 80 * radius, 138 * radius, 87 * radius);
                ctx[b[62]](144 * radius, 88 * radius, 144 * radius, 88 * radius, 150 * radius, 89 * radius);
                ctx[b[62]](125 * radius, 103 * radius, 125 * radius, 125 * radius, 113 * radius, 141 * radius);
                ctx[b[62]](92 * radius, 178 * radius, 85 * radius, 177 * radius, 76 * radius, 178 * radius);
                ctx[b[62]](64 * radius, 179 * radius, 51 * radius, 164 * radius, 35 * radius, 131 * radius);
                ctx[b[62]](18 * radius, 95 * radius, 13 * radius, 99 * radius, 8 * radius, 93 * radius);
                ctx[b[238]]();
                equal(ctx, count, count, 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](25 * radius, 63 * radius);
                ctx[b[62]](16 * radius, 58 * radius, 17 * radius, 51 * radius, 17 * radius, 33 * radius);
                ctx[b[62]](19 * radius, 12 * radius, 21 * radius, 12 * radius, 32 * radius, 17 * radius);
                ctx[b[62]](63 * radius, 31 * radius, 66 * radius, 45 * radius, 66 * radius, 54 * radius);
                equal(ctx, count, count, 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](91 * radius, 53 * radius);
                ctx[b[62]](91 * radius, 40 * radius, 98 * radius, 33 * radius, 121 * radius, 20 * radius);
                ctx[b[62]](137 * radius, 12 * radius, 137 * radius, 16 * radius, 139 * radius, 27 * radius);
                ctx[b[62]](141 * radius, 49 * radius, 140 * radius, 57 * radius, 134 * radius, 64 * radius);
                equal(ctx, count, count, 4 * radius);
                return hash;
            }
        function tesArcStroke(radius, args)
            /*Scope Closed:false | writes:true*/
            {
                var offset = document('canvas');
                var ctx = offset[b[9]]('2d');
                offset[b[187]] = 147 * radius;
                offset[b[236]] = 172 * radius;
                ctx[b[277]] = 0.5;
                ctx[b[150]](0, 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](8 * radius, 50 * radius);
                ctx[b[62]](15 * radius, 16 * radius, 49 * radius, 6 * radius, 67 * radius, 6 * radius);
                ctx[b[62]](121 * radius, 3 * radius, 128 * radius, 32 * radius, 135 * radius, 48 * radius);
                ctx[b[62]](146 * radius, 96 * radius, 124 * radius, 131 * radius, 96 * radius, 135 * radius);
                ctx[b[62]](96 * radius, 158 * radius, 79 * radius, 156 * radius, 75 * radius, 156 * radius);
                ctx[b[62]](50 * radius, 154 * radius, 53 * radius, 150 * radius, 52 * radius, 135 * radius);
                ctx[b[62]](2 * radius, 127 * radius, 3 * radius, 87 * radius, 8 * radius, 50 * radius);
                ctx[b[238]]();
                equal(ctx, args[0]);
                ctx[b[150]](0, -8 * radius);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](8 * radius, 50 * radius);
                ctx[b[62]](15 * radius, 16 * radius, 49 * radius, 6 * radius, 67 * radius, 6 * radius);
                ctx[b[62]](121 * radius, 3 * radius, 128 * radius, 32 * radius, 135 * radius, 48 * radius);
                ctx[b[62]](146 * radius, 96 * radius, 124 * radius, 131 * radius, 96 * radius, 135 * radius);
                ctx[b[62]](96 * radius, 158 * radius, 79 * radius, 156 * radius, 75 * radius, 156 * radius);
                ctx[b[62]](50 * radius, 154 * radius, 53 * radius, 150 * radius, 52 * radius, 135 * radius);
                ctx[b[62]](2 * radius, 127 * radius, 3 * radius, 87 * radius, 8 * radius, 50 * radius);
                ctx[b[238]]();
                equal(ctx, args[1], args[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](14 * radius, 57 * radius);
                ctx[b[62]](2 * radius, 50 * radius, 5 * radius, 22 * radius, 24 * radius, 22 * radius);
                ctx[b[62]](41 * radius, 21 * radius, 54 * radius, 32 * radius, 55 * radius, 48 * radius);
                equal(ctx, args[1], args[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](93 * radius, 47 * radius);
                ctx[b[62]](94 * radius, 24 * radius, 116 * radius, 21 * radius, 120 * radius, 20 * radius);
                ctx[b[62]](144 * radius, 17 * radius, 146 * radius, 52 * radius, 133 * radius, 58 * radius);
                equal(ctx, args[1], args[2], 4 * radius);
                callback(ctx, 51 * radius, 91 * radius, 9 * radius);
                equal(ctx, args[3]);
                callback(ctx, 95 * radius, 91 * radius, 9 * radius);
                equal(ctx, args[3]);
                callback(ctx, 91 * radius, 89 * radius, 4 * radius);
                equal(ctx, args[4]);
                callback(ctx, 47 * radius, 89 * radius, 4 * radius);
                equal(ctx, args[4]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](54 * radius, 133 * radius);
                ctx[b[62]](56 * radius, 108 * radius, 64 * radius, 99 * radius, 73 * radius, 98 * radius);
                ctx[b[62]](86 * radius, 97 * radius, 91 * radius, 119 * radius, 93 * radius, 133 * radius);
                ctx[b[62]](94 * radius, 155 * radius, 90 * radius, 150 * radius, 74 * radius, 155 * radius);
                ctx[b[62]](50 * radius, 152 * radius, 55 * radius, 145 * radius, 54 * radius, 134 * radius);
                ctx[b[238]]();
                equal(ctx, args[5]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](65.25 * radius, 135 * radius);
                ctx[b[62]](75.25 * radius, 128 * radius, 83.25 * radius, 133 * radius, 83.25 * radius, 138 * radius);
                ctx[b[62]](88.25 * radius, 148 * radius, 61.25 * radius, 149 * radius, 64.25 * radius, 137 * radius);
                ctx[b[238]]();
                equal(ctx, args[6]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](74 * radius, 145 * radius);
                ctx[b[62]](74 * radius, 148 * radius, 74 * radius, 148 * radius, 74 * radius, 151 * radius);
                ctx[b[238]]();
                equal(ctx, void 0, args[6], 2 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](19 * radius, 58 * radius);
                ctx[b[62]](10 * radius, 38 * radius, 18 * radius, 33 * radius, 28 * radius, 34 * radius);
                ctx[b[62]](41 * radius, 39 * radius, 45 * radius, 45 * radius, 50 * radius, 51 * radius);
                ctx[b[238]]();
                equal(ctx, args[6]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](100 * radius, 51 * radius);
                ctx[b[62]](106 * radius, 36 * radius, 119 * radius, 31 * radius, 128 * radius, 36 * radius);
                ctx[b[62]](137 * radius, 49 * radius, 128 * radius, 58 * radius, 128 * radius, 60 * radius);
                ctx[b[238]]();
                equal(ctx, args[6]);
                return offset;
            }
        function chooseBonusTraits(radius, count)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 147 * radius;
                hash[b[236]] = 172 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](8 * radius, 50 * radius);
                ctx[b[62]](15 * radius, 16 * radius, 49 * radius, 6 * radius, 67 * radius, 6 * radius);
                ctx[b[62]](121 * radius, 3 * radius, 128 * radius, 32 * radius, 135 * radius, 48 * radius);
                ctx[b[62]](146 * radius, 96 * radius, 124 * radius, 131 * radius, 96 * radius, 135 * radius);
                ctx[b[62]](96 * radius, 158 * radius, 79 * radius, 156 * radius, 75 * radius, 156 * radius);
                ctx[b[62]](50 * radius, 154 * radius, 53 * radius, 150 * radius, 52 * radius, 135 * radius);
                ctx[b[62]](2 * radius, 127 * radius, 3 * radius, 87 * radius, 8 * radius, 50 * radius);
                ctx[b[238]]();
                equal(ctx, count, count, 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](14 * radius, 57 * radius);
                ctx[b[62]](2 * radius, 50 * radius, 5 * radius, 22 * radius, 24 * radius, 22 * radius);
                ctx[b[62]](41 * radius, 21 * radius, 54 * radius, 32 * radius, 55 * radius, 48 * radius);
                equal(ctx, count, count, 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](93 * radius, 47 * radius);
                ctx[b[62]](94 * radius, 24 * radius, 116 * radius, 21 * radius, 120 * radius, 20 * radius);
                ctx[b[62]](144 * radius, 17 * radius, 146 * radius, 52 * radius, 133 * radius, 58 * radius);
                equal(ctx, count, count, 4 * radius);
                return hash;
            }
        function saveResultDom(radius, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 271 * radius;
                hash[b[236]] = 366 * radius;
                ctx[b[277]] = 0.5;
                ctx[b[150]](0, 10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](133 * radius, 99 * radius);
                ctx[b[62]](186 * radius, 123 * radius, 199 * radius, 152 * radius, 209 * radius, 169 * radius);
                ctx[b[62]](228 * radius, 205 * radius, 224 * radius, 245 * radius, 190 * radius, 276 * radius);
                ctx[b[62]](161 * radius, 296 * radius, 99 * radius, 292 * radius, 79 * radius, 274 * radius);
                ctx[b[62]](49 * radius, 253 * radius, 47 * radius, 214 * radius, 50 * radius, 197 * radius);
                ctx[b[62]](61 * radius, 143 * radius, 102 * radius, 113 * radius, 131 * radius, 99 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](73 * radius, 270 * radius);
                ctx[b[62]](79 * radius, 280 * radius, 77 * radius, 280 * radius, 78 * radius, 287 * radius);
                ctx[b[62]](78 * radius, 290 * radius, 83 * radius, 291 * radius, 82 * radius, 299 * radius);
                ctx[b[62]](81 * radius, 301 * radius, 87 * radius, 301 * radius, 92 * radius, 314 * radius);
                ctx[b[62]](94 * radius, 319 * radius, 100 * radius, 321 * radius, 107 * radius, 320 * radius);
                ctx[b[62]](111 * radius, 323 * radius, 114 * radius, 324 * radius, 119 * radius, 320 * radius);
                ctx[b[62]](137 * radius, 321 * radius, 146 * radius, 323 * radius, 139 * radius, 320 * radius);
                ctx[b[62]](141 * radius, 324 * radius, 150 * radius, 324 * radius, 153 * radius, 320 * radius);
                ctx[b[62]](168 * radius, 319 * radius, 171 * radius, 316 * radius, 173 * radius, 307 * radius);
                ctx[b[62]](180 * radius, 305 * radius, 180 * radius, 301 * radius, 178 * radius, 296 * radius);
                ctx[b[62]](183 * radius, 296 * radius, 185 * radius, 289 * radius, 188 * radius, 279 * radius);
                ctx[b[62]](171 * radius, 286 * radius, 149 * radius, 290 * radius, 132 * radius, 289 * radius);
                ctx[b[62]](101 * radius, 290 * radius, 86 * radius, 280 * radius, 74 * radius, 271 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](76 * radius, 252 * radius);
                ctx[b[62]](85 * radius, 294 * radius, 96 * radius, 314 * radius, 103 * radius, 314 * radius);
                ctx[b[62]](106 * radius, 316 * radius, 151 * radius, 314 * radius, 156 * radius, 314 * radius);
                ctx[b[62]](169 * radius, 317 * radius, 182 * radius, 285 * radius, 191 * radius, 256 * radius);
                ctx[b[62]](134.5 * radius, 254 * radius, 134.5 * radius, 254 * radius, 78 * radius, 252 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](84 * radius, 257 * radius);
                ctx[b[62]](122 * radius, 273 * radius, 146 * radius, 268 * radius, 179 * radius, 261 * radius);
                ctx[b[62]](190 * radius, 258 * radius, 187 * radius, 266 * radius, 178 * radius, 272 * radius);
                ctx[b[62]](160 * radius, 284 * radius, 123 * radius, 282 * radius, 100 * radius, 277 * radius);
                ctx[b[62]](73 * radius, 260 * radius, 79 * radius, 257 * radius, 84 * radius, 257 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](125 * radius, 65 * radius);
                ctx[b[62]](133 * radius, 45 * radius, 136 * radius, 42 * radius, 141 * radius, 55 * radius);
                ctx[b[62]](151 * radius, 96 * radius, 164 * radius, 117 * radius, 175 * radius, 134 * radius);
                ctx[b[62]](203 * radius, 181 * radius, 207 * radius, 182 * radius, 208 * radius, 215 * radius);
                ctx[b[62]](206 * radius, 240 * radius, 205 * radius, 246 * radius, 184 * radius, 258 * radius);
                ctx[b[62]](161 * radius, 267 * radius, 131 * radius, 272 * radius, 86 * radius, 258 * radius);
                ctx[b[62]](67 * radius, 252 * radius, 68 * radius, 239 * radius, 64 * radius, 216 * radius);
                ctx[b[62]](62 * radius, 194 * radius, 72 * radius, 169 * radius, 92 * radius, 142 * radius);
                ctx[b[62]](106 * radius, 121 * radius, 114 * radius, 101 * radius, 125 * radius, 65 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](115 * radius, 37 * radius);
                ctx[b[62]](116 * radius, 28 * radius, 119 * radius, 27 * radius, 126 * radius, 37 * radius);
                ctx[b[62]](134 * radius, 48 * radius, 134 * radius, 49 * radius, 132 * radius, 59 * radius);
                ctx[b[62]](131 * radius, 67 * radius, 127 * radius, 65 * radius, 120 * radius, 56 * radius);
                ctx[b[62]](114 * radius, 49 * radius, 113 * radius, 43 * radius, 115 * radius, 38 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](146 * radius, 34 * radius);
                ctx[b[62]](152 * radius, 28 * radius, 155 * radius, 27 * radius, 157 * radius, 39 * radius);
                ctx[b[62]](157 * radius, 45 * radius, 157 * radius, 49 * radius, 150 * radius, 56 * radius);
                ctx[b[62]](141 * radius, 66 * radius, 138 * radius, 66 * radius, 138 * radius, 57 * radius);
                ctx[b[62]](137 * radius, 50 * radius, 137 * radius, 47 * radius, 141 * radius, 42 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](143 * radius, 69 * radius);
                ctx[b[62]](148 * radius, 56 * radius, 156 * radius, 50 * radius, 158 * radius, 58 * radius);
                ctx[b[62]](159 * radius, 64 * radius, 160 * radius, 67 * radius, 153 * radius, 77 * radius);
                ctx[b[62]](148 * radius, 83 * radius, 145 * radius, 84 * radius, 143 * radius, 77 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](149 * radius, 92 * radius);
                ctx[b[62]](149 * radius, 89 * radius, 151 * radius, 84 * radius, 156 * radius, 79 * radius);
                ctx[b[62]](161 * radius, 73 * radius, 163 * radius, 78 * radius, 162 * radius, 86 * radius);
                ctx[b[62]](161 * radius, 91 * radius, 155 * radius, 99 * radius, 152 * radius, 98 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](111 * radius, 61 * radius);
                ctx[b[62]](114 * radius, 51 * radius, 117 * radius, 51 * radius, 124 * radius, 64 * radius);
                ctx[b[62]](128 * radius, 68 * radius, 128 * radius, 76 * radius, 126 * radius, 79 * radius);
                ctx[b[62]](123 * radius, 84 * radius, 122 * radius, 82 * radius, 115 * radius, 74 * radius);
                ctx[b[62]](112 * radius, 67 * radius, 115 * radius, 74 * radius, 115 * radius, 74 * radius);
                ctx[b[62]](111 * radius, 68 * radius, 111 * radius, 66 * radius, 111 * radius, 62 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](107 * radius, 81 * radius);
                ctx[b[62]](108 * radius, 74 * radius, 112 * radius, 73 * radius, 118 * radius, 84 * radius);
                ctx[b[62]](122 * radius, 88 * radius, 122 * radius, 93 * radius, 121 * radius, 98 * radius);
                ctx[b[62]](114 * radius, 98 * radius, 113 * radius, 98 * radius, 109 * radius, 90 * radius);
                ctx[b[62]](107 * radius, 87 * radius, 106 * radius, 85 * radius, 107 * radius, 82 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -10 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](133 * radius, 99 * radius);
                ctx[b[62]](186 * radius, 123 * radius, 199 * radius, 152 * radius, 209 * radius, 169 * radius);
                ctx[b[62]](228 * radius, 205 * radius, 224 * radius, 245 * radius, 190 * radius, 276 * radius);
                ctx[b[62]](161 * radius, 296 * radius, 99 * radius, 292 * radius, 79 * radius, 274 * radius);
                ctx[b[62]](49 * radius, 253 * radius, 47 * radius, 214 * radius, 50 * radius, 197 * radius);
                ctx[b[62]](61 * radius, 143 * radius, 102 * radius, 113 * radius, 131 * radius, 99 * radius);
                ctx[b[238]]();
                equal(ctx, options[3], options[3], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](73 * radius, 270 * radius);
                ctx[b[62]](79 * radius, 280 * radius, 77 * radius, 280 * radius, 78 * radius, 287 * radius);
                ctx[b[62]](78 * radius, 290 * radius, 83 * radius, 291 * radius, 82 * radius, 299 * radius);
                ctx[b[62]](81 * radius, 301 * radius, 87 * radius, 301 * radius, 92 * radius, 314 * radius);
                ctx[b[62]](94 * radius, 319 * radius, 100 * radius, 321 * radius, 107 * radius, 320 * radius);
                ctx[b[62]](111 * radius, 323 * radius, 114 * radius, 324 * radius, 119 * radius, 320 * radius);
                ctx[b[62]](137 * radius, 321 * radius, 146 * radius, 323 * radius, 139 * radius, 320 * radius);
                ctx[b[62]](141 * radius, 324 * radius, 150 * radius, 324 * radius, 153 * radius, 320 * radius);
                ctx[b[62]](168 * radius, 319 * radius, 171 * radius, 316 * radius, 173 * radius, 307 * radius);
                ctx[b[62]](180 * radius, 305 * radius, 180 * radius, 301 * radius, 178 * radius, 296 * radius);
                ctx[b[62]](183 * radius, 296 * radius, 185 * radius, 289 * radius, 188 * radius, 279 * radius);
                ctx[b[62]](171 * radius, 286 * radius, 149 * radius, 290 * radius, 132 * radius, 289 * radius);
                ctx[b[62]](101 * radius, 290 * radius, 86 * radius, 280 * radius, 74 * radius, 271 * radius);
                ctx[b[238]]();
                equal(ctx, options[3], options[3], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](76 * radius, 252 * radius);
                ctx[b[62]](85 * radius, 294 * radius, 96 * radius, 314 * radius, 103 * radius, 314 * radius);
                ctx[b[62]](106 * radius, 316 * radius, 151 * radius, 314 * radius, 156 * radius, 314 * radius);
                ctx[b[62]](169 * radius, 317 * radius, 182 * radius, 285 * radius, 191 * radius, 256 * radius);
                ctx[b[62]](134.5 * radius, 254 * radius, 134.5 * radius, 254 * radius, 78 * radius, 252 * radius);
                ctx[b[238]]();
                equal(ctx, options[3], options[3], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](84 * radius, 257 * radius);
                ctx[b[62]](122 * radius, 273 * radius, 146 * radius, 268 * radius, 179 * radius, 261 * radius);
                ctx[b[62]](190 * radius, 258 * radius, 187 * radius, 266 * radius, 178 * radius, 272 * radius);
                ctx[b[62]](160 * radius, 284 * radius, 123 * radius, 282 * radius, 100 * radius, 277 * radius);
                ctx[b[62]](73 * radius, 260 * radius, 79 * radius, 257 * radius, 84 * radius, 257 * radius);
                ctx[b[238]]();
                equal(ctx, options[3], options[3], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](125 * radius, 65 * radius);
                ctx[b[62]](133 * radius, 45 * radius, 136 * radius, 42 * radius, 141 * radius, 55 * radius);
                ctx[b[62]](151 * radius, 96 * radius, 164 * radius, 117 * radius, 175 * radius, 134 * radius);
                ctx[b[62]](203 * radius, 181 * radius, 207 * radius, 182 * radius, 208 * radius, 215 * radius);
                ctx[b[62]](206 * radius, 240 * radius, 205 * radius, 246 * radius, 184 * radius, 258 * radius);
                ctx[b[62]](161 * radius, 267 * radius, 131 * radius, 272 * radius, 86 * radius, 258 * radius);
                ctx[b[62]](67 * radius, 252 * radius, 68 * radius, 239 * radius, 64 * radius, 216 * radius);
                ctx[b[62]](62 * radius, 194 * radius, 72 * radius, 169 * radius, 92 * radius, 142 * radius);
                ctx[b[62]](106 * radius, 121 * radius, 114 * radius, 101 * radius, 125 * radius, 65 * radius);
                ctx[b[238]]();
                equal(ctx, options[3], options[3], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](115 * radius, 37 * radius);
                ctx[b[62]](116 * radius, 28 * radius, 119 * radius, 27 * radius, 126 * radius, 37 * radius);
                ctx[b[62]](134 * radius, 48 * radius, 134 * radius, 49 * radius, 132 * radius, 59 * radius);
                ctx[b[62]](131 * radius, 67 * radius, 127 * radius, 65 * radius, 120 * radius, 56 * radius);
                ctx[b[62]](114 * radius, 49 * radius, 113 * radius, 43 * radius, 115 * radius, 38 * radius);
                ctx[b[238]]();
                equal(ctx, options[3], options[3], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](146 * radius, 34 * radius);
                ctx[b[62]](152 * radius, 28 * radius, 155 * radius, 27 * radius, 157 * radius, 39 * radius);
                ctx[b[62]](157 * radius, 45 * radius, 157 * radius, 49 * radius, 150 * radius, 56 * radius);
                ctx[b[62]](141 * radius, 66 * radius, 138 * radius, 66 * radius, 138 * radius, 57 * radius);
                ctx[b[62]](137 * radius, 50 * radius, 137 * radius, 47 * radius, 141 * radius, 42 * radius);
                ctx[b[238]]();
                equal(ctx, options[3], options[3], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](143 * radius, 69 * radius);
                ctx[b[62]](148 * radius, 56 * radius, 156 * radius, 50 * radius, 158 * radius, 58 * radius);
                ctx[b[62]](159 * radius, 64 * radius, 160 * radius, 67 * radius, 153 * radius, 77 * radius);
                ctx[b[62]](148 * radius, 83 * radius, 145 * radius, 84 * radius, 143 * radius, 77 * radius);
                ctx[b[238]]();
                equal(ctx, options[3], options[3], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](149 * radius, 92 * radius);
                ctx[b[62]](149 * radius, 89 * radius, 151 * radius, 84 * radius, 156 * radius, 79 * radius);
                ctx[b[62]](161 * radius, 73 * radius, 163 * radius, 78 * radius, 162 * radius, 86 * radius);
                ctx[b[62]](161 * radius, 91 * radius, 155 * radius, 99 * radius, 152 * radius, 98 * radius);
                ctx[b[238]]();
                equal(ctx, options[3], options[3], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](111 * radius, 61 * radius);
                ctx[b[62]](114 * radius, 51 * radius, 117 * radius, 51 * radius, 124 * radius, 64 * radius);
                ctx[b[62]](128 * radius, 68 * radius, 128 * radius, 76 * radius, 126 * radius, 79 * radius);
                ctx[b[62]](123 * radius, 84 * radius, 122 * radius, 82 * radius, 115 * radius, 74 * radius);
                ctx[b[62]](112 * radius, 67 * radius, 115 * radius, 74 * radius, 115 * radius, 74 * radius);
                ctx[b[62]](111 * radius, 68 * radius, 111 * radius, 66 * radius, 111 * radius, 62 * radius);
                ctx[b[238]]();
                equal(ctx, options[3], options[3], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](107 * radius, 81 * radius);
                ctx[b[62]](108 * radius, 74 * radius, 112 * radius, 73 * radius, 118 * radius, 84 * radius);
                ctx[b[62]](122 * radius, 88 * radius, 122 * radius, 93 * radius, 121 * radius, 98 * radius);
                ctx[b[62]](114 * radius, 98 * radius, 113 * radius, 98 * radius, 109 * radius, 90 * radius);
                ctx[b[62]](107 * radius, 87 * radius, 106 * radius, 85 * radius, 107 * radius, 82 * radius);
                ctx[b[238]]();
                equal(ctx, options[3], options[3], 8 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](133 * radius, 99 * radius);
                ctx[b[62]](186 * radius, 123 * radius, 199 * radius, 152 * radius, 209 * radius, 169 * radius);
                ctx[b[62]](228 * radius, 205 * radius, 224 * radius, 245 * radius, 190 * radius, 276 * radius);
                ctx[b[62]](161 * radius, 296 * radius, 99 * radius, 292 * radius, 79 * radius, 274 * radius);
                ctx[b[62]](49 * radius, 253 * radius, 47 * radius, 214 * radius, 50 * radius, 197 * radius);
                ctx[b[62]](61 * radius, 143 * radius, 102 * radius, 113 * radius, 131 * radius, 99 * radius);
                ctx[b[238]]();
                equal(ctx, options[1]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](73 * radius, 270 * radius);
                ctx[b[62]](79 * radius, 280 * radius, 77 * radius, 280 * radius, 78 * radius, 287 * radius);
                ctx[b[62]](78 * radius, 290 * radius, 83 * radius, 291 * radius, 82 * radius, 299 * radius);
                ctx[b[62]](81 * radius, 301 * radius, 87 * radius, 301 * radius, 92 * radius, 314 * radius);
                ctx[b[62]](94 * radius, 319 * radius, 100 * radius, 321 * radius, 107 * radius, 320 * radius);
                ctx[b[62]](111 * radius, 323 * radius, 114 * radius, 324 * radius, 119 * radius, 320 * radius);
                ctx[b[62]](137 * radius, 321 * radius, 146 * radius, 323 * radius, 139 * radius, 320 * radius);
                ctx[b[62]](141 * radius, 324 * radius, 150 * radius, 324 * radius, 153 * radius, 320 * radius);
                ctx[b[62]](168 * radius, 319 * radius, 171 * radius, 316 * radius, 173 * radius, 307 * radius);
                ctx[b[62]](180 * radius, 305 * radius, 180 * radius, 301 * radius, 178 * radius, 296 * radius);
                ctx[b[62]](183 * radius, 296 * radius, 185 * radius, 289 * radius, 188 * radius, 279 * radius);
                ctx[b[62]](171 * radius, 286 * radius, 149 * radius, 290 * radius, 132 * radius, 289 * radius);
                ctx[b[62]](101 * radius, 290 * radius, 86 * radius, 280 * radius, 74 * radius, 271 * radius);
                ctx[b[238]]();
                equal(ctx, options[5]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](76 * radius, 252 * radius);
                ctx[b[62]](85 * radius, 294 * radius, 96 * radius, 314 * radius, 103 * radius, 314 * radius);
                ctx[b[62]](106 * radius, 316 * radius, 151 * radius, 314 * radius, 156 * radius, 314 * radius);
                ctx[b[62]](169 * radius, 317 * radius, 182 * radius, 285 * radius, 191 * radius, 256 * radius);
                ctx[b[62]](134.5 * radius, 254 * radius, 134.5 * radius, 254 * radius, 78 * radius, 252 * radius);
                ctx[b[238]]();
                equal(ctx, options[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](84 * radius, 257 * radius);
                ctx[b[62]](122 * radius, 273 * radius, 146 * radius, 268 * radius, 179 * radius, 261 * radius);
                ctx[b[62]](190 * radius, 258 * radius, 187 * radius, 266 * radius, 178 * radius, 272 * radius);
                ctx[b[62]](160 * radius, 284 * radius, 123 * radius, 282 * radius, 100 * radius, 277 * radius);
                ctx[b[62]](73 * radius, 260 * radius, 79 * radius, 257 * radius, 84 * radius, 257 * radius);
                ctx[b[238]]();
                equal(ctx, options[1]);
                callback(ctx, 102 * radius, 269 * radius, 11 * radius);
                equal(ctx, options[3]);
                callback(ctx, 98 * radius, 266 * radius, 5 * radius);
                equal(ctx, options[6]);
                callback(ctx, 168 * radius, 269 * radius, 11 * radius);
                equal(ctx, options[3]);
                callback(ctx, 164 * radius, 266 * radius, 5 * radius);
                equal(ctx, options[6]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](125 * radius, 65 * radius);
                ctx[b[62]](133 * radius, 45 * radius, 136 * radius, 42 * radius, 141 * radius, 55 * radius);
                ctx[b[62]](151 * radius, 96 * radius, 164 * radius, 117 * radius, 175 * radius, 134 * radius);
                ctx[b[62]](203 * radius, 181 * radius, 207 * radius, 182 * radius, 208 * radius, 215 * radius);
                ctx[b[62]](206 * radius, 240 * radius, 205 * radius, 246 * radius, 184 * radius, 258 * radius);
                ctx[b[62]](161 * radius, 267 * radius, 131 * radius, 272 * radius, 86 * radius, 258 * radius);
                ctx[b[62]](67 * radius, 252 * radius, 68 * radius, 239 * radius, 64 * radius, 216 * radius);
                ctx[b[62]](62 * radius, 194 * radius, 72 * radius, 169 * radius, 92 * radius, 142 * radius);
                ctx[b[62]](106 * radius, 121 * radius, 114 * radius, 101 * radius, 125 * radius, 65 * radius);
                ctx[b[238]]();
                equal(ctx, options[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](115 * radius, 235 * radius);
                ctx[b[62]](118 * radius, 258 * radius, 137 * radius, 268 * radius, 148 * radius, 246 * radius);
                ctx[b[62]](156 * radius, 228 * radius, 152 * radius, 169 * radius, 150 * radius, 140 * radius);
                ctx[b[62]](147 * radius, 87 * radius, 143 * radius, 69 * radius, 142 * radius, 60 * radius);
                ctx[b[62]](136 * radius, 44 * radius, 132 * radius, 43 * radius, 127 * radius, 62 * radius);
                ctx[b[62]](119 * radius, 116 * radius, 119 * radius, 140 * radius, 116 * radius, 166 * radius);
                ctx[b[62]](113 * radius, 202 * radius, 113 * radius, 223 * radius, 115 * radius, 233 * radius);
                ctx[b[238]]();
                equal(ctx, options[4]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](132 * radius, 219 * radius);
                ctx[b[62]](140 * radius, 229 * radius, 142 * radius, 231 * radius, 145 * radius, 237 * radius);
                ctx[b[62]](145 * radius, 245 * radius, 139 * radius, 249 * radius, 133 * radius, 249 * radius);
                ctx[b[62]](123 * radius, 248 * radius, 123 * radius, 243 * radius, 121 * radius, 239 * radius);
                ctx[b[62]](126 * radius, 227 * radius, 129 * radius, 223 * radius, 132 * radius, 219 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](133 * radius, 179 * radius);
                ctx[b[62]](140 * radius, 188.5 * radius, 140 * radius, 188.5 * radius, 147 * radius, 198 * radius);
                ctx[b[62]](148 * radius, 209 * radius, 142 * radius, 214 * radius, 133 * radius, 214 * radius);
                ctx[b[62]](121 * radius, 211 * radius, 121 * radius, 207 * radius, 120 * radius, 200 * radius);
                ctx[b[62]](126.5 * radius, 189.5 * radius, 126.5 * radius, 189.5 * radius, 133 * radius, 179 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](133 * radius, 143 * radius);
                ctx[b[62]](139 * radius, 151.5 * radius, 139 * radius, 151.5 * radius, 145 * radius, 160 * radius);
                ctx[b[62]](143 * radius, 167 * radius, 140 * radius, 170 * radius, 134 * radius, 170 * radius);
                ctx[b[62]](128 * radius, 169 * radius, 124 * radius, 167 * radius, 123 * radius, 161 * radius);
                ctx[b[62]](128 * radius, 152 * radius, 128 * radius, 152 * radius, 133 * radius, 143 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](133 * radius, 115 * radius);
                ctx[b[62]](137.5 * radius, 121.5 * radius, 137.5 * radius, 121.5 * radius, 142 * radius, 128 * radius);
                ctx[b[62]](141 * radius, 133 * radius, 138 * radius, 135 * radius, 133 * radius, 135 * radius);
                ctx[b[62]](129 * radius, 135 * radius, 125 * radius, 132 * radius, 125 * radius, 129 * radius);
                ctx[b[62]](129 * radius, 122 * radius, 129 * radius, 122 * radius, 133 * radius, 115 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](133 * radius, 94 * radius);
                ctx[b[62]](136.5 * radius, 98.5 * radius, 136.5 * radius, 98.5 * radius, 140 * radius, 103 * radius);
                ctx[b[62]](139 * radius, 109 * radius, 137 * radius, 109 * radius, 133 * radius, 110 * radius);
                ctx[b[62]](127 * radius, 108 * radius, 129 * radius, 107 * radius, 127 * radius, 105 * radius);
                ctx[b[62]](130 * radius, 99.5 * radius, 130 * radius, 99.5 * radius, 133 * radius, 94 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](130 * radius, 279 * radius);
                ctx[b[62]](136.5 * radius, 287.5 * radius, 136.5 * radius, 287.5 * radius, 143 * radius, 296 * radius);
                ctx[b[62]](143 * radius, 302 * radius, 139 * radius, 309 * radius, 131 * radius, 308 * radius);
                ctx[b[62]](123 * radius, 306 * radius, 121 * radius, 303 * radius, 120 * radius, 297 * radius);
                ctx[b[62]](125.5 * radius, 288.5 * radius, 125.5 * radius, 288.5 * radius, 131 * radius, 280 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](147 * radius, 303 * radius);
                ctx[b[62]](151 * radius, 311 * radius, 151 * radius, 319 * radius, 147 * radius, 321 * radius);
                ctx[b[62]](138 * radius, 320 * radius, 145 * radius, 308 * radius, 147 * radius, 303 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](115 * radius, 303 * radius);
                ctx[b[62]](115 * radius, 312 * radius, 118 * radius, 319 * radius, 115 * radius, 319 * radius);
                ctx[b[62]](112 * radius, 324 * radius, 109 * radius, 318 * radius, 109 * radius, 314 * radius);
                ctx[b[62]](109 * radius, 308 * radius, 112 * radius, 303 * radius, 115 * radius, 303 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](89 * radius, 280 * radius);
                ctx[b[62]](83 * radius, 279 * radius, 80 * radius, 281 * radius, 81 * radius, 286 * radius);
                ctx[b[62]](83 * radius, 290 * radius, 84 * radius, 290 * radius, 87 * radius, 286 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](94 * radius, 290 * radius);
                ctx[b[62]](93 * radius, 294 * radius, 90 * radius, 303 * radius, 86 * radius, 298 * radius);
                ctx[b[62]](84 * radius, 295 * radius, 84 * radius, 291 * radius, 89 * radius, 291 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](163 * radius, 295 * radius);
                ctx[b[62]](175 * radius, 294 * radius, 176 * radius, 296 * radius, 175 * radius, 301 * radius);
                ctx[b[62]](174 * radius, 305 * radius, 171 * radius, 305 * radius, 166 * radius, 300 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](172 * radius, 286 * radius);
                ctx[b[62]](180 * radius, 285 * radius, 181 * radius, 285 * radius, 180 * radius, 291 * radius);
                ctx[b[62]](176 * radius, 295 * radius, 174 * radius, 294 * radius, 172 * radius, 286 * radius);
                ctx[b[238]]();
                equal(ctx, options[8]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](115 * radius, 37 * radius);
                ctx[b[62]](116 * radius, 28 * radius, 119 * radius, 27 * radius, 126 * radius, 37 * radius);
                ctx[b[62]](134 * radius, 48 * radius, 134 * radius, 49 * radius, 132 * radius, 59 * radius);
                ctx[b[62]](131 * radius, 67 * radius, 127 * radius, 65 * radius, 120 * radius, 56 * radius);
                ctx[b[62]](114 * radius, 49 * radius, 113 * radius, 43 * radius, 115 * radius, 38 * radius);
                ctx[b[238]]();
                equal(ctx, options[7]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](146 * radius, 34 * radius);
                ctx[b[62]](152 * radius, 28 * radius, 155 * radius, 27 * radius, 157 * radius, 39 * radius);
                ctx[b[62]](157 * radius, 45 * radius, 157 * radius, 49 * radius, 150 * radius, 56 * radius);
                ctx[b[62]](141 * radius, 66 * radius, 138 * radius, 66 * radius, 138 * radius, 57 * radius);
                ctx[b[62]](137 * radius, 50 * radius, 137 * radius, 47 * radius, 141 * radius, 42 * radius);
                ctx[b[238]]();
                equal(ctx, options[7]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](143 * radius, 69 * radius);
                ctx[b[62]](148 * radius, 56 * radius, 156 * radius, 50 * radius, 158 * radius, 58 * radius);
                ctx[b[62]](159 * radius, 64 * radius, 160 * radius, 67 * radius, 153 * radius, 77 * radius);
                ctx[b[62]](148 * radius, 83 * radius, 145 * radius, 84 * radius, 143 * radius, 77 * radius);
                ctx[b[238]]();
                equal(ctx, options[7]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](149 * radius, 92 * radius);
                ctx[b[62]](149 * radius, 89 * radius, 151 * radius, 84 * radius, 156 * radius, 79 * radius);
                ctx[b[62]](161 * radius, 73 * radius, 163 * radius, 78 * radius, 162 * radius, 86 * radius);
                ctx[b[62]](161 * radius, 91 * radius, 155 * radius, 99 * radius, 152 * radius, 98 * radius);
                ctx[b[238]]();
                equal(ctx, options[7]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](111 * radius, 61 * radius);
                ctx[b[62]](114 * radius, 51 * radius, 117 * radius, 51 * radius, 124 * radius, 64 * radius);
                ctx[b[62]](128 * radius, 68 * radius, 128 * radius, 76 * radius, 126 * radius, 79 * radius);
                ctx[b[62]](123 * radius, 84 * radius, 122 * radius, 82 * radius, 115 * radius, 74 * radius);
                ctx[b[62]](112 * radius, 67 * radius, 115 * radius, 74 * radius, 115 * radius, 74 * radius);
                ctx[b[62]](111 * radius, 68 * radius, 111 * radius, 66 * radius, 111 * radius, 62 * radius);
                ctx[b[238]]();
                equal(ctx, options[7]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](107 * radius, 81 * radius);
                ctx[b[62]](108 * radius, 74 * radius, 112 * radius, 73 * radius, 118 * radius, 84 * radius);
                ctx[b[62]](122 * radius, 88 * radius, 122 * radius, 93 * radius, 121 * radius, 98 * radius);
                ctx[b[62]](114 * radius, 98 * radius, 113 * radius, 98 * radius, 109 * radius, 90 * radius);
                ctx[b[62]](107 * radius, 87 * radius, 106 * radius, 85 * radius, 107 * radius, 82 * radius);
                ctx[b[238]]();
                equal(ctx, options[7]);
                return hash;
            }
        function ClosePixelation(radius, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 271 * radius;
                hash[b[236]] = 366 * radius;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](133 * radius, 99 * radius);
                ctx[b[62]](186 * radius, 123 * radius, 199 * radius, 152 * radius, 209 * radius, 169 * radius);
                ctx[b[62]](228 * radius, 205 * radius, 224 * radius, 245 * radius, 190 * radius, 276 * radius);
                ctx[b[62]](161 * radius, 296 * radius, 99 * radius, 292 * radius, 79 * radius, 274 * radius);
                ctx[b[62]](49 * radius, 253 * radius, 47 * radius, 214 * radius, 50 * radius, 197 * radius);
                ctx[b[62]](61 * radius, 143 * radius, 102 * radius, 113 * radius, 131 * radius, 99 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](73 * radius, 270 * radius);
                ctx[b[62]](79 * radius, 280 * radius, 77 * radius, 280 * radius, 78 * radius, 287 * radius);
                ctx[b[62]](78 * radius, 290 * radius, 83 * radius, 291 * radius, 82 * radius, 299 * radius);
                ctx[b[62]](81 * radius, 301 * radius, 87 * radius, 301 * radius, 92 * radius, 314 * radius);
                ctx[b[62]](94 * radius, 319 * radius, 100 * radius, 321 * radius, 107 * radius, 320 * radius);
                ctx[b[62]](111 * radius, 323 * radius, 114 * radius, 324 * radius, 119 * radius, 320 * radius);
                ctx[b[62]](137 * radius, 321 * radius, 146 * radius, 323 * radius, 139 * radius, 320 * radius);
                ctx[b[62]](141 * radius, 324 * radius, 150 * radius, 324 * radius, 153 * radius, 320 * radius);
                ctx[b[62]](168 * radius, 319 * radius, 171 * radius, 316 * radius, 173 * radius, 307 * radius);
                ctx[b[62]](180 * radius, 305 * radius, 180 * radius, 301 * radius, 178 * radius, 296 * radius);
                ctx[b[62]](183 * radius, 296 * radius, 185 * radius, 289 * radius, 188 * radius, 279 * radius);
                ctx[b[62]](171 * radius, 286 * radius, 149 * radius, 290 * radius, 132 * radius, 289 * radius);
                ctx[b[62]](101 * radius, 290 * radius, 86 * radius, 280 * radius, 74 * radius, 271 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](76 * radius, 252 * radius);
                ctx[b[62]](85 * radius, 294 * radius, 96 * radius, 314 * radius, 103 * radius, 314 * radius);
                ctx[b[62]](106 * radius, 316 * radius, 151 * radius, 314 * radius, 156 * radius, 314 * radius);
                ctx[b[62]](169 * radius, 317 * radius, 182 * radius, 285 * radius, 191 * radius, 256 * radius);
                ctx[b[62]](134.5 * radius, 254 * radius, 134.5 * radius, 254 * radius, 78 * radius, 252 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](84 * radius, 257 * radius);
                ctx[b[62]](122 * radius, 273 * radius, 146 * radius, 268 * radius, 179 * radius, 261 * radius);
                ctx[b[62]](190 * radius, 258 * radius, 187 * radius, 266 * radius, 178 * radius, 272 * radius);
                ctx[b[62]](160 * radius, 284 * radius, 123 * radius, 282 * radius, 100 * radius, 277 * radius);
                ctx[b[62]](73 * radius, 260 * radius, 79 * radius, 257 * radius, 84 * radius, 257 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](125 * radius, 65 * radius);
                ctx[b[62]](133 * radius, 45 * radius, 136 * radius, 42 * radius, 141 * radius, 55 * radius);
                ctx[b[62]](151 * radius, 96 * radius, 164 * radius, 117 * radius, 175 * radius, 134 * radius);
                ctx[b[62]](203 * radius, 181 * radius, 207 * radius, 182 * radius, 208 * radius, 215 * radius);
                ctx[b[62]](206 * radius, 240 * radius, 205 * radius, 246 * radius, 184 * radius, 258 * radius);
                ctx[b[62]](161 * radius, 267 * radius, 131 * radius, 272 * radius, 86 * radius, 258 * radius);
                ctx[b[62]](67 * radius, 252 * radius, 68 * radius, 239 * radius, 64 * radius, 216 * radius);
                ctx[b[62]](62 * radius, 194 * radius, 72 * radius, 169 * radius, 92 * radius, 142 * radius);
                ctx[b[62]](106 * radius, 121 * radius, 114 * radius, 101 * radius, 125 * radius, 65 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](115 * radius, 37 * radius);
                ctx[b[62]](116 * radius, 28 * radius, 119 * radius, 27 * radius, 126 * radius, 37 * radius);
                ctx[b[62]](134 * radius, 48 * radius, 134 * radius, 49 * radius, 132 * radius, 59 * radius);
                ctx[b[62]](131 * radius, 67 * radius, 127 * radius, 65 * radius, 120 * radius, 56 * radius);
                ctx[b[62]](114 * radius, 49 * radius, 113 * radius, 43 * radius, 115 * radius, 38 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](146 * radius, 34 * radius);
                ctx[b[62]](152 * radius, 28 * radius, 155 * radius, 27 * radius, 157 * radius, 39 * radius);
                ctx[b[62]](157 * radius, 45 * radius, 157 * radius, 49 * radius, 150 * radius, 56 * radius);
                ctx[b[62]](141 * radius, 66 * radius, 138 * radius, 66 * radius, 138 * radius, 57 * radius);
                ctx[b[62]](137 * radius, 50 * radius, 137 * radius, 47 * radius, 141 * radius, 42 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](143 * radius, 69 * radius);
                ctx[b[62]](148 * radius, 56 * radius, 156 * radius, 50 * radius, 158 * radius, 58 * radius);
                ctx[b[62]](159 * radius, 64 * radius, 160 * radius, 67 * radius, 153 * radius, 77 * radius);
                ctx[b[62]](148 * radius, 83 * radius, 145 * radius, 84 * radius, 143 * radius, 77 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](149 * radius, 92 * radius);
                ctx[b[62]](149 * radius, 89 * radius, 151 * radius, 84 * radius, 156 * radius, 79 * radius);
                ctx[b[62]](161 * radius, 73 * radius, 163 * radius, 78 * radius, 162 * radius, 86 * radius);
                ctx[b[62]](161 * radius, 91 * radius, 155 * radius, 99 * radius, 152 * radius, 98 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](111 * radius, 61 * radius);
                ctx[b[62]](114 * radius, 51 * radius, 117 * radius, 51 * radius, 124 * radius, 64 * radius);
                ctx[b[62]](128 * radius, 68 * radius, 128 * radius, 76 * radius, 126 * radius, 79 * radius);
                ctx[b[62]](123 * radius, 84 * radius, 122 * radius, 82 * radius, 115 * radius, 74 * radius);
                ctx[b[62]](112 * radius, 67 * radius, 115 * radius, 74 * radius, 115 * radius, 74 * radius);
                ctx[b[62]](111 * radius, 68 * radius, 111 * radius, 66 * radius, 111 * radius, 62 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](107 * radius, 81 * radius);
                ctx[b[62]](108 * radius, 74 * radius, 112 * radius, 73 * radius, 118 * radius, 84 * radius);
                ctx[b[62]](122 * radius, 88 * radius, 122 * radius, 93 * radius, 121 * radius, 98 * radius);
                ctx[b[62]](114 * radius, 98 * radius, 113 * radius, 98 * radius, 109 * radius, 90 * radius);
                ctx[b[62]](107 * radius, 87 * radius, 106 * radius, 85 * radius, 107 * radius, 82 * radius);
                ctx[b[238]]();
                equal(ctx, options[0]);
                return hash;
            }
        function fetchRound(radius, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 85 * radius;
                hash[b[236]] = 145 * radius;
                ctx[b[150]](-20 * radius, -95 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](50 * radius, 105 * radius);
                ctx[b[62]](52 * radius, 119 * radius, 64 * radius, 137 * radius, 71 * radius, 146 * radius);
                ctx[b[62]](71 * radius, 161 * radius, 74 * radius, 169 * radius, 79 * radius, 179 * radius);
                ctx[b[62]](68 * radius, 192 * radius, 70 * radius, 204 * radius, 69 * radius, 216 * radius);
                ctx[b[62]](50 * radius, 189.5 * radius, 50 * radius, 189.5 * radius, 31 * radius, 163 * radius);
                ctx[b[238]]();
                equal(ctx, args[1]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](44 * radius, 106 * radius);
                ctx[b[62]](49 * radius, 90 * radius, 58 * radius, 104 * radius, 51 * radius, 121 * radius);
                ctx[b[62]](45 * radius, 143 * radius, 41 * radius, 151 * radius, 37 * radius, 162 * radius);
                ctx[b[62]](48 * radius, 180 * radius, 58 * radius, 188 * radius, 76 * radius, 205 * radius);
                ctx[b[62]](104 * radius, 209 * radius, 105 * radius, 229 * radius, 92 * radius, 235 * radius);
                ctx[b[62]](76 * radius, 239 * radius, 75 * radius, 232 * radius, 56 * radius, 213 * radius);
                ctx[b[62]](31 * radius, 187 * radius, 28 * radius, 176 * radius, 23 * radius, 162 * radius);
                ctx[b[62]](38 * radius, 131 * radius, 40 * radius, 120 * radius, 44 * radius, 106 * radius);
                ctx[b[238]]();
                equal(ctx, args[2], args[3], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](30 * radius, 159 * radius);
                ctx[b[62]](46 * radius, 157 * radius, 59 * radius, 152 * radius, 68 * radius, 148 * radius);
                ctx[b[62]](63 * radius, 155 * radius, 52 * radius, 160 * radius, 44 * radius, 164 * radius);
                ctx[b[62]](59 * radius, 169 * radius, 66 * radius, 174 * radius, 75 * radius, 178 * radius);
                ctx[b[62]](58 * radius, 178 * radius, 49 * radius, 175 * radius, 37 * radius, 174 * radius);
                ctx[b[238]]();
                equal(ctx, args[2]);
                return hash;
            }
        function onceAgeCb(radius, count)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 85 * radius;
                hash[b[236]] = 145 * radius;
                ctx[b[150]](-20 * radius, -95 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](50 * radius, 105 * radius);
                ctx[b[62]](52 * radius, 119 * radius, 64 * radius, 137 * radius, 71 * radius, 146 * radius);
                ctx[b[62]](71 * radius, 161 * radius, 74 * radius, 169 * radius, 79 * radius, 179 * radius);
                ctx[b[62]](68 * radius, 192 * radius, 70 * radius, 204 * radius, 69 * radius, 216 * radius);
                ctx[b[62]](50 * radius, 189.5 * radius, 50 * radius, 189.5 * radius, 31 * radius, 163 * radius);
                ctx[b[238]]();
                equal(ctx, count);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](44 * radius, 106 * radius);
                ctx[b[62]](49 * radius, 90 * radius, 58 * radius, 104 * radius, 51 * radius, 121 * radius);
                ctx[b[62]](45 * radius, 143 * radius, 41 * radius, 151 * radius, 37 * radius, 162 * radius);
                ctx[b[62]](48 * radius, 180 * radius, 58 * radius, 188 * radius, 76 * radius, 205 * radius);
                ctx[b[62]](104 * radius, 209 * radius, 105 * radius, 229 * radius, 92 * radius, 235 * radius);
                ctx[b[62]](76 * radius, 239 * radius, 75 * radius, 232 * radius, 56 * radius, 213 * radius);
                ctx[b[62]](31 * radius, 187 * radius, 28 * radius, 176 * radius, 23 * radius, 162 * radius);
                ctx[b[62]](38 * radius, 131 * radius, 40 * radius, 120 * radius, 44 * radius, 106 * radius);
                ctx[b[238]]();
                equal(ctx, count, count, 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](30 * radius, 159 * radius);
                ctx[b[62]](46 * radius, 157 * radius, 59 * radius, 152 * radius, 68 * radius, 148 * radius);
                ctx[b[62]](63 * radius, 155 * radius, 52 * radius, 160 * radius, 44 * radius, 164 * radius);
                ctx[b[62]](59 * radius, 169 * radius, 66 * radius, 174 * radius, 75 * radius, 178 * radius);
                ctx[b[62]](58 * radius, 178 * radius, 49 * radius, 175 * radius, 37 * radius, 174 * radius);
                ctx[b[238]]();
                equal(ctx, count);
                return hash;
            }
        function _generateConfirmationHashForTime(radius, args)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 85 * radius;
                hash[b[236]] = 145 * radius;
                ctx[b[150]](-165 * radius, -95 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](217 * radius, 103 * radius);
                ctx[b[62]](209 * radius, 129 * radius, 203 * radius, 137 * radius, 195 * radius, 146 * radius);
                ctx[b[62]](195 * radius, 159 * radius, 194 * radius, 167 * radius, 189 * radius, 178 * radius);
                ctx[b[62]](193 * radius, 186 * radius, 196 * radius, 195 * radius, 198 * radius, 216 * radius);
                ctx[b[62]](217.5 * radius, 189.5 * radius, 217.5 * radius, 189.5 * radius, 237 * radius, 163 * radius);
                ctx[b[238]]();
                equal(ctx, args[1]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](231 * radius, 163 * radius);
                ctx[b[62]](221 * radius, 139 * radius, 218 * radius, 128 * radius, 215 * radius, 114 * radius);
                ctx[b[62]](213 * radius, 102 * radius, 220 * radius, 92 * radius, 222 * radius, 107 * radius);
                ctx[b[62]](224 * radius, 118 * radius, 233 * radius, 138 * radius, 244 * radius, 161 * radius);
                ctx[b[62]](235 * radius, 188 * radius, 224 * radius, 198 * radius, 204 * radius, 221 * radius);
                ctx[b[62]](190 * radius, 233 * radius, 190 * radius, 235 * radius, 180 * radius, 235 * radius);
                ctx[b[62]](167 * radius, 235 * radius, 164 * radius, 216 * radius, 175 * radius, 211 * radius);
                ctx[b[62]](176 * radius, 208 * radius, 181 * radius, 207 * radius, 191 * radius, 205 * radius);
                ctx[b[62]](213 * radius, 186 * radius, 218 * radius, 180 * radius, 230 * radius, 163 * radius);
                ctx[b[238]]();
                equal(ctx, args[2], args[3], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](234 * radius, 154 * radius);
                ctx[b[62]](227 * radius, 156 * radius, 222 * radius, 156 * radius, 199 * radius, 148 * radius);
                ctx[b[62]](201 * radius, 151 * radius, 216 * radius, 159 * radius, 224 * radius, 162 * radius);
                ctx[b[62]](209 * radius, 169.5 * radius, 209 * radius, 169.5 * radius, 194 * radius, 177 * radius);
                ctx[b[62]](213.5 * radius, 175 * radius, 213.5 * radius, 175 * radius, 233 * radius, 173 * radius);
                ctx[b[238]]();
                equal(ctx, args[2]);
                return hash;
            }
        function checkCellWidth(radius, i)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 85 * radius;
                hash[b[236]] = 145 * radius;
                ctx[b[150]](-165 * radius, -95 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](217 * radius, 103 * radius);
                ctx[b[62]](209 * radius, 129 * radius, 203 * radius, 137 * radius, 195 * radius, 146 * radius);
                ctx[b[62]](195 * radius, 159 * radius, 194 * radius, 167 * radius, 189 * radius, 178 * radius);
                ctx[b[62]](193 * radius, 186 * radius, 196 * radius, 195 * radius, 198 * radius, 216 * radius);
                ctx[b[62]](217.5 * radius, 189.5 * radius, 217.5 * radius, 189.5 * radius, 237 * radius, 163 * radius);
                ctx[b[238]]();
                equal(ctx, i);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](231 * radius, 163 * radius);
                ctx[b[62]](221 * radius, 139 * radius, 218 * radius, 128 * radius, 215 * radius, 114 * radius);
                ctx[b[62]](213 * radius, 102 * radius, 220 * radius, 92 * radius, 222 * radius, 107 * radius);
                ctx[b[62]](224 * radius, 118 * radius, 233 * radius, 138 * radius, 244 * radius, 161 * radius);
                ctx[b[62]](235 * radius, 188 * radius, 224 * radius, 198 * radius, 204 * radius, 221 * radius);
                ctx[b[62]](190 * radius, 233 * radius, 190 * radius, 235 * radius, 180 * radius, 235 * radius);
                ctx[b[62]](167 * radius, 235 * radius, 164 * radius, 216 * radius, 175 * radius, 211 * radius);
                ctx[b[62]](176 * radius, 208 * radius, 181 * radius, 207 * radius, 191 * radius, 205 * radius);
                ctx[b[62]](213 * radius, 186 * radius, 218 * radius, 180 * radius, 230 * radius, 163 * radius);
                ctx[b[238]]();
                equal(ctx, i, i, 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](234 * radius, 154 * radius);
                ctx[b[62]](227 * radius, 156 * radius, 222 * radius, 156 * radius, 199 * radius, 148 * radius);
                ctx[b[62]](201 * radius, 151 * radius, 216 * radius, 159 * radius, 224 * radius, 162 * radius);
                ctx[b[62]](209 * radius, 169.5 * radius, 209 * radius, 169.5 * radius, 194 * radius, 177 * radius);
                ctx[b[62]](213.5 * radius, 175 * radius, 213.5 * radius, 175 * radius, 233 * radius, 173 * radius);
                ctx[b[238]]();
                equal(ctx, i);
                return hash;
            }
        function oc_draw_obj(radius, parent, options)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 187 * radius;
                hash[b[236]] = 119 * radius;
                ctx[b[277]] = parent ? 0.5 : 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[150]](0, 3);
                ctx[b[224]](53 * radius, 45 * radius);
                ctx[b[62]](3 * radius, 60 * radius, 11 * radius, 72 * radius, 19 * radius, 81 * radius);
                ctx[b[62]](28 * radius, 82 * radius, 24 * radius, 81 * radius, 29 * radius, 82 * radius);
                ctx[b[62]](26 * radius, 87 * radius, 28 * radius, 84 * radius, 28 * radius, 87 * radius);
                ctx[b[62]](63 * radius, 101 * radius, 92 * radius, 100 * radius, 138 * radius, 93 * radius);
                ctx[b[62]](172 * radius, 87 * radius, 180 * radius, 72 * radius, 168 * radius, 62 * radius);
                ctx[b[62]](154 * radius, 51 * radius, 150 * radius, 50 * radius, 148 * radius, 49 * radius);
                ctx[b[62]](132 * radius, 42 * radius, 90 * radius, 40 * radius, 55 * radius, 45 * radius);
                ctx[b[238]]();
                equal(ctx, options[5]);
                ctx[b[277]] = 1;
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[150]](0, -3);
                ctx[b[224]](53 * radius, 45 * radius);
                ctx[b[62]](3 * radius, 60 * radius, 11 * radius, 72 * radius, 19 * radius, 81 * radius);
                ctx[b[62]](28 * radius, 82 * radius, 24 * radius, 81 * radius, 29 * radius, 82 * radius);
                ctx[b[62]](26 * radius, 87 * radius, 28 * radius, 84 * radius, 28 * radius, 87 * radius);
                ctx[b[62]](63 * radius, 101 * radius, 92 * radius, 100 * radius, 138 * radius, 93 * radius);
                ctx[b[62]](172 * radius, 87 * radius, 180 * radius, 72 * radius, 168 * radius, 62 * radius);
                ctx[b[62]](154 * radius, 51 * radius, 150 * radius, 50 * radius, 148 * radius, 49 * radius);
                ctx[b[62]](132 * radius, 42 * radius, 90 * radius, 40 * radius, 55 * radius, 45 * radius);
                ctx[b[238]]();
                equal(ctx, options[0], options[1], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](151 * radius, 60 * radius);
                ctx[b[62]](140 * radius, 36 * radius, 137 * radius, 32 * radius, 124 * radius, 29 * radius);
                ctx[b[62]](98 * radius, 22 * radius, 80 * radius, 24 * radius, 62 * radius, 28 * radius);
                ctx[b[62]](42 * radius, 35 * radius, 38 * radius, 46 * radius, 34 * radius, 58 * radius);
                ctx[b[62]](53 * radius, 74 * radius, 76 * radius, 76 * radius, 91 * radius, 78 * radius);
                ctx[b[238]]();
                equal(ctx, options[0], options[1], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](37 * radius, 53 * radius);
                ctx[b[62]](30 * radius, 56 * radius, 29 * radius, 67 * radius, 30 * radius, 68 * radius);
                ctx[b[62]](94 * radius, 108 * radius, 150 * radius, 76 * radius, 155 * radius, 70 * radius);
                ctx[b[62]](154 * radius, 60 * radius, 151 * radius, 54 * radius, 149 * radius, 53 * radius);
                ctx[b[62]](101 * radius, 74 * radius, 66 * radius, 66 * radius, 37 * radius, 53 * radius);
                ctx[b[238]]();
                equal(ctx, options[2], options[3], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](100 * radius, 36 * radius);
                ctx[b[62]](92 * radius, 25 * radius, 86 * radius, 28 * radius, 82 * radius, 34 * radius);
                ctx[b[62]](88 * radius, 40 * radius, 93 * radius, 40 * radius, 98 * radius, 36 * radius);
                ctx[b[238]]();
                equal(ctx, options[0], options[1], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](80 * radius, 43 * radius);
                ctx[b[62]](69 * radius, 46 * radius, 67 * radius, 52 * radius, 69 * radius, 58 * radius);
                equal(ctx, void 0, options[1], 4 * radius);
                callback(ctx, 58 * radius, 50 * radius, 5 * radius);
                equal(ctx, options[4]);
                callback(ctx, 43 * radius, 65 * radius, 5 * radius);
                equal(ctx, options[4]);
                callback(ctx, 58 * radius, 73 * radius, 5 * radius);
                equal(ctx, options[4]);
                callback(ctx, 58 * radius, 50 * radius, 2 * radius);
                equal(ctx, options[5]);
                callback(ctx, 43 * radius, 65 * radius, 2 * radius);
                equal(ctx, options[5]);
                callback(ctx, 58 * radius, 73 * radius, 2 * radius);
                equal(ctx, options[5]);
                return hash;
            }
        function testTextureCanvas(radius, result, testCase)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var ctx = hash[b[9]]('2d');
                hash[b[187]] = 180 * radius;
                hash[b[236]] = 120 * radius;
                ctx[b[150]](-65 * radius, -35 * radius);
                ctx[b[277]] = result ? 0.5 : 1;
                ctx[b[150]](0, 10 * radius);
                ctx[b[33]]();
                ctx[b[150]](150.5 * radius, 63.84375 * radius);
                chroma(ctx, -67 * radius, -16.5 * radius, 134 * radius, 33 * radius, 5 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](80.5 * radius, 75.34375 * radius);
                ctx[b[62]](83 * radius, 106.34375 * radius, 83 * radius, 106.34375 * radius, 85.5 * radius, 137.34375 * radius);
                ctx[b[62]](93 * radius, 135.84375 * radius, 93 * radius, 135.84375 * radius, 100.5 * radius, 134.34375 * radius);
                ctx[b[62]](99.5 * radius, 100.84375 * radius, 99.5 * radius, 100.84375 * radius, 98.5 * radius, 67.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](206.5 * radius, 71.34375 * radius);
                ctx[b[62]](203.5 * radius, 104.34375 * radius, 203.5 * radius, 104.34375 * radius, 200.5 * radius, 137.34375 * radius);
                ctx[b[62]](208.5 * radius, 137.34375 * radius, 208.5 * radius, 137.34375 * radius, 216.5 * radius, 137.34375 * radius);
                ctx[b[62]](219 * radius, 102.84375 * radius, 219 * radius, 102.84375 * radius, 221.5 * radius, 68.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](136.5 * radius, 75.34375 * radius);
                ctx[b[62]](139 * radius, 94.34375 * radius, 139 * radius, 94.34375 * radius, 141.5 * radius, 113.34375 * radius);
                ctx[b[62]](149.5 * radius, 115.34375 * radius, 149.5 * radius, 115.34375 * radius, 157.5 * radius, 117.34375 * radius);
                ctx[b[62]](162 * radius, 97.34375 * radius, 162 * radius, 97.34375 * radius, 166.5 * radius, 77.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[0]);
                ctx[b[33]]();
                ctx[b[150]](152.5 * radius, 80.84375 * radius);
                ctx[b[65]](3.12);
                chroma(ctx, -73 * radius, -20.5 * radius, 146 * radius, 41 * radius, 5 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[0]);
                ctx[b[277]] = 1;
                ctx[b[150]](0, -10 * radius);
                ctx[b[33]]();
                ctx[b[150]](150.5 * radius, 63.84375 * radius);
                chroma(ctx, -67 * radius, -16.5 * radius, 134 * radius, 33 * radius, 5 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[1], testCase[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](80.5 * radius, 75.34375 * radius);
                ctx[b[62]](83 * radius, 106.34375 * radius, 83 * radius, 106.34375 * radius, 85.5 * radius, 137.34375 * radius);
                ctx[b[62]](93 * radius, 135.84375 * radius, 93 * radius, 135.84375 * radius, 100.5 * radius, 134.34375 * radius);
                ctx[b[62]](99.5 * radius, 100.84375 * radius, 99.5 * radius, 100.84375 * radius, 98.5 * radius, 67.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[1], testCase[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](206.5 * radius, 71.34375 * radius);
                ctx[b[62]](203.5 * radius, 104.34375 * radius, 203.5 * radius, 104.34375 * radius, 200.5 * radius, 137.34375 * radius);
                ctx[b[62]](208.5 * radius, 137.34375 * radius, 208.5 * radius, 137.34375 * radius, 216.5 * radius, 137.34375 * radius);
                ctx[b[62]](219 * radius, 102.84375 * radius, 219 * radius, 102.84375 * radius, 221.5 * radius, 68.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[1], testCase[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](136.5 * radius, 75.34375 * radius);
                ctx[b[62]](139 * radius, 94.34375 * radius, 139 * radius, 94.34375 * radius, 141.5 * radius, 113.34375 * radius);
                ctx[b[62]](149.5 * radius, 115.34375 * radius, 149.5 * radius, 115.34375 * radius, 157.5 * radius, 117.34375 * radius);
                ctx[b[62]](162 * radius, 97.34375 * radius, 162 * radius, 97.34375 * radius, 166.5 * radius, 77.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[1], testCase[2], 4 * radius);
                ctx[b[33]]();
                ctx[b[150]](152.5 * radius, 80.84375 * radius);
                ctx[b[65]](3.12);
                chroma(ctx, -73 * radius, -20.5 * radius, 146 * radius, 41 * radius, 5 * radius);
                ctx[b[210]]();
                equal(ctx, testCase[1], testCase[2], 4 * radius);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](83.5 * radius, 73.34375 * radius);
                ctx[b[62]](93.5 * radius, 70.34375 * radius, 105.5 * radius, 70.34375 * radius, 124.5 * radius, 72.34375 * radius);
                ctx[b[62]](132.5 * radius, 78.34375 * radius, 162.5 * radius, 80.34375 * radius, 176.5 * radius, 76.34375 * radius);
                ctx[b[62]](194.5 * radius, 69.34375 * radius, 192.5 * radius, 68.34375 * radius, 199.5 * radius, 63.34375 * radius);
                ctx[b[62]](204.5 * radius, 63.34375 * radius, 204.5 * radius, 63.34375 * radius, 209.5 * radius, 63.34375 * radius);
                ctx[b[62]](153.5 * radius, 82.34375 * radius, 157.5 * radius, 85.34375 * radius, 209.5 * radius, 63.34375 * radius);
                ctx[b[62]](194.5 * radius, 88.34375 * radius, 162.5 * radius, 87.34375 * radius, 149.5 * radius, 88.34375 * radius);
                ctx[b[62]](129.5 * radius, 81.34375 * radius, 103.5 * radius, 75.34375 * radius, 83.5 * radius, 82.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](137.5 * radius, 65.34375 * radius);
                ctx[b[62]](150.5 * radius, 76.34375 * radius, 170.5 * radius, 71.34375 * radius, 174.5 * radius, 65.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](221.5 * radius, 85.34375 * radius);
                ctx[b[62]](211.5 * radius, 79.34375 * radius, 191.5 * radius, 88.34375 * radius, 181.5 * radius, 96.34375 * radius);
                ctx[b[62]](201.5 * radius, 96.34375 * radius, 201.5 * radius, 96.34375 * radius, 221.5 * radius, 96.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](84.5 * radius, 89.34375 * radius);
                ctx[b[62]](102.5 * radius, 87.34375 * radius, 112.5 * radius, 88.34375 * radius, 119.5 * radius, 97.34375 * radius);
                ctx[b[62]](102 * radius, 98.34375 * radius, 102 * radius, 98.34375 * radius, 84.5 * radius, 99.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](208.5 * radius, 104.34375 * radius);
                ctx[b[62]](208.5 * radius, 110.34375 * radius, 208.5 * radius, 110.34375 * radius, 208.5 * radius, 116.34375 * radius);
                ctx[b[62]](211.5 * radius, 110.34375 * radius, 211.5 * radius, 110.34375 * radius, 214.5 * radius, 104.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](87.5 * radius, 117.34375 * radius);
                ctx[b[62]](92 * radius, 118.84375 * radius, 92 * radius, 118.84375 * radius, 96.5 * radius, 120.34375 * radius);
                ctx[b[62]](93 * radius, 123.84375 * radius, 93 * radius, 123.84375 * radius, 89.5 * radius, 127.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](107.5 * radius, 51.34375 * radius);
                ctx[b[62]](122.5 * radius, 54.34375 * radius, 122.5 * radius, 54.34375 * radius, 137.5 * radius, 57.34375 * radius);
                ctx[b[62]](118 * radius, 57.34375 * radius, 118 * radius, 57.34375 * radius, 98.5 * radius, 57.34375 * radius);
                ctx[b[62]](94.5 * radius, 54.84375 * radius, 94.5 * radius, 54.84375 * radius, 90.5 * radius, 52.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](170.5 * radius, 52.34375 * radius);
                ctx[b[62]](179.5 * radius, 51.84375 * radius, 179.5 * radius, 51.84375 * radius, 188.5 * radius, 51.34375 * radius);
                ctx[b[62]](187.5 * radius, 53.84375 * radius, 187.5 * radius, 53.84375 * radius, 186.5 * radius, 56.34375 * radius);
                ctx[b[62]](177 * radius, 56.34375 * radius, 177 * radius, 56.34375 * radius, 167.5 * radius, 56.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[3]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](80.5 * radius, 69.34375 * radius);
                ctx[b[62]](86.5 * radius, 70.34375 * radius, 86.5 * radius, 70.34375 * radius, 92.5 * radius, 71.34375 * radius);
                ctx[b[62]](86 * radius, 73.34375 * radius, 86 * radius, 73.34375 * radius, 79.5 * radius, 75.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](222.5 * radius, 75.34375 * radius);
                ctx[b[62]](214.5 * radius, 76.34375 * radius, 214.5 * radius, 76.34375 * radius, 206.5 * radius, 77.34375 * radius);
                ctx[b[62]](216.5 * radius, 79.34375 * radius, 216.5 * radius, 79.34375 * radius, 226.5 * radius, 81.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](116.5 * radius, 100.34375 * radius);
                ctx[b[62]](128 * radius, 97.34375 * radius, 128 * radius, 97.34375 * radius, 139.5 * radius, 94.34375 * radius);
                ctx[b[62]](140 * radius, 96.84375 * radius, 140 * radius, 96.84375 * radius, 140.5 * radius, 99.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](112.5 * radius, 48.34375 * radius);
                ctx[b[62]](115.5 * radius, 50.84375 * radius, 115.5 * radius, 50.84375 * radius, 118.5 * radius, 53.34375 * radius);
                ctx[b[62]](131 * radius, 50.84375 * radius, 131 * radius, 50.84375 * radius, 143.5 * radius, 48.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](216.5 * radius, 109.34375 * radius);
                ctx[b[62]](213 * radius, 114.84375 * radius, 213 * radius, 114.84375 * radius, 209.5 * radius, 120.34375 * radius);
                ctx[b[62]](212 * radius, 118.84375 * radius, 212 * radius, 118.84375 * radius, 214.5 * radius, 117.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[2]);
                ctx[b[19]]();
                ctx[b[253]] = 'round';
                ctx[b[4]] = 'round';
                ctx[b[224]](86.5 * radius, 133.34375 * radius);
                ctx[b[62]](89 * radius, 127.34375 * radius, 89 * radius, 127.34375 * radius, 91.5 * radius, 121.34375 * radius);
                ctx[b[62]](92.5 * radius, 127.34375 * radius, 92.5 * radius, 127.34375 * radius, 93.5 * radius, 133.34375 * radius);
                ctx[b[238]]();
                equal(ctx, testCase[2]);
                return hash;
            }
        function verify(a, obj, item)
            /*Scope Closed:false | writes:true*/
            {
                var hash = document('canvas');
                var result = hash[b[9]]('2d');
                hash[b[187]] = 175 * a;
                hash[b[236]] = 106 * a;
                result[b[277]] = obj ? 0.5 : 1;
                result[b[150]](0, 8 * a);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](28 * a, 67 * a);
                result[b[62]](55 * a, 80 * a, 126 * a, 74 * a, 144 * a, 68 * a);
                result[b[62]](144.5 * a, 75 * a, 144.5 * a, 75 * a, 145 * a, 82 * a);
                result[b[62]](114 * a, 94 * a, 47 * a, 91 * a, 28 * a, 82 * a);
                result[b[238]]();
                equal(result, item[0]);
                result[b[277]] = 1;
                result[b[150]](0, -8 * a);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](145 * a, 75 * a);
                result[b[62]](143 * a, 51 * a, 133 * a, 29 * a, 100 * a, 27 * a);
                result[b[62]](52 * a, 21 * a, 37 * a, 37 * a, 31 * a, 54 * a);
                result[b[62]](23 * a, 78 * a, 28 * a, 77 * a, 36 * a, 79 * a);
                result[b[62]](80 * a, 87 * a, 120 * a, 81 * a, 145 * a, 76 * a);
                result[b[238]]();
                equal(result, item[1]);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](38 * a, 46 * a);
                result[b[62]](52 * a, 37 * a, 69 * a, 36 * a, 85 * a, 36 * a);
                result[b[62]](118 * a, 38 * a, 129 * a, 42 * a, 137 * a, 48 * a);
                result[b[62]](135 * a, 45 * a, 135 * a, 45 * a, 133 * a, 42 * a);
                result[b[62]](124 * a, 32 * a, 116 * a, 28 * a, 88 * a, 25 * a);
                result[b[62]](47 * a, 28 * a, 40 * a, 32 * a, 36 * a, 44 * a);
                result[b[238]]();
                equal(result, item[5]);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](145 * a, 75 * a);
                result[b[62]](143 * a, 51 * a, 133 * a, 29 * a, 100 * a, 27 * a);
                result[b[62]](52 * a, 21 * a, 37 * a, 37 * a, 31 * a, 54 * a);
                result[b[62]](23 * a, 78 * a, 28 * a, 77 * a, 36 * a, 79 * a);
                result[b[62]](80 * a, 87 * a, 120 * a, 81 * a, 145 * a, 76 * a);
                result[b[238]]();
                equal(result, void 0, item[2], 4 * a);
                result[b[150]](0, -3 * a);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](28 * a, 67 * a);
                result[b[62]](55 * a, 80 * a, 126 * a, 74 * a, 144 * a, 68 * a);
                result[b[62]](144.5 * a, 75 * a, 144.5 * a, 75 * a, 145 * a, 82 * a);
                result[b[62]](114 * a, 94 * a, 47 * a, 91 * a, 28 * a, 82 * a);
                result[b[238]]();
                equal(result, item[10], item[10], 4 * a);
                result[b[150]](0, 3 * a);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](131 * a, 43 * a);
                result[b[62]](145 * a, 40 * a, 148 * a, 32 * a, 147 * a, 17 * a);
                result[b[62]](166 * a, 39 * a, 155 * a, 62 * a, 140 * a, 67 * a);
                result[b[62]](128 * a, 65 * a, 128 * a, 52 * a, 131 * a, 45 * a);
                result[b[238]]();
                equal(result, item[3]);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](41 * a, 43 * a);
                result[b[62]](30 * a, 42 * a, 24 * a, 33 * a, 25 * a, 17 * a);
                result[b[62]](7 * a, 34 * a, 17 * a, 63 * a, 33 * a, 66 * a);
                result[b[62]](45 * a, 59 * a, 44 * a, 53 * a, 42 * a, 44 * a);
                result[b[238]]();
                equal(result, item[3]);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](24 * a, 19 * a);
                result[b[62]](24 * a, 35 * a, 35 * a, 42 * a, 42 * a, 44 * a);
                result[b[62]](43 * a, 51 * a, 43 * a, 48 * a, 43 * a, 56 * a);
                result[b[62]](25 * a, 47 * a, 17 * a, 36 * a, 23 * a, 20 * a);
                result[b[238]]();
                equal(result, item[6]);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](148 * a, 18 * a);
                result[b[62]](159 * a, 44 * a, 139 * a, 52 * a, 130 * a, 55 * a);
                result[b[62]](129 * a, 48 * a, 129 * a, 46 * a, 131 * a, 43 * a);
                result[b[62]](144 * a, 37 * a, 148 * a, 35 * a, 147 * a, 18 * a);
                result[b[238]]();
                equal(result, item[6]);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](131 * a, 43 * a);
                result[b[62]](145 * a, 40 * a, 148 * a, 32 * a, 147 * a, 17 * a);
                result[b[62]](166 * a, 39 * a, 155 * a, 62 * a, 140 * a, 67 * a);
                result[b[62]](128 * a, 65 * a, 128 * a, 52 * a, 131 * a, 45 * a);
                result[b[238]]();
                equal(result, void 0, item[4], 4 * a);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](41 * a, 43 * a);
                result[b[62]](30 * a, 42 * a, 24 * a, 33 * a, 25 * a, 17 * a);
                result[b[62]](7 * a, 34 * a, 17 * a, 63 * a, 33 * a, 66 * a);
                result[b[62]](45 * a, 59 * a, 44 * a, 53 * a, 42 * a, 44 * a);
                result[b[238]]();
                equal(result, void 0, item[4], 4 * a);
                result[b[33]]();
                result[b[150]](87 * a, 34.5 * a);
                result[b[65]](0);
                chroma(result, -8 * a, -10.5 * a, 16 * a, 21 * a, 10 * a);
                result[b[210]]();
                equal(result, item[7], item[2], 4 * a);
                result[b[33]]();
                result[b[150]](87 * a, 57 * a);
                result[b[65]](0);
                chroma(result, -8 * a, -23 * a, 16 * a, 46 * a, 10 * a);
                result[b[210]]();
                equal(result, item[8], item[2], 4 * a);
                callback(result, 87 * a, 39 * a, 4.123105625617661 * a);
                equal(result, item[9], item[2], 4 * a);
                callback(result, 87 * a, 60 * a, 4.242640687119285 * a);
                equal(result, item[9], item[2], 4 * a);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](28 * a, 67 * a);
                result[b[62]](55 * a, 80 * a, 126 * a, 74 * a, 144 * a, 68 * a);
                result[b[62]](144.5 * a, 75 * a, 144.5 * a, 75 * a, 145 * a, 82 * a);
                result[b[62]](114 * a, 94 * a, 47 * a, 91 * a, 28 * a, 82 * a);
                result[b[238]]();
                equal(result, item[8], item[2], 4 * a);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](27 * a, 69 * a);
                result[b[62]](13 * a, 77 * a, 16 * a, 74 * a, 27 * a, 80 * a);
                result[b[238]]();
                equal(result, item[9], item[2], 4 * a);
                result[b[19]]();
                result[b[253]] = 'round';
                result[b[4]] = 'round';
                result[b[224]](145 * a, 70 * a);
                result[b[62]](149.5 * a, 72 * a, 149.5 * a, 72 * a, 154 * a, 74 * a);
                result[b[62]](150 * a, 77 * a, 150 * a, 77 * a, 146 * a, 80 * a);
                result[b[238]]();
                equal(result, item[9], item[2], 4 * a);
                callback(result, 50 * a, 80 * a, 5 * a);
                equal(result, item[9], item[2], 4 * a);
                callback(result, 86.01141357421875 * a, 81.76705932617188 * a, 5 * a);
                equal(result, item[9], item[2], 4 * a);
                callback(result, 119.01141357421875 * a, 80.13069152832031 * a, 5 * a);
                equal(result, item[9], item[2], 4 * a);
                return hash;
            }
        function addEmptyModel(a, array, item)
            /*Scope Closed:false | writes:true*/
            {
                array = document('canvas');
                var c = array[b[9]]('2d');
                array[b[187]] = 142 * a;
                array[b[236]] = 118 * a;
                c[b[33]]();
                c[b[150]](70.16665649414062 * a, 38.20831298828125 * a);
                chroma(c, -58.5 * a, -27.5 * a, 117 * a, 55 * a, 20 * a);
                c[b[210]]();
                equal(c, item[0], item[1], 4 * a);
                c[b[33]]();
                c[b[150]](70 * a, 42.70831298828125 * a);
                chroma(c, -61 * a, -20 * a, 122 * a, 40 * a, 20 * a);
                c[b[210]]();
                equal(c, item[2], item[1], 4 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](123 * a, 70.375 * a);
                c[b[62]](115 * a, 99.375 * a, 119 * a, 85.375 * a, 115 * a, 100.375 * a);
                c[b[62]](112 * a, 116.375 * a, 117 * a, 109.375 * a, 131 * a, 100.375 * a);
                c[b[62]](131 * a, 83.375 * a, 131 * a, 83.375 * a, 131 * a, 66.375 * a);
                c[b[238]]();
                equal(c, item[2], item[1], 4 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](11 * a, 68.375 * a);
                c[b[62]](11.166656494140625 * a, 84.375 * a, 9 * a, 99.375 * a, 10 * a, 100.375 * a);
                c[b[62]](35 * a, 113.375 * a, 27 * a, 110.375 * a, 25 * a, 95.375 * a);
                c[b[62]](16 * a, 68.375 * a, 17 * a, 69.375 * a, 17 * a, 68.375 * a);
                c[b[238]]();
                equal(c, item[2], item[1], 4 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](46 * a, 32.375 * a);
                c[b[62]](43 * a, 8.375 * a, 45 * a, 7.375 * a, 56 * a, 6.375 * a);
                c[b[62]](105 * a, 4.375 * a, 102 * a, 6.375 * a, 97 * a, 32.375 * a);
                c[b[62]](138 * a, 43.375 * a, 133 * a, 45.375 * a, 133 * a, 58.375 * a);
                c[b[62]](133 * a, 85.375 * a, 125 * a, 74.375 * a, 111 * a, 70.375 * a);
                c[b[62]](70 * a, 69.875 * a, 29 * a, 69.375 * a, 29 * a, 69.375 * a);
                c[b[62]](7 * a, 84.375 * a, 7 * a, 70.375 * a, 7 * a, 59.375 * a);
                c[b[62]](6 * a, 28.375 * a, 32 * a, 39.375 * a, 44 * a, 32.375 * a);
                c[b[238]]();
                equal(c, item[2], item[1], 4 * a);
                callback(c, 71 * a, 44.375 * a, 16.55294535724685 * a);
                equal(c, item[2], item[1], 4 * a);
                callback(c, 71 * a, 43.70831298828125 * a, 8.94427190999916 * a);
                equal(c, item[2], item[1], 4 * a);
                return array;
            }
        function __dynamicSectionWriter(a, out, args)
            /*Scope Closed:false | writes:true*/
            {
                out = document('canvas');
                var c = out[b[9]]('2d');
                out[b[187]] = 142 * a;
                out[b[236]] = 118 * a;
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](111 * a, 27.3671875 * a);
                c[b[62]](128 * a, 9.3671875 * a, 125 * a, 13.3671875 * a, 126 * a, 21.3671875 * a);
                c[b[62]](126 * a, 33.3671875 * a, 119 * a, 43.3671875 * a, 118 * a, 42.3671875 * a);
                c[b[238]]();
                equal(c, args[3], args[4], 4 * a);
                c[b[19]]();
                c[b[253]] = 'round';
                c[b[4]] = 'round';
                c[b[224]](31 * a, 23.3671875 * a);
                c[b[62]](17 * a, 15.3671875 * a, 16 * a, 14.3671875 * a, 17 * a, 20.3671875 * a);
                c[b[62]](22 * a, 33.3671875 * a, 20 * a, 27.3671875 * a, 24 * a, 34.3671875 * a);
                c[b[238]]();
                equal(c, args[3], args[4], 4 * a);
                c[b[33]]();
                c[b[150]](70.5 * a, 34.8671875 * a);
                c[b[65]](0);
                chroma(c, -49.5 * a, -21.5 * a, 99 * a, 43 * a, 15 * a);
                c[b[210]]();
                equal(c, args[0], args[1], 4 * a);
                c[b[33]]();
                c[b[150]](71 * a, 40.8671875 * a);
                c[b[65]](0);
                chroma(c, -49 * a, -12.5 * a, 98 * a, 25 * a, 15 * a);
                c[b[210]]();
                equal(c, args[2], args[1], 4 * a);
                c[b[19]]();	
            }
    });